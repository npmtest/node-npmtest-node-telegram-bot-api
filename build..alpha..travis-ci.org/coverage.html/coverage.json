{"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_node_telegram_bot_api */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/lib.npmtest_node_telegram_bot_api.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/lib.npmtest_node_telegram_bot_api.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":66}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":72}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_node_telegram_bot_api */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_node_telegram_bot_api = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_node_telegram_bot_api = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":65}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":79},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-node-telegram-bot-api && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_node_telegram_bot_api */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_node_telegram_bot_api","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_node_telegram_bot_api.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_node_telegram_bot_api.rollup.js'] =","            local.assetsDict['/assets.npmtest_node_telegram_bot_api.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_node_telegram_bot_api.__dirname + '/lib.npmtest_node_telegram_bot_api.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/node_modules/node-telegram-bot-api/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/node_modules/node-telegram-bot-api/index.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1},"b":{"1":[0,1]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":71}},"2":{"start":{"line":7,"column":0},"end":{"line":13,"column":1}},"3":{"start":{"line":8,"column":2},"end":{"line":8,"column":61}},"4":{"start":{"line":9,"column":2},"end":{"line":9,"column":80}},"5":{"start":{"line":10,"column":2},"end":{"line":10,"column":45}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":45}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":0},"end":{"line":7,"column":0}},{"start":{"line":7,"column":0},"end":{"line":7,"column":0}}]}},"code":["/**"," * If running on Nodejs 4.x and below, we load the transpiled code."," * Otherwise, we use the ES6 code."," * We are deprecating support for Node.js v4.x and below."," */","const majorVersion = parseInt(process.versions.node.split('.')[0], 10);","if (majorVersion <= 4) {","  const deprecate = require('depd')('node-telegram-bot-api');","  deprecate('Node.js v4.x and below will no longer be supported in the future');","  module.exports = require('./lib/telegram');","} else {","  module.exports = require('./src/telegram');","}",""],"l":{"6":1,"7":1,"8":0,"9":0,"10":0,"12":1}},"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/node_modules/node-telegram-bot-api/src/telegram.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/node_modules/node-telegram-bot-api/src/telegram.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0},"fnMap":{"1":{"name":"(anonymous_1)","line":35,"loc":{"start":{"line":35,"column":19},"end":{"line":35,"column":22}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":25},"end":{"line":39,"column":28}}},"3":{"name":"(anonymous_3)","line":85,"loc":{"start":{"line":85,"column":13},"end":{"line":85,"column":35}}},"4":{"name":"(anonymous_4)","line":121,"loc":{"start":{"line":121,"column":11},"end":{"line":121,"column":19}}},"5":{"name":"(anonymous_5)","line":132,"loc":{"start":{"line":132,"column":17},"end":{"line":132,"column":23}}},"6":{"name":"(anonymous_6)","line":146,"loc":{"start":{"line":146,"column":10},"end":{"line":146,"column":32}}},"7":{"name":"(anonymous_7)","line":200,"loc":{"start":{"line":200,"column":17},"end":{"line":200,"column":30}}},"8":{"name":"(anonymous_8)","line":258,"loc":{"start":{"line":258,"column":14},"end":{"line":258,"column":29}}},"9":{"name":"(anonymous_9)","line":275,"loc":{"start":{"line":275,"column":13},"end":{"line":275,"column":16}}},"10":{"name":"(anonymous_10)","line":286,"loc":{"start":{"line":286,"column":13},"end":{"line":286,"column":16}}},"11":{"name":"(anonymous_11)","line":297,"loc":{"start":{"line":297,"column":11},"end":{"line":297,"column":14}}},"12":{"name":"(anonymous_12)","line":307,"loc":{"start":{"line":307,"column":13},"end":{"line":307,"column":16}}},"13":{"name":"(anonymous_13)","line":322,"loc":{"start":{"line":322,"column":14},"end":{"line":322,"column":17}}},"14":{"name":"(anonymous_14)","line":334,"loc":{"start":{"line":334,"column":16},"end":{"line":334,"column":19}}},"15":{"name":"(anonymous_15)","line":343,"loc":{"start":{"line":343,"column":7},"end":{"line":343,"column":10}}},"16":{"name":"(anonymous_16)","line":360,"loc":{"start":{"line":360,"column":12},"end":{"line":360,"column":32}}},"17":{"name":"(anonymous_17)","line":398,"loc":{"start":{"line":398,"column":15},"end":{"line":398,"column":18}}},"18":{"name":"(anonymous_18)","line":410,"loc":{"start":{"line":410,"column":16},"end":{"line":410,"column":19}}},"19":{"name":"(anonymous_19)","line":423,"loc":{"start":{"line":423,"column":12},"end":{"line":423,"column":24}}},"20":{"name":"(anonymous_20)","line":448,"loc":{"start":{"line":448,"column":15},"end":{"line":448,"column":24}}},"21":{"name":"(anonymous_21)","line":536,"loc":{"start":{"line":536,"column":13},"end":{"line":536,"column":39}}},"22":{"name":"(anonymous_22)","line":550,"loc":{"start":{"line":550,"column":19},"end":{"line":550,"column":55}}},"23":{"name":"(anonymous_23)","line":565,"loc":{"start":{"line":565,"column":16},"end":{"line":565,"column":59}}},"24":{"name":"(anonymous_24)","line":581,"loc":{"start":{"line":581,"column":11},"end":{"line":581,"column":41}}},"25":{"name":"(anonymous_25)","line":605,"loc":{"start":{"line":605,"column":11},"end":{"line":605,"column":41}}},"26":{"name":"(anonymous_26)","line":630,"loc":{"start":{"line":630,"column":14},"end":{"line":630,"column":57}}},"27":{"name":"(anonymous_27)","line":657,"loc":{"start":{"line":657,"column":13},"end":{"line":657,"column":45}}},"28":{"name":"(anonymous_28)","line":681,"loc":{"start":{"line":681,"column":11},"end":{"line":681,"column":41}}},"29":{"name":"(anonymous_29)","line":705,"loc":{"start":{"line":705,"column":11},"end":{"line":705,"column":41}}},"30":{"name":"(anonymous_30)","line":733,"loc":{"start":{"line":733,"column":16},"end":{"line":733,"column":33}}},"31":{"name":"(anonymous_31)","line":753,"loc":{"start":{"line":753,"column":16},"end":{"line":753,"column":33}}},"32":{"name":"(anonymous_32)","line":772,"loc":{"start":{"line":772,"column":17},"end":{"line":772,"column":34}}},"33":{"name":"(anonymous_33)","line":793,"loc":{"start":{"line":793,"column":21},"end":{"line":793,"column":67}}},"34":{"name":"(anonymous_34)","line":813,"loc":{"start":{"line":813,"column":17},"end":{"line":813,"column":35}}},"35":{"name":"(anonymous_35)","line":831,"loc":{"start":{"line":831,"column":20},"end":{"line":831,"column":41}}},"36":{"name":"(anonymous_36)","line":849,"loc":{"start":{"line":849,"column":24},"end":{"line":849,"column":49}}},"37":{"name":"(anonymous_37)","line":865,"loc":{"start":{"line":865,"column":22},"end":{"line":865,"column":42}}},"38":{"name":"(anonymous_38)","line":893,"loc":{"start":{"line":893,"column":14},"end":{"line":893,"column":55}}},"39":{"name":"(anonymous_39)","line":913,"loc":{"start":{"line":913,"column":11},"end":{"line":913,"column":68}}},"40":{"name":"(anonymous_40)","line":933,"loc":{"start":{"line":933,"column":13},"end":{"line":933,"column":57}}},"41":{"name":"(anonymous_41)","line":950,"loc":{"start":{"line":950,"column":9},"end":{"line":950,"column":18}}},"42":{"name":"(anonymous_42)","line":967,"loc":{"start":{"line":967,"column":13},"end":{"line":967,"column":22}}},"43":{"name":"(anonymous_43)","line":980,"loc":{"start":{"line":980,"column":14},"end":{"line":980,"column":36}}},"44":{"name":"(anonymous_44)","line":1003,"loc":{"start":{"line":1003,"column":8},"end":{"line":1003,"column":27}}},"45":{"name":"(anonymous_45)","line":1015,"loc":{"start":{"line":1015,"column":18},"end":{"line":1015,"column":48}}},"46":{"name":"(anonymous_46)","line":1033,"loc":{"start":{"line":1033,"column":21},"end":{"line":1033,"column":39}}},"47":{"name":"(anonymous_47)","line":1051,"loc":{"start":{"line":1051,"column":9},"end":{"line":1051,"column":18}}},"48":{"name":"(anonymous_48)","line":1064,"loc":{"start":{"line":1064,"column":23},"end":{"line":1064,"column":32}}},"49":{"name":"(anonymous_49)","line":1077,"loc":{"start":{"line":1077,"column":21},"end":{"line":1077,"column":30}}},"50":{"name":"(anonymous_50)","line":1091,"loc":{"start":{"line":1091,"column":15},"end":{"line":1091,"column":32}}},"51":{"name":"(anonymous_51)","line":1105,"loc":{"start":{"line":1105,"column":11},"end":{"line":1105,"column":20}}},"52":{"name":"(anonymous_52)","line":1120,"loc":{"start":{"line":1120,"column":10},"end":{"line":1120,"column":45}}},"53":{"name":"(anonymous_53)","line":1134,"loc":{"start":{"line":1134,"column":14},"end":{"line":1134,"column":41}}},"54":{"name":"(anonymous_54)","line":1147,"loc":{"start":{"line":1147,"column":19},"end":{"line":1147,"column":39}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":56}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":56}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":43}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":43}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":34}},"12":{"start":{"line":14,"column":0},"end":{"line":14,"column":33}},"13":{"start":{"line":15,"column":0},"end":{"line":15,"column":29}},"14":{"start":{"line":16,"column":0},"end":{"line":16,"column":29}},"15":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}},"16":{"start":{"line":18,"column":0},"end":{"line":18,"column":25}},"17":{"start":{"line":19,"column":0},"end":{"line":19,"column":29}},"18":{"start":{"line":20,"column":0},"end":{"line":20,"column":59}},"19":{"start":{"line":22,"column":0},"end":{"line":26,"column":2}},"20":{"start":{"line":29,"column":0},"end":{"line":31,"column":3}},"21":{"start":{"line":36,"column":4},"end":{"line":36,"column":18}},"22":{"start":{"line":40,"column":4},"end":{"line":40,"column":25}},"23":{"start":{"line":86,"column":4},"end":{"line":86,"column":12}},"24":{"start":{"line":87,"column":4},"end":{"line":87,"column":23}},"25":{"start":{"line":88,"column":4},"end":{"line":88,"column":27}},"26":{"start":{"line":89,"column":4},"end":{"line":89,"column":94}},"27":{"start":{"line":90,"column":4},"end":{"line":90,"column":94}},"28":{"start":{"line":91,"column":4},"end":{"line":91,"column":79}},"29":{"start":{"line":92,"column":4},"end":{"line":92,"column":96}},"30":{"start":{"line":93,"column":4},"end":{"line":93,"column":35}},"31":{"start":{"line":94,"column":4},"end":{"line":94,"column":30}},"32":{"start":{"line":95,"column":4},"end":{"line":95,"column":30}},"33":{"start":{"line":96,"column":4},"end":{"line":96,"column":25}},"34":{"start":{"line":97,"column":4},"end":{"line":97,"column":25}},"35":{"start":{"line":99,"column":4},"end":{"line":104,"column":5}},"36":{"start":{"line":100,"column":6},"end":{"line":100,"column":50}},"37":{"start":{"line":101,"column":6},"end":{"line":103,"column":7}},"38":{"start":{"line":102,"column":8},"end":{"line":102,"column":28}},"39":{"start":{"line":106,"column":4},"end":{"line":111,"column":5}},"40":{"start":{"line":107,"column":6},"end":{"line":107,"column":48}},"41":{"start":{"line":108,"column":6},"end":{"line":110,"column":7}},"42":{"start":{"line":109,"column":8},"end":{"line":109,"column":27}},"43":{"start":{"line":122,"column":4},"end":{"line":122,"column":66}},"44":{"start":{"line":133,"column":4},"end":{"line":133,"column":41}},"45":{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},"46":{"start":{"line":135,"column":6},"end":{"line":135,"column":53}},"47":{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},"48":{"start":{"line":148,"column":6},"end":{"line":148,"column":87}},"49":{"start":{"line":151,"column":4},"end":{"line":153,"column":5}},"50":{"start":{"line":152,"column":6},"end":{"line":152,"column":51}},"51":{"start":{"line":155,"column":4},"end":{"line":157,"column":5}},"52":{"start":{"line":156,"column":6},"end":{"line":156,"column":41}},"53":{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},"54":{"start":{"line":159,"column":6},"end":{"line":159,"column":39}},"55":{"start":{"line":162,"column":4},"end":{"line":162,"column":28}},"56":{"start":{"line":163,"column":4},"end":{"line":163,"column":40}},"57":{"start":{"line":164,"column":4},"end":{"line":164,"column":27}},"58":{"start":{"line":165,"column":4},"end":{"line":165,"column":43}},"59":{"start":{"line":166,"column":4},"end":{"line":166,"column":27}},"60":{"start":{"line":167,"column":4},"end":{"line":167,"column":39}},"61":{"start":{"line":168,"column":4},"end":{"line":186,"column":9}},"62":{"start":{"line":170,"column":8},"end":{"line":170,"column":17}},"63":{"start":{"line":171,"column":8},"end":{"line":175,"column":9}},"64":{"start":{"line":172,"column":10},"end":{"line":172,"column":51}},"65":{"start":{"line":174,"column":10},"end":{"line":174,"column":93}},"66":{"start":{"line":177,"column":8},"end":{"line":179,"column":9}},"67":{"start":{"line":178,"column":10},"end":{"line":178,"column":29}},"68":{"start":{"line":181,"column":8},"end":{"line":181,"column":87}},"69":{"start":{"line":184,"column":8},"end":{"line":184,"column":40}},"70":{"start":{"line":184,"column":28},"end":{"line":184,"column":40}},"71":{"start":{"line":185,"column":8},"end":{"line":185,"column":43}},"72":{"start":{"line":201,"column":4},"end":{"line":201,"column":17}},"73":{"start":{"line":202,"column":4},"end":{"line":202,"column":17}},"74":{"start":{"line":203,"column":4},"end":{"line":203,"column":15}},"75":{"start":{"line":204,"column":4},"end":{"line":247,"column":5}},"76":{"start":{"line":207,"column":6},"end":{"line":207,"column":87}},"77":{"start":{"line":208,"column":6},"end":{"line":208,"column":20}},"78":{"start":{"line":209,"column":6},"end":{"line":215,"column":8}},"79":{"start":{"line":216,"column":11},"end":{"line":247,"column":5}},"80":{"start":{"line":217,"column":6},"end":{"line":217,"column":38}},"81":{"start":{"line":218,"column":6},"end":{"line":220,"column":7}},"82":{"start":{"line":219,"column":8},"end":{"line":219,"column":68}},"83":{"start":{"line":221,"column":6},"end":{"line":221,"column":20}},"84":{"start":{"line":222,"column":6},"end":{"line":228,"column":8}},"85":{"start":{"line":229,"column":11},"end":{"line":247,"column":5}},"86":{"start":{"line":234,"column":6},"end":{"line":234,"column":20}},"87":{"start":{"line":235,"column":11},"end":{"line":247,"column":5}},"88":{"start":{"line":236,"column":6},"end":{"line":236,"column":37}},"89":{"start":{"line":237,"column":6},"end":{"line":237,"column":20}},"90":{"start":{"line":238,"column":6},"end":{"line":244,"column":8}},"91":{"start":{"line":246,"column":6},"end":{"line":246,"column":20}},"92":{"start":{"line":248,"column":4},"end":{"line":248,"column":30}},"93":{"start":{"line":259,"column":4},"end":{"line":261,"column":5}},"94":{"start":{"line":260,"column":6},"end":{"line":260,"column":97}},"95":{"start":{"line":262,"column":4},"end":{"line":262,"column":86}},"96":{"start":{"line":263,"column":4},"end":{"line":265,"column":5}},"97":{"start":{"line":264,"column":6},"end":{"line":264,"column":51}},"98":{"start":{"line":266,"column":4},"end":{"line":266,"column":40}},"99":{"start":{"line":276,"column":4},"end":{"line":276,"column":57}},"100":{"start":{"line":277,"column":4},"end":{"line":277,"column":31}},"101":{"start":{"line":287,"column":4},"end":{"line":289,"column":5}},"102":{"start":{"line":288,"column":6},"end":{"line":288,"column":31}},"103":{"start":{"line":290,"column":4},"end":{"line":290,"column":32}},"104":{"start":{"line":298,"column":4},"end":{"line":298,"column":61}},"105":{"start":{"line":308,"column":4},"end":{"line":310,"column":5}},"106":{"start":{"line":309,"column":6},"end":{"line":309,"column":97}},"107":{"start":{"line":311,"column":4},"end":{"line":313,"column":5}},"108":{"start":{"line":312,"column":6},"end":{"line":312,"column":51}},"109":{"start":{"line":314,"column":4},"end":{"line":314,"column":32}},"110":{"start":{"line":323,"column":4},"end":{"line":325,"column":5}},"111":{"start":{"line":324,"column":6},"end":{"line":324,"column":31}},"112":{"start":{"line":326,"column":4},"end":{"line":326,"column":33}},"113":{"start":{"line":335,"column":4},"end":{"line":335,"column":58}},"114":{"start":{"line":344,"column":4},"end":{"line":344,"column":26}},"115":{"start":{"line":345,"column":4},"end":{"line":345,"column":32}},"116":{"start":{"line":364,"column":4},"end":{"line":364,"column":13}},"117":{"start":{"line":366,"column":4},"end":{"line":372,"column":5}},"118":{"start":{"line":367,"column":6},"end":{"line":367,"column":96}},"119":{"start":{"line":368,"column":6},"end":{"line":368,"column":21}},"120":{"start":{"line":369,"column":6},"end":{"line":369,"column":19}},"121":{"start":{"line":371,"column":6},"end":{"line":371,"column":33}},"122":{"start":{"line":374,"column":4},"end":{"line":376,"column":6}},"123":{"start":{"line":377,"column":4},"end":{"line":377,"column":22}},"124":{"start":{"line":379,"column":4},"end":{"line":387,"column":5}},"125":{"start":{"line":380,"column":6},"end":{"line":386,"column":7}},"126":{"start":{"line":381,"column":8},"end":{"line":381,"column":67}},"127":{"start":{"line":382,"column":8},"end":{"line":382,"column":36}},"128":{"start":{"line":383,"column":8},"end":{"line":383,"column":42}},"129":{"start":{"line":385,"column":8},"end":{"line":385,"column":34}},"130":{"start":{"line":389,"column":4},"end":{"line":389,"column":45}},"131":{"start":{"line":399,"column":4},"end":{"line":399,"column":42}},"132":{"start":{"line":411,"column":4},"end":{"line":411,"column":43}},"133":{"start":{"line":427,"column":4},"end":{"line":436,"column":5}},"134":{"start":{"line":429,"column":6},"end":{"line":429,"column":109}},"135":{"start":{"line":430,"column":6},"end":{"line":434,"column":8}},"136":{"start":{"line":438,"column":4},"end":{"line":438,"column":49}},"137":{"start":{"line":449,"column":4},"end":{"line":449,"column":39}},"138":{"start":{"line":450,"column":4},"end":{"line":450,"column":35}},"139":{"start":{"line":451,"column":4},"end":{"line":451,"column":48}},"140":{"start":{"line":452,"column":4},"end":{"line":452,"column":44}},"141":{"start":{"line":453,"column":4},"end":{"line":453,"column":57}},"142":{"start":{"line":454,"column":4},"end":{"line":454,"column":44}},"143":{"start":{"line":455,"column":4},"end":{"line":455,"column":59}},"144":{"start":{"line":456,"column":4},"end":{"line":456,"column":48}},"145":{"start":{"line":458,"column":4},"end":{"line":525,"column":5}},"146":{"start":{"line":459,"column":6},"end":{"line":459,"column":50}},"147":{"start":{"line":460,"column":6},"end":{"line":460,"column":36}},"148":{"start":{"line":461,"column":6},"end":{"line":466,"column":8}},"149":{"start":{"line":462,"column":8},"end":{"line":465,"column":9}},"150":{"start":{"line":463,"column":10},"end":{"line":463,"column":57}},"151":{"start":{"line":464,"column":10},"end":{"line":464,"column":42}},"152":{"start":{"line":467,"column":6},"end":{"line":467,"column":59}},"153":{"start":{"line":468,"column":6},"end":{"line":481,"column":7}},"154":{"start":{"line":469,"column":8},"end":{"line":469,"column":30}},"155":{"start":{"line":470,"column":8},"end":{"line":480,"column":11}},"156":{"start":{"line":471,"column":10},"end":{"line":471,"column":65}},"157":{"start":{"line":472,"column":10},"end":{"line":472,"column":55}},"158":{"start":{"line":473,"column":10},"end":{"line":475,"column":11}},"159":{"start":{"line":474,"column":12},"end":{"line":474,"column":25}},"160":{"start":{"line":476,"column":10},"end":{"line":476,"column":42}},"161":{"start":{"line":477,"column":10},"end":{"line":477,"column":40}},"162":{"start":{"line":479,"column":10},"end":{"line":479,"column":45}},"163":{"start":{"line":482,"column":6},"end":{"line":494,"column":7}},"164":{"start":{"line":484,"column":8},"end":{"line":493,"column":11}},"165":{"start":{"line":486,"column":10},"end":{"line":492,"column":11}},"166":{"start":{"line":488,"column":12},"end":{"line":491,"column":13}},"167":{"start":{"line":490,"column":14},"end":{"line":490,"column":38}},"168":{"start":{"line":495,"column":11},"end":{"line":525,"column":5}},"169":{"start":{"line":496,"column":6},"end":{"line":496,"column":63}},"170":{"start":{"line":497,"column":6},"end":{"line":497,"column":49}},"171":{"start":{"line":498,"column":6},"end":{"line":500,"column":7}},"172":{"start":{"line":499,"column":8},"end":{"line":499,"column":56}},"173":{"start":{"line":501,"column":6},"end":{"line":503,"column":7}},"174":{"start":{"line":502,"column":8},"end":{"line":502,"column":59}},"175":{"start":{"line":504,"column":11},"end":{"line":525,"column":5}},"176":{"start":{"line":505,"column":6},"end":{"line":505,"column":59}},"177":{"start":{"line":506,"column":6},"end":{"line":506,"column":45}},"178":{"start":{"line":507,"column":11},"end":{"line":525,"column":5}},"179":{"start":{"line":508,"column":6},"end":{"line":508,"column":72}},"180":{"start":{"line":509,"column":6},"end":{"line":509,"column":58}},"181":{"start":{"line":510,"column":6},"end":{"line":512,"column":7}},"182":{"start":{"line":511,"column":8},"end":{"line":511,"column":65}},"183":{"start":{"line":513,"column":6},"end":{"line":515,"column":7}},"184":{"start":{"line":514,"column":8},"end":{"line":514,"column":68}},"185":{"start":{"line":516,"column":11},"end":{"line":525,"column":5}},"186":{"start":{"line":517,"column":6},"end":{"line":517,"column":59}},"187":{"start":{"line":518,"column":6},"end":{"line":518,"column":45}},"188":{"start":{"line":519,"column":11},"end":{"line":525,"column":5}},"189":{"start":{"line":520,"column":6},"end":{"line":520,"column":74}},"190":{"start":{"line":521,"column":6},"end":{"line":521,"column":60}},"191":{"start":{"line":522,"column":11},"end":{"line":525,"column":5}},"192":{"start":{"line":523,"column":6},"end":{"line":523,"column":63}},"193":{"start":{"line":524,"column":6},"end":{"line":524,"column":49}},"194":{"start":{"line":537,"column":4},"end":{"line":537,"column":26}},"195":{"start":{"line":538,"column":4},"end":{"line":538,"column":21}},"196":{"start":{"line":539,"column":4},"end":{"line":539,"column":50}},"197":{"start":{"line":551,"column":4},"end":{"line":551,"column":41}},"198":{"start":{"line":552,"column":4},"end":{"line":552,"column":43}},"199":{"start":{"line":553,"column":4},"end":{"line":553,"column":56}},"200":{"start":{"line":566,"column":4},"end":{"line":566,"column":26}},"201":{"start":{"line":567,"column":4},"end":{"line":567,"column":35}},"202":{"start":{"line":568,"column":4},"end":{"line":568,"column":32}},"203":{"start":{"line":569,"column":4},"end":{"line":569,"column":53}},"204":{"start":{"line":582,"column":4},"end":{"line":584,"column":6}},"205":{"start":{"line":585,"column":4},"end":{"line":585,"column":29}},"206":{"start":{"line":586,"column":4},"end":{"line":592,"column":5}},"207":{"start":{"line":587,"column":6},"end":{"line":587,"column":60}},"208":{"start":{"line":588,"column":6},"end":{"line":588,"column":34}},"209":{"start":{"line":589,"column":6},"end":{"line":589,"column":34}},"210":{"start":{"line":591,"column":6},"end":{"line":591,"column":32}},"211":{"start":{"line":593,"column":4},"end":{"line":593,"column":44}},"212":{"start":{"line":606,"column":4},"end":{"line":608,"column":6}},"213":{"start":{"line":609,"column":4},"end":{"line":609,"column":29}},"214":{"start":{"line":610,"column":4},"end":{"line":616,"column":5}},"215":{"start":{"line":611,"column":6},"end":{"line":611,"column":60}},"216":{"start":{"line":612,"column":6},"end":{"line":612,"column":34}},"217":{"start":{"line":613,"column":6},"end":{"line":613,"column":34}},"218":{"start":{"line":615,"column":6},"end":{"line":615,"column":32}},"219":{"start":{"line":617,"column":4},"end":{"line":617,"column":44}},"220":{"start":{"line":631,"column":4},"end":{"line":633,"column":6}},"221":{"start":{"line":634,"column":4},"end":{"line":634,"column":29}},"222":{"start":{"line":635,"column":4},"end":{"line":641,"column":5}},"223":{"start":{"line":636,"column":6},"end":{"line":636,"column":61}},"224":{"start":{"line":637,"column":6},"end":{"line":637,"column":34}},"225":{"start":{"line":638,"column":6},"end":{"line":638,"column":37}},"226":{"start":{"line":640,"column":6},"end":{"line":640,"column":32}},"227":{"start":{"line":642,"column":4},"end":{"line":644,"column":5}},"228":{"start":{"line":643,"column":6},"end":{"line":643,"column":48}},"229":{"start":{"line":645,"column":4},"end":{"line":645,"column":47}},"230":{"start":{"line":658,"column":4},"end":{"line":660,"column":6}},"231":{"start":{"line":661,"column":4},"end":{"line":661,"column":29}},"232":{"start":{"line":662,"column":4},"end":{"line":668,"column":5}},"233":{"start":{"line":663,"column":6},"end":{"line":663,"column":64}},"234":{"start":{"line":664,"column":6},"end":{"line":664,"column":34}},"235":{"start":{"line":665,"column":6},"end":{"line":665,"column":36}},"236":{"start":{"line":667,"column":6},"end":{"line":667,"column":32}},"237":{"start":{"line":669,"column":4},"end":{"line":669,"column":46}},"238":{"start":{"line":682,"column":4},"end":{"line":684,"column":6}},"239":{"start":{"line":685,"column":4},"end":{"line":685,"column":29}},"240":{"start":{"line":686,"column":4},"end":{"line":692,"column":5}},"241":{"start":{"line":687,"column":6},"end":{"line":687,"column":60}},"242":{"start":{"line":688,"column":6},"end":{"line":688,"column":34}},"243":{"start":{"line":689,"column":6},"end":{"line":689,"column":34}},"244":{"start":{"line":691,"column":6},"end":{"line":691,"column":32}},"245":{"start":{"line":693,"column":4},"end":{"line":693,"column":44}},"246":{"start":{"line":706,"column":4},"end":{"line":708,"column":6}},"247":{"start":{"line":709,"column":4},"end":{"line":709,"column":29}},"248":{"start":{"line":710,"column":4},"end":{"line":716,"column":5}},"249":{"start":{"line":711,"column":6},"end":{"line":711,"column":60}},"250":{"start":{"line":712,"column":6},"end":{"line":712,"column":34}},"251":{"start":{"line":713,"column":6},"end":{"line":713,"column":34}},"252":{"start":{"line":715,"column":6},"end":{"line":715,"column":32}},"253":{"start":{"line":717,"column":4},"end":{"line":717,"column":44}},"254":{"start":{"line":734,"column":4},"end":{"line":737,"column":6}},"255":{"start":{"line":738,"column":4},"end":{"line":738,"column":53}},"256":{"start":{"line":754,"column":4},"end":{"line":757,"column":6}},"257":{"start":{"line":758,"column":4},"end":{"line":758,"column":53}},"258":{"start":{"line":773,"column":4},"end":{"line":776,"column":6}},"259":{"start":{"line":777,"column":4},"end":{"line":777,"column":54}},"260":{"start":{"line":794,"column":4},"end":{"line":794,"column":45}},"261":{"start":{"line":795,"column":4},"end":{"line":795,"column":21}},"262":{"start":{"line":796,"column":4},"end":{"line":796,"column":32}},"263":{"start":{"line":797,"column":4},"end":{"line":797,"column":58}},"264":{"start":{"line":814,"column":4},"end":{"line":814,"column":21}},"265":{"start":{"line":815,"column":4},"end":{"line":815,"column":54}},"266":{"start":{"line":832,"column":4},"end":{"line":832,"column":27}},"267":{"start":{"line":833,"column":4},"end":{"line":833,"column":57}},"268":{"start":{"line":850,"column":4},"end":{"line":850,"column":36}},"269":{"start":{"line":851,"column":4},"end":{"line":851,"column":61}},"270":{"start":{"line":869,"column":4},"end":{"line":877,"column":5}},"271":{"start":{"line":871,"column":6},"end":{"line":871,"column":118}},"272":{"start":{"line":872,"column":6},"end":{"line":875,"column":8}},"273":{"start":{"line":878,"column":4},"end":{"line":878,"column":26}},"274":{"start":{"line":879,"column":4},"end":{"line":879,"column":59}},"275":{"start":{"line":894,"column":4},"end":{"line":894,"column":26}},"276":{"start":{"line":895,"column":4},"end":{"line":895,"column":29}},"277":{"start":{"line":896,"column":4},"end":{"line":896,"column":31}},"278":{"start":{"line":897,"column":4},"end":{"line":897,"column":51}},"279":{"start":{"line":914,"column":4},"end":{"line":914,"column":26}},"280":{"start":{"line":915,"column":4},"end":{"line":915,"column":29}},"281":{"start":{"line":916,"column":4},"end":{"line":916,"column":31}},"282":{"start":{"line":917,"column":4},"end":{"line":917,"column":23}},"283":{"start":{"line":918,"column":4},"end":{"line":918,"column":27}},"284":{"start":{"line":919,"column":4},"end":{"line":919,"column":48}},"285":{"start":{"line":934,"column":4},"end":{"line":934,"column":26}},"286":{"start":{"line":935,"column":4},"end":{"line":935,"column":36}},"287":{"start":{"line":936,"column":4},"end":{"line":936,"column":32}},"288":{"start":{"line":937,"column":4},"end":{"line":937,"column":50}},"289":{"start":{"line":951,"column":4},"end":{"line":951,"column":37}},"290":{"start":{"line":952,"column":4},"end":{"line":952,"column":46}},"291":{"start":{"line":968,"column":4},"end":{"line":969,"column":90}},"292":{"start":{"line":969,"column":20},"end":{"line":969,"column":88}},"293":{"start":{"line":981,"column":4},"end":{"line":994,"column":9}},"294":{"start":{"line":984,"column":8},"end":{"line":984,"column":69}},"295":{"start":{"line":986,"column":8},"end":{"line":986,"column":54}},"296":{"start":{"line":989,"column":8},"end":{"line":993,"column":28}},"297":{"start":{"line":991,"column":12},"end":{"line":991,"column":90}},"298":{"start":{"line":1004,"column":4},"end":{"line":1004,"column":57}},"299":{"start":{"line":1016,"column":4},"end":{"line":1016,"column":39}},"300":{"start":{"line":1017,"column":4},"end":{"line":1022,"column":7}},"301":{"start":{"line":1023,"column":4},"end":{"line":1023,"column":14}},"302":{"start":{"line":1034,"column":4},"end":{"line":1036,"column":7}},"303":{"start":{"line":1035,"column":6},"end":{"line":1035,"column":50}},"304":{"start":{"line":1037,"column":4},"end":{"line":1039,"column":5}},"305":{"start":{"line":1038,"column":6},"end":{"line":1038,"column":18}},"306":{"start":{"line":1040,"column":4},"end":{"line":1040,"column":52}},"307":{"start":{"line":1052,"column":4},"end":{"line":1054,"column":6}},"308":{"start":{"line":1055,"column":4},"end":{"line":1055,"column":46}},"309":{"start":{"line":1065,"column":4},"end":{"line":1067,"column":6}},"310":{"start":{"line":1068,"column":4},"end":{"line":1068,"column":60}},"311":{"start":{"line":1078,"column":4},"end":{"line":1080,"column":6}},"312":{"start":{"line":1081,"column":4},"end":{"line":1081,"column":58}},"313":{"start":{"line":1092,"column":4},"end":{"line":1095,"column":6}},"314":{"start":{"line":1096,"column":4},"end":{"line":1096,"column":52}},"315":{"start":{"line":1106,"column":4},"end":{"line":1108,"column":6}},"316":{"start":{"line":1109,"column":4},"end":{"line":1109,"column":48}},"317":{"start":{"line":1121,"column":4},"end":{"line":1121,"column":26}},"318":{"start":{"line":1122,"column":4},"end":{"line":1122,"column":41}},"319":{"start":{"line":1123,"column":4},"end":{"line":1123,"column":47}},"320":{"start":{"line":1135,"column":4},"end":{"line":1135,"column":26}},"321":{"start":{"line":1136,"column":4},"end":{"line":1136,"column":23}},"322":{"start":{"line":1137,"column":4},"end":{"line":1137,"column":51}},"323":{"start":{"line":1148,"column":4},"end":{"line":1148,"column":26}},"324":{"start":{"line":1149,"column":4},"end":{"line":1149,"column":56}},"325":{"start":{"line":1153,"column":0},"end":{"line":1153,"column":29}}},"branchMap":{"1":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":70},"end":{"line":89,"column":75}},{"start":{"line":89,"column":78},"end":{"line":89,"column":93}}]},"2":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":70},"end":{"line":90,"column":75}},{"start":{"line":90,"column":78},"end":{"line":90,"column":93}}]},"3":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":30},"end":{"line":91,"column":48}},{"start":{"line":91,"column":52},"end":{"line":91,"column":78}}]},"4":{"line":92,"type":"cond-expr","locations":[{"start":{"line":92,"column":72},"end":{"line":92,"column":76}},{"start":{"line":92,"column":79},"end":{"line":92,"column":95}}]},"5":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"6":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":6},"end":{"line":101,"column":6}},{"start":{"line":101,"column":6},"end":{"line":101,"column":6}}]},"7":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":10},"end":{"line":101,"column":42}},{"start":{"line":101,"column":46},"end":{"line":101,"column":64}}]},"8":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"9":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":6},"end":{"line":108,"column":6}},{"start":{"line":108,"column":6},"end":{"line":108,"column":6}}]},"10":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":10},"end":{"line":108,"column":41}},{"start":{"line":108,"column":45},"end":{"line":108,"column":62}}]},"11":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"12":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":8},"end":{"line":134,"column":19}},{"start":{"line":134,"column":23},"end":{"line":134,"column":54}}]},"13":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":147,"column":4}},{"start":{"line":147,"column":4},"end":{"line":147,"column":4}}]},"14":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":4},"end":{"line":151,"column":4}},{"start":{"line":151,"column":4},"end":{"line":151,"column":4}}]},"15":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":4},"end":{"line":155,"column":4}},{"start":{"line":155,"column":4},"end":{"line":155,"column":4}}]},"16":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":158,"column":4}},{"start":{"line":158,"column":4},"end":{"line":158,"column":4}}]},"17":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":8},"end":{"line":177,"column":8}},{"start":{"line":177,"column":8},"end":{"line":177,"column":8}}]},"18":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":8},"end":{"line":184,"column":8}},{"start":{"line":184,"column":8},"end":{"line":184,"column":8}}]},"19":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":4},"end":{"line":204,"column":4}},{"start":{"line":204,"column":4},"end":{"line":204,"column":4}}]},"20":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":17},"end":{"line":207,"column":72}},{"start":{"line":207,"column":76},"end":{"line":207,"column":86}}]},"21":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":11},"end":{"line":216,"column":11}},{"start":{"line":216,"column":11},"end":{"line":216,"column":11}}]},"22":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":6},"end":{"line":218,"column":6}},{"start":{"line":218,"column":6},"end":{"line":218,"column":6}}]},"23":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":11},"end":{"line":229,"column":11}},{"start":{"line":229,"column":11},"end":{"line":229,"column":11}}]},"24":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":11},"end":{"line":235,"column":11}},{"start":{"line":235,"column":11},"end":{"line":235,"column":11}}]},"25":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":4},"end":{"line":259,"column":4}},{"start":{"line":259,"column":4},"end":{"line":259,"column":4}}]},"26":{"line":262,"type":"cond-expr","locations":[{"start":{"line":262,"column":63},"end":{"line":262,"column":67}},{"start":{"line":262,"column":70},"end":{"line":262,"column":85}}]},"27":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":4},"end":{"line":263,"column":4}},{"start":{"line":263,"column":4},"end":{"line":263,"column":4}}]},"28":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":287,"column":4}},{"start":{"line":287,"column":4},"end":{"line":287,"column":4}}]},"29":{"line":298,"type":"cond-expr","locations":[{"start":{"line":298,"column":27},"end":{"line":298,"column":52}},{"start":{"line":298,"column":55},"end":{"line":298,"column":60}}]},"30":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":4},"end":{"line":308,"column":4}},{"start":{"line":308,"column":4},"end":{"line":308,"column":4}}]},"31":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":4},"end":{"line":311,"column":4}},{"start":{"line":311,"column":4},"end":{"line":311,"column":4}}]},"32":{"line":323,"type":"if","locations":[{"start":{"line":323,"column":4},"end":{"line":323,"column":4}},{"start":{"line":323,"column":4},"end":{"line":323,"column":4}}]},"33":{"line":335,"type":"cond-expr","locations":[{"start":{"line":335,"column":27},"end":{"line":335,"column":49}},{"start":{"line":335,"column":52},"end":{"line":335,"column":57}}]},"34":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":4},"end":{"line":366,"column":4}},{"start":{"line":366,"column":4},"end":{"line":366,"column":4}}]},"35":{"line":366,"type":"binary-expr","locations":[{"start":{"line":366,"column":8},"end":{"line":366,"column":35}},{"start":{"line":366,"column":39},"end":{"line":366,"column":71}}]},"36":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":4},"end":{"line":379,"column":4}},{"start":{"line":379,"column":4},"end":{"line":379,"column":4}}]},"37":{"line":427,"type":"if","locations":[{"start":{"line":427,"column":4},"end":{"line":427,"column":4}},{"start":{"line":427,"column":4},"end":{"line":427,"column":4}}]},"38":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":4},"end":{"line":458,"column":4}},{"start":{"line":458,"column":4},"end":{"line":458,"column":4}}]},"39":{"line":462,"type":"if","locations":[{"start":{"line":462,"column":8},"end":{"line":462,"column":8}},{"start":{"line":462,"column":8},"end":{"line":462,"column":8}}]},"40":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":6},"end":{"line":468,"column":6}},{"start":{"line":468,"column":6},"end":{"line":468,"column":6}}]},"41":{"line":473,"type":"if","locations":[{"start":{"line":473,"column":10},"end":{"line":473,"column":10}},{"start":{"line":473,"column":10},"end":{"line":473,"column":10}}]},"42":{"line":482,"type":"if","locations":[{"start":{"line":482,"column":6},"end":{"line":482,"column":6}},{"start":{"line":482,"column":6},"end":{"line":482,"column":6}}]},"43":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":10},"end":{"line":486,"column":10}},{"start":{"line":486,"column":10},"end":{"line":486,"column":10}}]},"44":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":12},"end":{"line":488,"column":12}},{"start":{"line":488,"column":12},"end":{"line":488,"column":12}}]},"45":{"line":495,"type":"if","locations":[{"start":{"line":495,"column":11},"end":{"line":495,"column":11}},{"start":{"line":495,"column":11},"end":{"line":495,"column":11}}]},"46":{"line":498,"type":"if","locations":[{"start":{"line":498,"column":6},"end":{"line":498,"column":6}},{"start":{"line":498,"column":6},"end":{"line":498,"column":6}}]},"47":{"line":501,"type":"if","locations":[{"start":{"line":501,"column":6},"end":{"line":501,"column":6}},{"start":{"line":501,"column":6},"end":{"line":501,"column":6}}]},"48":{"line":504,"type":"if","locations":[{"start":{"line":504,"column":11},"end":{"line":504,"column":11}},{"start":{"line":504,"column":11},"end":{"line":504,"column":11}}]},"49":{"line":507,"type":"if","locations":[{"start":{"line":507,"column":11},"end":{"line":507,"column":11}},{"start":{"line":507,"column":11},"end":{"line":507,"column":11}}]},"50":{"line":510,"type":"if","locations":[{"start":{"line":510,"column":6},"end":{"line":510,"column":6}},{"start":{"line":510,"column":6},"end":{"line":510,"column":6}}]},"51":{"line":513,"type":"if","locations":[{"start":{"line":513,"column":6},"end":{"line":513,"column":6}},{"start":{"line":513,"column":6},"end":{"line":513,"column":6}}]},"52":{"line":516,"type":"if","locations":[{"start":{"line":516,"column":11},"end":{"line":516,"column":11}},{"start":{"line":516,"column":11},"end":{"line":516,"column":11}}]},"53":{"line":519,"type":"if","locations":[{"start":{"line":519,"column":11},"end":{"line":519,"column":11}},{"start":{"line":519,"column":11},"end":{"line":519,"column":11}}]},"54":{"line":522,"type":"if","locations":[{"start":{"line":522,"column":11},"end":{"line":522,"column":11}},{"start":{"line":522,"column":11},"end":{"line":522,"column":11}}]},"55":{"line":642,"type":"if","locations":[{"start":{"line":642,"column":4},"end":{"line":642,"column":4}},{"start":{"line":642,"column":4},"end":{"line":642,"column":4}}]},"56":{"line":642,"type":"binary-expr","locations":[{"start":{"line":642,"column":8},"end":{"line":642,"column":21}},{"start":{"line":642,"column":25},"end":{"line":642,"column":53}}]},"57":{"line":869,"type":"if","locations":[{"start":{"line":869,"column":4},"end":{"line":869,"column":4}},{"start":{"line":869,"column":4},"end":{"line":869,"column":4}}]},"58":{"line":1037,"type":"if","locations":[{"start":{"line":1037,"column":4},"end":{"line":1037,"column":4}},{"start":{"line":1037,"column":4},"end":{"line":1037,"column":4}}]}},"code":["// shims","require('array.prototype.findindex').shim(); // for Node.js v0.x","","const errors = require('./errors');","const TelegramBotWebHook = require('./telegramWebHook');","const TelegramBotPolling = require('./telegramPolling');","const debug = require('debug')('node-telegram-bot-api');","const EventEmitter = require('eventemitter3');","const fileType = require('file-type');","const Promise = require('bluebird');","const request = require('request-promise');","const streamedRequest = require('request');","const qs = require('querystring');","const stream = require('stream');","const mime = require('mime');","const path = require('path');","const URL = require('url');","const fs = require('fs');","const pump = require('pump');","const deprecate = require('depd')('node-telegram-bot-api');","","const _messageTypes = [","  'text', 'audio', 'document', 'photo', 'sticker', 'video', 'voice', 'contact',","  'location', 'new_chat_participant', 'left_chat_participant', 'new_chat_title',","  'new_chat_photo', 'delete_chat_photo', 'group_chat_created'","];","","// enable cancellation","Promise.config({","  cancellation: true,","});","","class TelegramBot extends EventEmitter {","","  static get errors() {","    return errors;","  }","","  static get messageTypes() {","    return _messageTypes;","  }","","  /**","   * Both request method to obtain messages are implemented. To use standard polling, set `polling: true`","   * on `options`. Notice that [webHook](https://core.telegram.org/bots/api#setwebhook) will need a SSL certificate.","   * Emits `message` when a message arrives.","   *","   * @class TelegramBot","   * @constructor","   * @param {String} token Bot Token","   * @param {Object} [options]","   * @param {Boolean|Object} [options.polling=false] Set true to enable polling or set options.","   *  If a WebHook has been set, it will be deleted automatically.","   * @param {String|Number} [options.polling.timeout=10] *Deprecated. Use `options.polling.params` instead*.","   *  Timeout in seconds for long polling.","   * @param {String|Number} [options.polling.interval=300] Interval between requests in miliseconds","   * @param {Boolean} [options.polling.autoStart=true] Start polling immediately","   * @param {Object} [options.polling.params] Parameters to be used in polling API requests.","   *  See https://core.telegram.org/bots/api#getupdates for more information.","   * @param  {Number} [options.polling.params.timeout=10] Timeout in seconds for long polling.","   * @param {Boolean|Object} [options.webHook=false] Set true to enable WebHook or set options","   * @param {String} [options.webHook.host=0.0.0.0] Host to bind to","   * @param {Number} [options.webHook.port=8443] Port to bind to","   * @param {String} [options.webHook.key] Path to file with PEM private key for webHook server.","   *  The file is read **synchronously**!","   * @param {String} [options.webHook.cert] Path to file with PEM certificate (public) for webHook server.","   *  The file is read **synchronously**!","   * @param {String} [options.webHook.pfx] Path to file with PFX private key and certificate chain for webHook server.","   *  The file is read **synchronously**!","   * @param {Boolean} [options.webHook.autoOpen=true] Open webHook immediately","   * @param {Object} [options.webHook.https] Options to be passed to `https.createServer()`.","   *  Note that `options.webHook.key`, `options.webHook.cert` and `options.webHook.pfx`, if provided, will be","   *  used to override `key`, `cert` and `pfx` in this object, respectively.","   *  See https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener for more information.","   * @param {String} [options.webHook.healthEndpoint=/healthz] An endpoint for health checks that always responds with 200 OK","   * @param {Boolean} [options.onlyFirstMatch=false] Set to true to stop after first match. Otherwise, all regexps are executed","   * @param {Object} [options.request] Options which will be added for all requests to telegram api.","   *  See https://github.com/request/request#requestoptions-callback for more information.","   * @param {String} [options.baseApiUrl=https://api.telegram.org] API Base URl; useful for proxying and testing","   * @param {Boolean} [options.filepath=true] Allow passing file-paths as arguments when sending files,","   *  such as photos using `TelegramBot#sendPhoto()`. See [usage information][usage-sending-files-performance]","   *  for more information on this option and its consequences.","   * @see https://core.telegram.org/bots/api","   */","  constructor(token, options = {}) {","    super();","    this.token = token;","    this.options = options;","    this.options.polling = (typeof options.polling === 'undefined') ? false : options.polling;","    this.options.webHook = (typeof options.webHook === 'undefined') ? false : options.webHook;","    this.options.baseApiUrl = options.baseApiUrl || 'https://api.telegram.org';","    this.options.filepath = (typeof options.filepath === 'undefined') ? true : options.filepath;","    this._textRegexpCallbacks = [];","    this._replyListenerId = 0;","    this._replyListeners = [];","    this._polling = null;","    this._webHook = null;","","    if (options.polling) {","      const autoStart = options.polling.autoStart;","      if (typeof autoStart === 'undefined' || autoStart === true) {","        this.startPolling();","      }","    }","","    if (options.webHook) {","      const autoOpen = options.webHook.autoOpen;","      if (typeof autoOpen === 'undefined' || autoOpen === true) {","        this.openWebHook();","      }","    }","  }","","  /**","   * Generates url with bot token and provided path/method you want to be got/executed by bot","   * @param  {String} path","   * @return {String} url","   * @private","   * @see https://core.telegram.org/bots/api#making-requests","   */","  _buildURL(_path) {","    return `${this.options.baseApiUrl}/bot${this.token}/${_path}`;","  }","","  /**","   * Fix 'reply_markup' parameter by making it JSON-serialized, as","   * required by the Telegram Bot API","   * @param {Object} obj Object; either 'form' or 'qs'","   * @private","   * @see https://core.telegram.org/bots/api#sendmessage","   */","  _fixReplyMarkup(obj) {","    const replyMarkup = obj.reply_markup;","    if (replyMarkup && typeof replyMarkup !== 'string') {","      obj.reply_markup = JSON.stringify(replyMarkup);","    }","  }","","  /**","   * Make request against the API","   * @param  {String} _path API endpoint","   * @param  {Object} [options]","   * @private","   * @return {Promise}","   */","  _request(_path, options = {}) {","    if (!this.token) {","      return Promise.reject(new errors.FatalError('Telegram Bot Token not provided!'));","    }","","    if (this.options.request) {","      Object.assign(options, this.options.request);","    }","","    if (options.form) {","      this._fixReplyMarkup(options.form);","    }","    if (options.qs) {","      this._fixReplyMarkup(options.qs);","    }","","    options.method = 'POST';","    options.url = this._buildURL(_path);","    options.simple = false;","    options.resolveWithFullResponse = true;","    options.forever = true;","    debug('HTTP request: %j', options);","    return request(options)","      .then(resp => {","        let data;","        try {","          data = resp.body = JSON.parse(resp.body);","        } catch (err) {","          throw new errors.ParseError(`Error parsing Telegram response: ${resp.body}`, resp);","        }","","        if (data.ok) {","          return data.result;","        }","","        throw new errors.TelegramError(`${data.error_code} ${data.description}`, resp);","      }).catch(error => {","        // TODO: why can't we do `error instanceof errors.BaseError`?","        if (error.response) throw error;","        throw new errors.FatalError(error);","      });","  }","","  /**","   * Format data to be uploaded; handles file paths, streams and buffers","   * @param  {String} type","   * @param  {String|stream.Stream|Buffer} data","   * @return {Array} formatted","   * @return {Object} formatted[0] formData","   * @return {String} formatted[1] fileId","   * @throws Error if Buffer file type is not supported.","   * @see https://npmjs.com/package/file-type","   * @private","   */","  _formatSendData(type, data) {","    let formData;","    let fileName;","    let fileId;","    if (data instanceof stream.Stream) {","      // Will be 'null' if could not be parsed. Default to 'filename'.","      // For example, 'data.path' === '/?id=123' from 'request(\"https://example.com/?id=123\")'","      fileName = URL.parse(path.basename(data.path.toString())).pathname || 'filename';","      formData = {};","      formData[type] = {","        value: data,","        options: {","          filename: qs.unescape(fileName),","          contentType: mime.lookup(fileName)","        }","      };","    } else if (Buffer.isBuffer(data)) {","      const filetype = fileType(data);","      if (!filetype) {","        throw new errors.FatalError('Unsupported Buffer file type');","      }","      formData = {};","      formData[type] = {","        value: data,","        options: {","          filename: `data.${filetype.ext}`,","          contentType: filetype.mime","        }","      };","    } else if (!this.options.filepath) {","      /**","       * When the constructor option 'filepath' is set to","       * 'false', we do not support passing file-paths.","       */","      fileId = data;","    } else if (fs.existsSync(data)) {","      fileName = path.basename(data);","      formData = {};","      formData[type] = {","        value: fs.createReadStream(data),","        options: {","          filename: fileName,","          contentType: mime.lookup(fileName)","        }","      };","    } else {","      fileId = data;","    }","    return [formData, fileId];","  }","","  /**","   * Start polling.","   * Rejects returned promise if a WebHook is being used by this instance.","   * @param  {Object} [options]","   * @param  {Boolean} [options.restart=true] Consecutive calls to this method causes polling to be restarted","   * @return {Promise}","   */","  startPolling(options = {}) {","    if (this.hasOpenWebHook()) {","      return Promise.reject(new errors.FatalError('Polling and WebHook are mutually exclusive'));","    }","    options.restart = typeof options.restart === 'undefined' ? true : options.restart;","    if (!this._polling) {","      this._polling = new TelegramBotPolling(this);","    }","    return this._polling.start(options);","  }","","  /**","   * Alias of `TelegramBot#startPolling()`. This is **deprecated**.","   * @param  {Object} [options]","   * @return {Promise}","   * @deprecated","   */","  initPolling() {","    deprecate('TelegramBot#initPolling() is deprecated');","    return this.startPolling();","  }","","  /**","   * Stops polling after the last polling request resolves.","   * Multiple invocations do nothing if polling is already stopped.","   * Returning the promise of the last polling request is **deprecated**.","   * @return {Promise}","   */","  stopPolling() {","    if (!this._polling) {","      return Promise.resolve();","    }","    return this._polling.stop();","  }","","  /**","   * Return true if polling. Otherwise, false.","   * @return {Boolean}","   */","  isPolling() {","    return this._polling ? this._polling.isPolling() : false;","  }","","  /**","   * Open webhook.","   * Multiple invocations do nothing if webhook is already open.","   * Rejects returned promise if Polling is being used by this instance.","   * @return {Promise}","   */","  openWebHook() {","    if (this.isPolling()) {","      return Promise.reject(new errors.FatalError('WebHook and Polling are mutually exclusive'));","    }","    if (!this._webHook) {","      this._webHook = new TelegramBotWebHook(this);","    }","    return this._webHook.open();","  }","","  /**","   * Close webhook after closing all current connections.","   * Multiple invocations do nothing if webhook is already closed.","   * @return {Promise} promise","   */","  closeWebHook() {","    if (!this._webHook) {","      return Promise.resolve();","    }","    return this._webHook.close();","  }","","  /**","   * Return true if using webhook and it is open i.e. accepts connections.","   * Otherwise, false.","   * @return {Boolean}","   */","  hasOpenWebHook() {","    return this._webHook ? this._webHook.isOpen() : false;","  }","","  /**","   * Returns basic information about the bot in form of a `User` object.","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#getme","   */","  getMe() {","    const _path = 'getMe';","    return this._request(_path);","  }","","  /**","   * Specify an url to receive incoming updates via an outgoing webHook.","   * This method has an [older, compatible signature][setWebHook-v0.25.0]","   * that is being deprecated.","   *","   * @param  {String} url URL where Telegram will make HTTP Post. Leave empty to","   * delete webHook.","   * @param  {Object} [options] Additional Telegram query options","   * @param  {String|stream.Stream} [options.certificate] PEM certificate key (public).","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#setwebhook","   */","  setWebHook(url, options = {}) {","    /* The older method signature was setWebHook(url, cert).","     * We need to ensure backwards-compatibility while maintaining","     * consistency of the method signatures throughout the library */","    let cert;","    // Note: 'options' could be an object, if a stream was provided (in place of 'cert')","    if (typeof options !== 'object' || options instanceof stream.Stream) {","      deprecate('The method signature setWebHook(url, cert) has been deprecated since v0.25.0');","      cert = options;","      options = {}; // eslint-disable-line no-param-reassign","    } else {","      cert = options.certificate;","    }","","    const opts = {","      qs: options,","    };","    opts.qs.url = url;","","    if (cert) {","      try {","        const sendData = this._formatSendData('certificate', cert);","        opts.formData = sendData[0];","        opts.qs.certificate = sendData[1];","      } catch (ex) {","        return Promise.reject(ex);","      }","    }","","    return this._request('setWebHook', opts);","  }","","  /**","   * Use this method to remove webhook integration if you decide to","   * switch back to getUpdates. Returns True on success.","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#deletewebhook","   */","  deleteWebHook() {","    return this._request('deleteWebhook');","  }","","  /**","   * Use this method to get current webhook status.","   * On success, returns a [WebhookInfo](https://core.telegram.org/bots/api#webhookinfo) object.","   * If the bot is using getUpdates, will return an object with the","   * url field empty.","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#getwebhookinfo","   */","  getWebHookInfo() {","    return this._request('getWebhookInfo');","  }","","  /**","   * Use this method to receive incoming updates using long polling.","   * This method has an [older, compatible signature][getUpdates-v0.25.0]","   * that is being deprecated.","   *","   * @param  {Object} [options] Additional Telegram query options","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#getupdates","   */","  getUpdates(form = {}) {","    /* The older method signature was getUpdates(timeout, limit, offset).","     * We need to ensure backwards-compatibility while maintaining","     * consistency of the method signatures throughout the library */","    if (typeof form !== 'object') {","      /* eslint-disable no-param-reassign, prefer-rest-params */","      deprecate('The method signature getUpdates(timeout, limit, offset) has been deprecated since v0.25.0');","      form = {","        timeout: arguments[0],","        limit: arguments[1],","        offset: arguments[2],","      };","      /* eslint-enable no-param-reassign, prefer-rest-params */","    }","","    return this._request('getUpdates', { form });","  }","","  /**","   * Process an update; emitting the proper events and executing regexp","   * callbacks. This method is useful should you be using a different","   * way to fetch updates, other than those provided by TelegramBot.","   * @param  {Object} update","   * @see https://core.telegram.org/bots/api#update","   */","  processUpdate(update) {","    debug('Process Update %j', update);","    const message = update.message;","    const editedMessage = update.edited_message;","    const channelPost = update.channel_post;","    const editedChannelPost = update.edited_channel_post;","    const inlineQuery = update.inline_query;","    const chosenInlineResult = update.chosen_inline_result;","    const callbackQuery = update.callback_query;","","    if (message) {","      debug('Process Update message %j', message);","      this.emit('message', message);","      const processMessageType = messageType => {","        if (message[messageType]) {","          debug('Emitting %s: %j', messageType, message);","          this.emit(messageType, message);","        }","      };","      TelegramBot.messageTypes.forEach(processMessageType);","      if (message.text) {","        debug('Text message');","        this._textRegexpCallbacks.some(reg => {","          debug('Matching %s with %s', message.text, reg.regexp);","          const result = reg.regexp.exec(message.text);","          if (!result) {","            return false;","          }","          debug('Matches %s', reg.regexp);","          reg.callback(message, result);","          // returning truthy value exits .some","          return this.options.onlyFirstMatch;","        });","      }","      if (message.reply_to_message) {","        // Only callbacks waiting for this message","        this._replyListeners.forEach(reply => {","          // Message from the same chat","          if (reply.chatId === message.chat.id) {","            // Responding to that message","            if (reply.messageId === message.reply_to_message.message_id) {","              // Resolve the promise","              reply.callback(message);","            }","          }","        });","      }","    } else if (editedMessage) {","      debug('Process Update edited_message %j', editedMessage);","      this.emit('edited_message', editedMessage);","      if (editedMessage.text) {","        this.emit('edited_message_text', editedMessage);","      }","      if (editedMessage.caption) {","        this.emit('edited_message_caption', editedMessage);","      }","    } else if (channelPost) {","      debug('Process Update channel_post %j', channelPost);","      this.emit('channel_post', channelPost);","    } else if (editedChannelPost) {","      debug('Process Update edited_channel_post %j', editedChannelPost);","      this.emit('edited_channel_post', editedChannelPost);","      if (editedChannelPost.text) {","        this.emit('edited_channel_post_text', editedChannelPost);","      }","      if (editedChannelPost.caption) {","        this.emit('edited_channel_post_caption', editedChannelPost);","      }","    } else if (inlineQuery) {","      debug('Process Update inline_query %j', inlineQuery);","      this.emit('inline_query', inlineQuery);","    } else if (chosenInlineResult) {","      debug('Process Update chosen_inline_result %j', chosenInlineResult);","      this.emit('chosen_inline_result', chosenInlineResult);","    } else if (callbackQuery) {","      debug('Process Update callback_query %j', callbackQuery);","      this.emit('callback_query', callbackQuery);","    }","  }","","  /**","   * Send text message.","   * @param  {Number|String} chatId Unique identifier for the message recipient","   * @param  {String} text Text of the message to be sent","   * @param  {Object} [options] Additional Telegram query options","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#sendmessage","   */","  sendMessage(chatId, text, form = {}) {","    form.chat_id = chatId;","    form.text = text;","    return this._request('sendMessage', { form });","  }","","  /**","   * Send answers to an inline query.","   * @param  {String} inlineQueryId Unique identifier of the query","   * @param  {InlineQueryResult[]} results An array of results for the inline query","   * @param  {Object} [options] Additional Telegram query options","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#answerinlinequery","   */","  answerInlineQuery(inlineQueryId, results, form = {}) {","    form.inline_query_id = inlineQueryId;","    form.results = JSON.stringify(results);","    return this._request('answerInlineQuery', { form });","  }","","  /**","   * Forward messages of any kind.","   * @param  {Number|String} chatId     Unique identifier for the message recipient","   * @param  {Number|String} fromChatId Unique identifier for the chat where the","   * original message was sent","   * @param  {Number|String} messageId  Unique message identifier","   * @param  {Object} [options] Additional Telegram query options","   * @return {Promise}","   */","  forwardMessage(chatId, fromChatId, messageId, form = {}) {","    form.chat_id = chatId;","    form.from_chat_id = fromChatId;","    form.message_id = messageId;","    return this._request('forwardMessage', { form });","  }","","  /**","   * Send photo","   * @param  {Number|String} chatId  Unique identifier for the message recipient","   * @param  {String|stream.Stream|Buffer} photo A file path or a Stream. Can","   * also be a `file_id` previously uploaded","   * @param  {Object} [options] Additional Telegram query options","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#sendphoto","   */","  sendPhoto(chatId, photo, options = {}) {","    const opts = {","      qs: options,","    };","    opts.qs.chat_id = chatId;","    try {","      const sendData = this._formatSendData('photo', photo);","      opts.formData = sendData[0];","      opts.qs.photo = sendData[1];","    } catch (ex) {","      return Promise.reject(ex);","    }","    return this._request('sendPhoto', opts);","  }","","  /**","   * Send audio","   * @param  {Number|String} chatId  Unique identifier for the message recipient","   * @param  {String|stream.Stream|Buffer} audio A file path, Stream or Buffer.","   * Can also be a `file_id` previously uploaded.","   * @param  {Object} [options] Additional Telegram query options","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#sendaudio","   */","  sendAudio(chatId, audio, options = {}) {","    const opts = {","      qs: options","    };","    opts.qs.chat_id = chatId;","    try {","      const sendData = this._formatSendData('audio', audio);","      opts.formData = sendData[0];","      opts.qs.audio = sendData[1];","    } catch (ex) {","      return Promise.reject(ex);","    }","    return this._request('sendAudio', opts);","  }","","  /**","   * Send Document","   * @param  {Number|String} chatId  Unique identifier for the message recipient","   * @param  {String|stream.Stream|Buffer} doc A file path, Stream or Buffer.","   * Can also be a `file_id` previously uploaded.","   * @param  {Object} [options] Additional Telegram query options","   * @param  {Object} [fileOpts] Optional file related meta-data","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#sendDocument","   */","  sendDocument(chatId, doc, options = {}, fileOpts = {}) {","    const opts = {","      qs: options","    };","    opts.qs.chat_id = chatId;","    try {","      const sendData = this._formatSendData('document', doc);","      opts.formData = sendData[0];","      opts.qs.document = sendData[1];","    } catch (ex) {","      return Promise.reject(ex);","    }","    if (opts.formData && Object.keys(fileOpts).length) {","      opts.formData.document.options = fileOpts;","    }","    return this._request('sendDocument', opts);","  }","","  /**","   * Send .webp stickers.","   * @param  {Number|String} chatId  Unique identifier for the message recipient","   * @param  {String|stream.Stream|Buffer} sticker A file path, Stream or Buffer.","   * Can also be a `file_id` previously uploaded. Stickers are WebP format files.","   * @param  {Object} [options] Additional Telegram query options","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#sendsticker","   */","  sendSticker(chatId, sticker, options = {}) {","    const opts = {","      qs: options","    };","    opts.qs.chat_id = chatId;","    try {","      const sendData = this._formatSendData('sticker', sticker);","      opts.formData = sendData[0];","      opts.qs.sticker = sendData[1];","    } catch (ex) {","      return Promise.reject(ex);","    }","    return this._request('sendSticker', opts);","  }","","  /**","   * Use this method to send video files, Telegram clients support mp4 videos (other formats may be sent as Document).","   * @param  {Number|String} chatId  Unique identifier for the message recipient","   * @param  {String|stream.Stream|Buffer} video A file path or Stream.","   * Can also be a `file_id` previously uploaded.","   * @param  {Object} [options] Additional Telegram query options","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#sendvideo","   */","  sendVideo(chatId, video, options = {}) {","    const opts = {","      qs: options","    };","    opts.qs.chat_id = chatId;","    try {","      const sendData = this._formatSendData('video', video);","      opts.formData = sendData[0];","      opts.qs.video = sendData[1];","    } catch (ex) {","      return Promise.reject(ex);","    }","    return this._request('sendVideo', opts);","  }","","  /**","   * Send voice","   * @param  {Number|String} chatId  Unique identifier for the message recipient","   * @param  {String|stream.Stream|Buffer} voice A file path, Stream or Buffer.","   * Can also be a `file_id` previously uploaded.","   * @param  {Object} [options] Additional Telegram query options","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#sendvoice","   */","  sendVoice(chatId, voice, options = {}) {","    const opts = {","      qs: options","    };","    opts.qs.chat_id = chatId;","    try {","      const sendData = this._formatSendData('voice', voice);","      opts.formData = sendData[0];","      opts.qs.voice = sendData[1];","    } catch (ex) {","      return Promise.reject(ex);","    }","    return this._request('sendVoice', opts);","  }","","","  /**","   * Send chat action.","   * `typing` for text messages,","   * `upload_photo` for photos, `record_video` or `upload_video` for videos,","   * `record_audio` or `upload_audio` for audio files, `upload_document` for general files,","   * `find_location` for location data.","   *","   * @param  {Number|String} chatId  Unique identifier for the message recipient","   * @param  {String} action Type of action to broadcast.","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#sendchataction","   */","  sendChatAction(chatId, action) {","    const form = {","      action,","      chat_id: chatId","    };","    return this._request('sendChatAction', { form });","  }","","  /**","   * Use this method to kick a user from a group or a supergroup.","   * In the case of supergroups, the user will not be able to return","   * to the group on their own using invite links, etc., unless unbanned","   * first. The bot must be an administrator in the group for this to work.","   * Returns True on success.","   *","   * @param  {Number|String} chatId  Unique identifier for the target group or username of the target supergroup","   * @param  {String} userId  Unique identifier of the target user","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#kickchatmember","   */","  kickChatMember(chatId, userId) {","    const form = {","      chat_id: chatId,","      user_id: userId","    };","    return this._request('kickChatMember', { form });","  }","","  /**","   * Use this method to unban a previously kicked user in a supergroup.","   * The user will not return to the group automatically, but will be","   * able to join via link, etc. The bot must be an administrator in","   * the group for this to work. Returns True on success.","   *","   * @param  {Number|String} chatId  Unique identifier for the target group or username of the target supergroup","   * @param  {String} userId  Unique identifier of the target user","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#unbanchatmember","   */","  unbanChatMember(chatId, userId) {","    const form = {","      chat_id: chatId,","      user_id: userId","    };","    return this._request('unbanChatMember', { form });","  }","","  /**","   * Use this method to send answers to callback queries sent from","   * inline keyboards. The answer will be displayed to the user as","   * a notification at the top of the chat screen or as an alert.","   * On success, True is returned.","   *","   * @param  {Number|String} callbackQueryId  Unique identifier for the query to be answered","   * @param  {String} text  Text of the notification. If not specified, nothing will be shown to the user","   * @param  {Boolean} showAlert  Whether to show an alert or a notification at the top of the screen","   * @param  {Object} [options] Additional Telegram query options","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#answercallbackquery","   */","  answerCallbackQuery(callbackQueryId, text, showAlert, form = {}) {","    form.callback_query_id = callbackQueryId;","    form.text = text;","    form.show_alert = showAlert;","    return this._request('answerCallbackQuery', { form });","  }","","  /**","   * Use this method to edit text messages sent by the bot or via","   * the bot (for inline bots). On success, the edited Message is","   * returned.","   *","   * Note that you must provide one of chat_id, message_id, or","   * inline_message_id in your request.","   *","   * @param  {String} text  New text of the message","   * @param  {Object} [options] Additional Telegram query options (provide either one of chat_id, message_id, or inline_message_id here)","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#editmessagetext","   */","  editMessageText(text, form = {}) {","    form.text = text;","    return this._request('editMessageText', { form });","  }","","  /**","   * Use this method to edit captions of messages sent by the","   * bot or via the bot (for inline bots). On success, the","   * edited Message is returned.","   *","   * Note that you must provide one of chat_id, message_id, or","   * inline_message_id in your request.","   *","   * @param  {String} caption  New caption of the message","   * @param  {Object} [options] Additional Telegram query options (provide either one of chat_id, message_id, or inline_message_id here)","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#editmessagecaption","   */","  editMessageCaption(caption, form = {}) {","    form.caption = caption;","    return this._request('editMessageCaption', { form });","  }","","  /**","   * Use this method to edit only the reply markup of messages","   * sent by the bot or via the bot (for inline bots).","   * On success, the edited Message is returned.","   *","   * Note that you must provide one of chat_id, message_id, or","   * inline_message_id in your request.","   *","   * @param  {Object} replyMarkup  A JSON-serialized object for an inline keyboard.","   * @param  {Object} [options] Additional Telegram query options (provide either one of chat_id, message_id, or inline_message_id here)","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#editmessagetext","   */","  editMessageReplyMarkup(replyMarkup, form = {}) {","    form.reply_markup = replyMarkup;","    return this._request('editMessageReplyMarkup', { form });","  }","","  /**","   * Use this method to get a list of profile pictures for a user.","   * Returns a [UserProfilePhotos](https://core.telegram.org/bots/api#userprofilephotos) object.","   * This method has an [older, compatible signature][getUserProfilePhotos-v0.25.0]","   * that is being deprecated.","   *","   * @param  {Number|String} userId  Unique identifier of the target user","   * @param  {Object} [options] Additional Telegram query options","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#getuserprofilephotos","   */","  getUserProfilePhotos(userId, form = {}) {","    /* The older method signature was getUserProfilePhotos(userId, offset, limit).","     * We need to ensure backwards-compatibility while maintaining","     * consistency of the method signatures throughout the library */","    if (typeof form !== 'object') {","      /* eslint-disable no-param-reassign, prefer-rest-params */","      deprecate('The method signature getUserProfilePhotos(userId, offset, limit) has been deprecated since v0.25.0');","      form = {","        offset: arguments[1],","        limit: arguments[2],","      };","      /* eslint-enable no-param-reassign, prefer-rest-params */","    }","    form.user_id = userId;","    return this._request('getUserProfilePhotos', { form });","  }","","  /**","   * Send location.","   * Use this method to send point on the map.","   *","   * @param  {Number|String} chatId  Unique identifier for the message recipient","   * @param  {Float} latitude Latitude of location","   * @param  {Float} longitude Longitude of location","   * @param  {Object} [options] Additional Telegram query options","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#sendlocation","   */","  sendLocation(chatId, latitude, longitude, form = {}) {","    form.chat_id = chatId;","    form.latitude = latitude;","    form.longitude = longitude;","    return this._request('sendLocation', { form });","  }","","  /**","   * Send venue.","   * Use this method to send information about a venue.","   *","   * @param  {Number|String} chatId  Unique identifier for the message recipient","   * @param  {Float} latitude Latitude of location","   * @param  {Float} longitude Longitude of location","   * @param  {String} title Name of the venue","   * @param  {String} address Address of the venue","   * @param  {Object} [options] Additional Telegram query options","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#sendvenue","   */","  sendVenue(chatId, latitude, longitude, title, address, form = {}) {","    form.chat_id = chatId;","    form.latitude = latitude;","    form.longitude = longitude;","    form.title = title;","    form.address = address;","    return this._request('sendVenue', { form });","  }","","  /**","   * Send contact.","   * Use this method to send phone contacts.","   *","   * @param  {Number|String} chatId  Unique identifier for the message recipient","   * @param  {String} phoneNumber Contact's phone number","   * @param  {String} firstName Contact's first name","   * @param  {Object} [options] Additional Telegram query options","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#sendcontact","   */","  sendContact(chatId, phoneNumber, firstName, form = {}) {","    form.chat_id = chatId;","    form.phone_number = phoneNumber;","    form.first_name = firstName;","    return this._request('sendContact', { form });","  }","","","  /**","   * Get file.","   * Use this method to get basic info about a file and prepare it for downloading.","   * Attention: link will be valid for 1 hour.","   *","   * @param  {String} fileId  File identifier to get info about","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#getfile","   */","  getFile(fileId) {","    const form = { file_id: fileId };","    return this._request('getFile', { form });","  }","","  /**","   * Get link for file.","   * Use this method to get link for file for subsequent use.","   * Attention: link will be valid for 1 hour.","   *","   * This method is a sugar extension of the (getFile)[#getfilefileid] method,","   * which returns just path to file on remote server (you will have to manually build full uri after that).","   *","   * @param  {String} fileId  File identifier to get info about","   * @return {Promise} promise Promise which will have *fileURI* in resolve callback","   * @see https://core.telegram.org/bots/api#getfile","   */","  getFileLink(fileId) {","    return this.getFile(fileId)","      .then(resp => `${this.options.baseApiUrl}/file/bot${this.token}/${resp.file_path}`);","  }","","  /**","   * Downloads file in the specified folder.","   * This is just a sugar for (getFile)[#getfilefiled] method","   *","   * @param  {String} fileId  File identifier to get info about","   * @param  {String} downloadDir Absolute path to the folder in which file will be saved","   * @return {Promise} promise Promise, which will have *filePath* of downloaded file in resolve callback","   */","  downloadFile(fileId, downloadDir) {","    return this","      .getFileLink(fileId)","      .then(fileURI => {","        const fileName = fileURI.slice(fileURI.lastIndexOf('/') + 1);","        // TODO: Ensure fileName doesn't contains slashes","        const filePath = `${downloadDir}/${fileName}`;","","        // properly handles errors and closes all streams","        return Promise","          .fromCallback(next => {","            pump(streamedRequest({ uri: fileURI }), fs.createWriteStream(filePath), next);","          })","          .return(filePath);","      });","  }","","  /**","   * Register a RegExp to test against an incomming text message.","   * @param  {RegExp}   regexp       RegExp to be executed with `exec`.","   * @param  {Function} callback     Callback will be called with 2 parameters,","   * the `msg` and the result of executing `regexp.exec` on message text.","   */","  onText(regexp, callback) {","    this._textRegexpCallbacks.push({ regexp, callback });","  }","","  /**","   * Register a reply to wait for a message response.","   * @param  {Number|String}   chatId       The chat id where the message cames from.","   * @param  {Number|String}   messageId    The message id to be replied.","   * @param  {Function} callback     Callback will be called with the reply","   *  message.","   * @return {Number} id                    The ID of the inserted reply listener.","   */","  onReplyToMessage(chatId, messageId, callback) {","    const id = ++this._replyListenerId;","    this._replyListeners.push({","      id,","      chatId,","      messageId,","      callback","    });","    return id;","  }","","  /**","   * Removes a reply that has been prev. registered for a message response.","   * @param   {Number} replyListenerId      The ID of the reply listener.","   * @return  {Object} deletedListener      The removed reply listener if","   *   found. This object has `id`, `chatId`, `messageId` and `callback`","   *   properties. If not found, returns `null`.","   */","  removeReplyListener(replyListenerId) {","    const index = this._replyListeners.findIndex((replyListener) => {","      return replyListener.id === replyListenerId;","    });","    if (index === -1) {","      return null;","    }","    return this._replyListeners.splice(index, 1)[0];","  }","","  /**","   * Use this method to get up to date information about the chat","   * (current name of the user for one-on-one conversations, current","   * username of a user, group or channel, etc.).","   * @param  {Number|String} chatId Unique identifier for the target chat or username of the target supergroup or channel","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#getchat","   */","  getChat(chatId) {","    const form = {","      chat_id: chatId","    };","    return this._request('getChat', { form });","  }","","  /**","   * Returns the administrators in a chat in form of an Array of `ChatMember` objects.","   * @param  {Number|String} chatId  Unique identifier for the target group or username of the target supergroup","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#getchatadministrators","   */","  getChatAdministrators(chatId) {","    const form = {","      chat_id: chatId","    };","    return this._request('getChatAdministrators', { form });","  }","","  /**","   * Use this method to get the number of members in a chat.","   * @param  {Number|String} chatId  Unique identifier for the target group or username of the target supergroup","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#getchatmemberscount","   */","  getChatMembersCount(chatId) {","    const form = {","      chat_id: chatId","    };","    return this._request('getChatMembersCount', { form });","  }","","  /**","   * Use this method to get information about a member of a chat.","   * @param  {Number|String} chatId  Unique identifier for the target group or username of the target supergroup","   * @param  {String} userId  Unique identifier of the target user","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#getchatmember","   */","  getChatMember(chatId, userId) {","    const form = {","      chat_id: chatId,","      user_id: userId","    };","    return this._request('getChatMember', { form });","  }","","  /**","   * Leave a group, supergroup or channel.","   * @param  {Number|String} chatId Unique identifier for the target group or username of the target supergroup (in the format @supergroupusername)","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#leavechat","   */","  leaveChat(chatId) {","    const form = {","      chat_id: chatId","    };","    return this._request('leaveChat', { form });","  }","","  /**","   * Use this method to send a game.","   * @param  {Number|String} chatId Unique identifier for the message recipient","   * @param  {String} gameShortName name of the game to be sent.","   * @param  {Object} [options] Additional Telegram query options","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#sendgame","   */","  sendGame(chatId, gameShortName, form = {}) {","    form.chat_id = chatId;","    form.game_short_name = gameShortName;","    return this._request('sendGame', { form });","  }","","  /**","   * Use this method to set the score of the specified user in a game.","   * @param  {String} userId  Unique identifier of the target user","   * @param  {Number} score New score value.","   * @param  {Object} [options] Additional Telegram query options","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#setgamescore","   */","  setGameScore(userId, score, form = {}) {","    form.user_id = userId;","    form.score = score;","    return this._request('setGameScore', { form });","  }","","  /**","   * Use this method to get data for high score table.","   * @param  {String} userId  Unique identifier of the target user","   * @param  {Object} [options] Additional Telegram query options","   * @return {Promise}","   * @see https://core.telegram.org/bots/api#getgamehighscores","   */","  getGameHighScores(userId, form = {}) {","    form.user_id = userId;","    return this._request('getGameHighScores', { form });","  }","}","","module.exports = TelegramBot;",""],"l":{"2":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"22":1,"29":1,"36":0,"40":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"99":0,"100":0,"101":0,"102":0,"106":0,"107":0,"108":0,"109":0,"122":0,"133":0,"134":0,"135":0,"147":0,"148":0,"151":0,"152":0,"155":0,"156":0,"158":0,"159":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"170":0,"171":0,"172":0,"174":0,"177":0,"178":0,"181":0,"184":0,"185":0,"201":0,"202":0,"203":0,"204":0,"207":0,"208":0,"209":0,"216":0,"217":0,"218":0,"219":0,"221":0,"222":0,"229":0,"234":0,"235":0,"236":0,"237":0,"238":0,"246":0,"248":0,"259":0,"260":0,"262":0,"263":0,"264":0,"266":0,"276":0,"277":0,"287":0,"288":0,"290":0,"298":0,"308":0,"309":0,"311":0,"312":0,"314":0,"323":0,"324":0,"326":0,"335":0,"344":0,"345":0,"364":0,"366":0,"367":0,"368":0,"369":0,"371":0,"374":0,"377":0,"379":0,"380":0,"381":0,"382":0,"383":0,"385":0,"389":0,"399":0,"411":0,"427":0,"429":0,"430":0,"438":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"476":0,"477":0,"479":0,"482":0,"484":0,"486":0,"488":0,"490":0,"495":0,"496":0,"497":0,"498":0,"499":0,"501":0,"502":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"513":0,"514":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"537":0,"538":0,"539":0,"551":0,"552":0,"553":0,"566":0,"567":0,"568":0,"569":0,"582":0,"585":0,"586":0,"587":0,"588":0,"589":0,"591":0,"593":0,"606":0,"609":0,"610":0,"611":0,"612":0,"613":0,"615":0,"617":0,"631":0,"634":0,"635":0,"636":0,"637":0,"638":0,"640":0,"642":0,"643":0,"645":0,"658":0,"661":0,"662":0,"663":0,"664":0,"665":0,"667":0,"669":0,"682":0,"685":0,"686":0,"687":0,"688":0,"689":0,"691":0,"693":0,"706":0,"709":0,"710":0,"711":0,"712":0,"713":0,"715":0,"717":0,"734":0,"738":0,"754":0,"758":0,"773":0,"777":0,"794":0,"795":0,"796":0,"797":0,"814":0,"815":0,"832":0,"833":0,"850":0,"851":0,"869":0,"871":0,"872":0,"878":0,"879":0,"894":0,"895":0,"896":0,"897":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"934":0,"935":0,"936":0,"937":0,"951":0,"952":0,"968":0,"969":0,"981":0,"984":0,"986":0,"989":0,"991":0,"1004":0,"1016":0,"1017":0,"1023":0,"1034":0,"1035":0,"1037":0,"1038":0,"1040":0,"1052":0,"1055":0,"1065":0,"1068":0,"1078":0,"1081":0,"1092":0,"1096":0,"1106":0,"1109":0,"1121":0,"1122":0,"1123":0,"1135":0,"1136":0,"1137":0,"1148":0,"1149":0,"1153":1}},"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/node_modules/node-telegram-bot-api/src/errors.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/node_modules/node-telegram-bot-api/src/errors.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":13},"end":{"line":9,"column":29}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":13},"end":{"line":23,"column":20}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":13},"end":{"line":40,"column":33}}},"4":{"name":"(anonymous_4)","line":55,"loc":{"start":{"line":55,"column":13},"end":{"line":55,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":13,"column":2}},"2":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":21}},"4":{"start":{"line":16,"column":0},"end":{"line":29,"column":2}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":59}},"6":{"start":{"line":25,"column":4},"end":{"line":25,"column":49}},"7":{"start":{"line":26,"column":4},"end":{"line":26,"column":29}},"8":{"start":{"line":27,"column":4},"end":{"line":27,"column":40}},"9":{"start":{"line":27,"column":15},"end":{"line":27,"column":40}},"10":{"start":{"line":32,"column":0},"end":{"line":44,"column":2}},"11":{"start":{"line":41,"column":4},"end":{"line":41,"column":29}},"12":{"start":{"line":42,"column":4},"end":{"line":42,"column":29}},"13":{"start":{"line":47,"column":0},"end":{"line":59,"column":2}},"14":{"start":{"line":56,"column":4},"end":{"line":56,"column":32}},"15":{"start":{"line":57,"column":4},"end":{"line":57,"column":29}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":47},"end":{"line":24,"column":51}},{"start":{"line":24,"column":54},"end":{"line":24,"column":58}}]},"2":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":28},"end":{"line":25,"column":41}},{"start":{"line":25,"column":44},"end":{"line":25,"column":48}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]}},"code":["exports.BaseError = class BaseError extends Error {","  /**","   * @class BaseError","   * @constructor","   * @private","   * @param  {String} code Error code","   * @param  {String} message Error message","   */","  constructor(code, message) {","    super(`${code}: ${message}`);","    this.code = code;","  }","};","","","exports.FatalError = class FatalError extends exports.BaseError {","  /**","   * Fatal Error. Error code is `\"EFATAL\"`.","   * @class FatalError","   * @constructor","   * @param  {String|Error} data Error object or message","   */","  constructor(data) {","    const error = (typeof data === 'string') ? null : data;","    const message = error ? error.message : data;","    super('EFATAL', message);","    if (error) this.stack = error.stack;","  }","};","","","exports.ParseError = class ParseError extends exports.BaseError {","  /**","   * Error during parsing. Error code is `\"EPARSE\"`.","   * @class ParseError","   * @constructor","   * @param  {String} message Error message","   * @param  {http.IncomingMessage} response Server response","   */","  constructor(message, response) {","    super('EPARSE', message);","    this.response = response;","  }","};","","","exports.TelegramError = class TelegramError extends exports.BaseError {","  /**","   * Error returned from Telegram. Error code is `\"ETELEGRAM\"`.","   * @class TelegramError","   * @constructor","   * @param  {String} message Error message","   * @param  {http.IncomingMessage} response Server response","   */","  constructor(message, response) {","    super('ETELEGRAM', message);","    this.response = response;","  }","};",""],"l":{"1":1,"10":0,"11":0,"16":1,"24":0,"25":0,"26":0,"27":0,"32":1,"41":0,"42":0,"47":1,"56":0,"57":0}},"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/node_modules/node-telegram-bot-api/src/telegramWebHook.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/node_modules/node-telegram-bot-api/src/telegramWebHook.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":13},"end":{"line":16,"column":19}}},"2":{"name":"(anonymous_2)","line":51,"loc":{"start":{"line":51,"column":6},"end":{"line":51,"column":9}}},"3":{"name":"(anonymous_3)","line":68,"loc":{"start":{"line":68,"column":7},"end":{"line":68,"column":10}}},"4":{"name":"(anonymous_4)","line":84,"loc":{"start":{"line":84,"column":8},"end":{"line":84,"column":11}}},"5":{"name":"(anonymous_5)","line":98,"loc":{"start":{"line":98,"column":8},"end":{"line":98,"column":16}}},"6":{"name":"(anonymous_6)","line":109,"loc":{"start":{"line":109,"column":12},"end":{"line":109,"column":26}}},"7":{"name":"(anonymous_7)","line":130,"loc":{"start":{"line":130,"column":18},"end":{"line":130,"column":29}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":19}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":89}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":55}},"11":{"start":{"line":20,"column":4},"end":{"line":20,"column":50}},"12":{"start":{"line":21,"column":4},"end":{"line":21,"column":50}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":76}},"14":{"start":{"line":23,"column":4},"end":{"line":23,"column":64}},"15":{"start":{"line":24,"column":4},"end":{"line":24,"column":27}},"16":{"start":{"line":25,"column":4},"end":{"line":25,"column":23}},"17":{"start":{"line":26,"column":4},"end":{"line":26,"column":61}},"18":{"start":{"line":27,"column":4},"end":{"line":27,"column":49}},"19":{"start":{"line":29,"column":4},"end":{"line":44,"column":5}},"20":{"start":{"line":30,"column":6},"end":{"line":30,"column":51}},"21":{"start":{"line":31,"column":6},"end":{"line":31,"column":65}},"22":{"start":{"line":32,"column":6},"end":{"line":32,"column":67}},"23":{"start":{"line":33,"column":6},"end":{"line":33,"column":86}},"24":{"start":{"line":34,"column":11},"end":{"line":44,"column":5}},"25":{"start":{"line":35,"column":6},"end":{"line":35,"column":46}},"26":{"start":{"line":36,"column":6},"end":{"line":36,"column":65}},"27":{"start":{"line":37,"column":6},"end":{"line":37,"column":86}},"28":{"start":{"line":38,"column":11},"end":{"line":44,"column":5}},"29":{"start":{"line":39,"column":6},"end":{"line":39,"column":48}},"30":{"start":{"line":40,"column":6},"end":{"line":40,"column":86}},"31":{"start":{"line":42,"column":6},"end":{"line":42,"column":36}},"32":{"start":{"line":43,"column":6},"end":{"line":43,"column":65}},"33":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"34":{"start":{"line":53,"column":6},"end":{"line":53,"column":31}},"35":{"start":{"line":55,"column":4},"end":{"line":61,"column":7}},"36":{"start":{"line":56,"column":6},"end":{"line":60,"column":9}},"37":{"start":{"line":57,"column":8},"end":{"line":57,"column":65}},"38":{"start":{"line":58,"column":8},"end":{"line":58,"column":26}},"39":{"start":{"line":59,"column":8},"end":{"line":59,"column":25}},"40":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"41":{"start":{"line":70,"column":6},"end":{"line":70,"column":31}},"42":{"start":{"line":72,"column":4},"end":{"line":78,"column":7}},"43":{"start":{"line":73,"column":6},"end":{"line":77,"column":9}},"44":{"start":{"line":74,"column":8},"end":{"line":74,"column":40}},"45":{"start":{"line":74,"column":19},"end":{"line":74,"column":40}},"46":{"start":{"line":75,"column":8},"end":{"line":75,"column":27}},"47":{"start":{"line":76,"column":8},"end":{"line":76,"column":25}},"48":{"start":{"line":90,"column":4},"end":{"line":90,"column":22}},"49":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"50":{"start":{"line":100,"column":6},"end":{"line":100,"column":34}},"51":{"start":{"line":102,"column":4},"end":{"line":102,"column":49}},"52":{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},"53":{"start":{"line":111,"column":6},"end":{"line":111,"column":55}},"54":{"start":{"line":114,"column":4},"end":{"line":114,"column":13}},"55":{"start":{"line":115,"column":4},"end":{"line":119,"column":5}},"56":{"start":{"line":116,"column":6},"end":{"line":116,"column":41}},"57":{"start":{"line":118,"column":6},"end":{"line":118,"column":68}},"58":{"start":{"line":121,"column":4},"end":{"line":121,"column":40}},"59":{"start":{"line":131,"column":4},"end":{"line":131,"column":46}},"60":{"start":{"line":132,"column":4},"end":{"line":132,"column":54}},"61":{"start":{"line":134,"column":4},"end":{"line":152,"column":5}},"62":{"start":{"line":135,"column":6},"end":{"line":143,"column":7}},"63":{"start":{"line":136,"column":8},"end":{"line":136,"column":47}},"64":{"start":{"line":137,"column":8},"end":{"line":137,"column":29}},"65":{"start":{"line":138,"column":8},"end":{"line":138,"column":18}},"66":{"start":{"line":140,"column":8},"end":{"line":142,"column":45}},"67":{"start":{"line":142,"column":30},"end":{"line":142,"column":43}},"68":{"start":{"line":144,"column":11},"end":{"line":152,"column":5}},"69":{"start":{"line":145,"column":6},"end":{"line":145,"column":43}},"70":{"start":{"line":146,"column":6},"end":{"line":146,"column":27}},"71":{"start":{"line":147,"column":6},"end":{"line":147,"column":20}},"72":{"start":{"line":149,"column":6},"end":{"line":149,"column":44}},"73":{"start":{"line":150,"column":6},"end":{"line":150,"column":27}},"74":{"start":{"line":151,"column":6},"end":{"line":151,"column":16}},"75":{"start":{"line":156,"column":0},"end":{"line":156,"column":36}}},"branchMap":{"1":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":64},"end":{"line":18,"column":66}},{"start":{"line":18,"column":69},"end":{"line":18,"column":88}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":24},"end":{"line":19,"column":41}},{"start":{"line":19,"column":45},"end":{"line":19,"column":54}}]},"3":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":24},"end":{"line":20,"column":41}},{"start":{"line":20,"column":45},"end":{"line":20,"column":49}}]},"4":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":25},"end":{"line":21,"column":43}},{"start":{"line":21,"column":47},"end":{"line":21,"column":49}}]},"5":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":34},"end":{"line":22,"column":61}},{"start":{"line":22,"column":65},"end":{"line":22,"column":75}}]},"6":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"7":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":24}},{"start":{"line":29,"column":28},"end":{"line":29,"column":45}}]},"8":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":11},"end":{"line":34,"column":11}},{"start":{"line":34,"column":11},"end":{"line":34,"column":11}}]},"9":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":11},"end":{"line":38,"column":11}},{"start":{"line":38,"column":11},"end":{"line":38,"column":11}}]},"10":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"11":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"12":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":74,"column":8}},{"start":{"line":74,"column":8},"end":{"line":74,"column":8}}]},"13":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"14":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":110,"column":4}},{"start":{"line":110,"column":4},"end":{"line":110,"column":4}}]},"15":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"16":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":6},"end":{"line":135,"column":6}},{"start":{"line":135,"column":6},"end":{"line":135,"column":6}}]},"17":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":11},"end":{"line":144,"column":11}},{"start":{"line":144,"column":11},"end":{"line":144,"column":11}}]}},"code":["const errors = require('./errors');","const debug = require('debug')('node-telegram-bot-api');","const https = require('https');","const http = require('http');","const fs = require('fs');","const bl = require('bl');","const Promise = require('bluebird');","","","class TelegramBotWebHook {","  /**","   * Sets up a webhook to receive updates","   * @param  {TelegramBot} bot","   * @see https://core.telegram.org/bots/api#getting-updates","   */","  constructor(bot) {","    this.bot = bot;","    this.options = (typeof bot.options.webHook === 'boolean') ? {} : bot.options.webHook;","    this.options.host = this.options.host || '0.0.0.0';","    this.options.port = this.options.port || 8443;","    this.options.https = this.options.https || {};","    this.options.healthEndpoint = this.options.healthEndpoint || '/healthz';","    this._healthRegex = new RegExp(this.options.healthEndpoint);","    this._webServer = null;","    this._open = false;","    this._requestListener = this._requestListener.bind(this);","    this._parseBody = this._parseBody.bind(this);","","    if (this.options.key && this.options.cert) {","      debug('HTTPS WebHook enabled (by key/cert)');","      this.options.https.key = fs.readFileSync(this.options.key);","      this.options.https.cert = fs.readFileSync(this.options.cert);","      this._webServer = https.createServer(this.options.https, this._requestListener);","    } else if (this.options.pfx) {","      debug('HTTPS WebHook enabled (by pfx)');","      this.options.https.pfx = fs.readFileSync(this.options.pfx);","      this._webServer = https.createServer(this.options.https, this._requestListener);","    } else if (Object.keys(this.options.https).length) {","      debug('HTTPS WebHook enabled by (https)');","      this._webServer = https.createServer(this.options.https, this._requestListener);","    } else {","      debug('HTTP WebHook enabled');","      this._webServer = http.createServer(this._requestListener);","    }","  }","","  /**","   * Open WebHook by listening on the port","   * @return {Promise}","   */","  open() {","    if (this.isOpen()) {","      return Promise.resolve();","    }","    return new Promise(resolve => {","      this._webServer.listen(this.options.port, this.options.host, () => {","        debug('WebHook listening on port %s', this.options.port);","        this._open = true;","        return resolve();","      });","    });","  }","","  /**","   * Close the webHook","   * @return {Promise}","   */","  close() {","    if (!this.isOpen()) {","      return Promise.resolve();","    }","    return new Promise((resolve, reject) => {","      this._webServer.close(error => {","        if (error) return reject(error);","        this._open = false;","        return resolve();","      });","    });","  }","","  /**","   * Return `true` if server is listening. Otherwise, `false`.","   */","  isOpen() {","    // NOTE: Since `http.Server.listening` was added in v5.7.0","    // and we still need to support Node v4,","    // we are going to fallback to 'this._open'.","    // The following LOC would suffice for newer versions of Node.js","    // return this._webServer.listening;","    return this._open;","  }","","  /**","   * Handle error thrown during processing of webhook request.","   * @private","   * @param  {Error} error","   */","  _error(error) {","    if (!this.bot.listeners('webhook_error').length) {","      return console.error(error); // eslint-disable-line no-console","    }","    return this.bot.emit('webhook_error', error);","  }","","  /**","   * Handle request body by passing it to 'callback'","   * @private","   */","  _parseBody(error, body) {","    if (error) {","      return this._error(new errors.FatalError(error));","    }","","    let data;","    try {","      data = JSON.parse(body.toString());","    } catch (parseError) {","      return this._error(new errors.ParseError(parseError.message));","    }","","    return this.bot.processUpdate(data);","  }","","  /**","   * Listener for 'request' event on server","   * @private","   * @see https://nodejs.org/docs/latest/api/http.html#http_http_createserver_requestlistener","   * @see https://nodejs.org/docs/latest/api/https.html#https_https_createserver_options_requestlistener","   */","  _requestListener(req, res) {","    debug('WebHook request URL: %s', req.url);","    debug('WebHook request headers: %j', req.headers);","","    if (req.url.indexOf(this.bot.token) !== -1) {","      if (req.method !== 'POST') {","        debug('WebHook request isn\\'t a POST');","        res.statusCode = 418; // I'm a teabot!","        res.end();","      } else {","        req","          .pipe(bl(this._parseBody))","          .on('finish', () => res.end('OK'));","      }","    } else if (this._healthRegex.test(req.url)) {","      debug('WebHook health check passed');","      res.statusCode = 200;","      res.end('OK');","    } else {","      debug('WebHook request unauthorized');","      res.statusCode = 401;","      res.end();","    }","  }","}","","module.exports = TelegramBotWebHook;",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"42":0,"43":0,"52":0,"53":0,"55":0,"56":0,"57":0,"58":0,"59":0,"69":0,"70":0,"72":0,"73":0,"74":0,"75":0,"76":0,"90":0,"99":0,"100":0,"102":0,"110":0,"111":0,"114":0,"115":0,"116":0,"118":0,"121":0,"131":0,"132":0,"134":0,"135":0,"136":0,"137":0,"138":0,"140":0,"142":0,"144":0,"145":0,"146":0,"147":0,"149":0,"150":0,"151":0,"156":1}},"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/node_modules/node-telegram-bot-api/src/telegramPolling.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/node_modules/node-telegram-bot-api/src/telegramPolling.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":13},"end":{"line":12,"column":19}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":7},"end":{"line":36,"column":22}}},"3":{"name":"(anonymous_3)","line":58,"loc":{"start":{"line":58,"column":6},"end":{"line":58,"column":21}}},"4":{"name":"(anonymous_4)","line":79,"loc":{"start":{"line":79,"column":11},"end":{"line":79,"column":14}}},"5":{"name":"(anonymous_5)","line":88,"loc":{"start":{"line":88,"column":10},"end":{"line":88,"column":13}}},"6":{"name":"(anonymous_6)","line":127,"loc":{"start":{"line":127,"column":15},"end":{"line":127,"column":18}}},"7":{"name":"(anonymous_7)","line":135,"loc":{"start":{"line":135,"column":13},"end":{"line":135,"column":16}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":56}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":59}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":19}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":89}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":102}},"7":{"start":{"line":16,"column":4},"end":{"line":16,"column":95}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":115}},"9":{"start":{"line":18,"column":4},"end":{"line":23,"column":5}},"10":{"start":{"line":19,"column":6},"end":{"line":19,"column":98}},"11":{"start":{"line":20,"column":6},"end":{"line":20,"column":57}},"12":{"start":{"line":22,"column":6},"end":{"line":22,"column":39}},"13":{"start":{"line":24,"column":4},"end":{"line":24,"column":25}},"14":{"start":{"line":25,"column":4},"end":{"line":25,"column":29}},"15":{"start":{"line":26,"column":4},"end":{"line":26,"column":24}},"16":{"start":{"line":27,"column":4},"end":{"line":27,"column":32}},"17":{"start":{"line":37,"column":4},"end":{"line":47,"column":5}},"18":{"start":{"line":38,"column":6},"end":{"line":40,"column":7}},"19":{"start":{"line":39,"column":8},"end":{"line":39,"column":33}},"20":{"start":{"line":41,"column":6},"end":{"line":46,"column":9}},"21":{"start":{"line":45,"column":8},"end":{"line":45,"column":31}},"22":{"start":{"line":48,"column":4},"end":{"line":48,"column":27}},"23":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"24":{"start":{"line":60,"column":6},"end":{"line":60,"column":31}},"25":{"start":{"line":62,"column":4},"end":{"line":62,"column":42}},"26":{"start":{"line":63,"column":4},"end":{"line":63,"column":29}},"27":{"start":{"line":64,"column":4},"end":{"line":64,"column":39}},"28":{"start":{"line":65,"column":4},"end":{"line":69,"column":5}},"29":{"start":{"line":66,"column":6},"end":{"line":66,"column":54}},"30":{"start":{"line":67,"column":6},"end":{"line":67,"column":33}},"31":{"start":{"line":68,"column":6},"end":{"line":68,"column":31}},"32":{"start":{"line":70,"column":4},"end":{"line":70,"column":23}},"33":{"start":{"line":71,"column":4},"end":{"line":73,"column":7}},"34":{"start":{"line":72,"column":6},"end":{"line":72,"column":26}},"35":{"start":{"line":80,"column":4},"end":{"line":80,"column":31}},"36":{"start":{"line":89,"column":4},"end":{"line":117,"column":9}},"37":{"start":{"line":92,"column":8},"end":{"line":92,"column":38}},"38":{"start":{"line":93,"column":8},"end":{"line":93,"column":42}},"39":{"start":{"line":94,"column":8},"end":{"line":98,"column":11}},"40":{"start":{"line":95,"column":10},"end":{"line":95,"column":60}},"41":{"start":{"line":96,"column":10},"end":{"line":96,"column":66}},"42":{"start":{"line":97,"column":10},"end":{"line":97,"column":41}},"43":{"start":{"line":99,"column":8},"end":{"line":99,"column":20}},"44":{"start":{"line":102,"column":8},"end":{"line":102,"column":48}},"45":{"start":{"line":103,"column":8},"end":{"line":107,"column":9}},"46":{"start":{"line":104,"column":10},"end":{"line":104,"column":46}},"47":{"start":{"line":106,"column":10},"end":{"line":106,"column":29}},"48":{"start":{"line":108,"column":8},"end":{"line":108,"column":20}},"49":{"start":{"line":111,"column":8},"end":{"line":116,"column":9}},"50":{"start":{"line":112,"column":10},"end":{"line":112,"column":39}},"51":{"start":{"line":114,"column":10},"end":{"line":114,"column":72}},"52":{"start":{"line":115,"column":10},"end":{"line":115,"column":90}},"53":{"start":{"line":115,"column":50},"end":{"line":115,"column":65}},"54":{"start":{"line":118,"column":4},"end":{"line":118,"column":29}},"55":{"start":{"line":128,"column":4},"end":{"line":128,"column":31}},"56":{"start":{"line":129,"column":4},"end":{"line":129,"column":43}},"57":{"start":{"line":136,"column":4},"end":{"line":136,"column":59}},"58":{"start":{"line":137,"column":4},"end":{"line":145,"column":9}},"59":{"start":{"line":139,"column":8},"end":{"line":143,"column":9}},"60":{"start":{"line":140,"column":10},"end":{"line":142,"column":13}},"61":{"start":{"line":141,"column":12},"end":{"line":141,"column":60}},"62":{"start":{"line":144,"column":8},"end":{"line":144,"column":18}},"63":{"start":{"line":149,"column":0},"end":{"line":149,"column":36}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":64},"end":{"line":14,"column":66}},{"start":{"line":14,"column":69},"end":{"line":14,"column":88}}]},"2":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":74},"end":{"line":15,"column":95}},{"start":{"line":15,"column":98},"end":{"line":15,"column":101}}]},"3":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":89}},{"start":{"line":16,"column":92},"end":{"line":16,"column":94}}]},"4":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":84},"end":{"line":17,"column":110}},{"start":{"line":17,"column":113},"end":{"line":17,"column":114}}]},"5":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"6":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"7":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":6}},{"start":{"line":38,"column":6},"end":{"line":38,"column":6}}]},"8":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"9":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"10":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":21},"end":{"line":66,"column":35}},{"start":{"line":66,"column":39},"end":{"line":66,"column":53}}]},"11":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":103,"column":8}},{"start":{"line":103,"column":8},"end":{"line":103,"column":8}}]},"12":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":8}},{"start":{"line":111,"column":8},"end":{"line":111,"column":8}}]},"13":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":139,"column":8}},{"start":{"line":139,"column":8},"end":{"line":139,"column":8}}]},"14":{"line":139,"type":"binary-expr","locations":[{"start":{"line":139,"column":12},"end":{"line":139,"column":24}},{"start":{"line":139,"column":28},"end":{"line":139,"column":77}}]}},"code":["const debug = require('debug')('node-telegram-bot-api');","const deprecate = require('depd')('node-telegram-bot-api');","const ANOTHER_WEB_HOOK_USED = 409;","","","class TelegramBotPolling {","  /**","   * Handles polling against the Telegram servers.","   * @param  {TelegramBot} bot","   * @see https://core.telegram.org/bots/api#getting-updates","   */","  constructor(bot) {","    this.bot = bot;","    this.options = (typeof bot.options.polling === 'boolean') ? {} : bot.options.polling;","    this.options.interval = (typeof this.options.interval === 'number') ? this.options.interval : 300;","    this.options.params = (typeof this.options.params === 'object') ? this.options.params : {};","    this.options.params.offset = (typeof this.options.params.offset === 'number') ? this.options.params.offset : 0;","    if (typeof this.options.timeout === 'number') {","      deprecate('`options.polling.timeout` is deprecated. Use `options.polling.params` instead.');","      this.options.params.timeout = this.options.timeout;","    } else {","      this.options.params.timeout = 10;","    }","    this._lastUpdate = 0;","    this._lastRequest = null;","    this._abort = false;","    this._pollingTimeout = null;","  }","","  /**","   * Start polling","   * @param  {Object} [options]","   * @param  {Object} [options.restart]","   * @return {Promise}","   */","  start(options = {}) {","    if (this._lastRequest) {","      if (!options.restart) {","        return Promise.resolve();","      }","      return this.stop({","        cancel: true,","        reason: 'Polling restart',","      }).then(() => {","        return this._polling();","      });","    }","    return this._polling();","  }","","  /**","   * Stop polling","   * @param  {Object} [options]","   * @param  {Boolean} [options.cancel] Cancel current request","   * @param  {String} [options.reason] Reason for stopping polling","   * @return {Promise}","   */","  stop(options = {}) {","    if (!this._lastRequest) {","      return Promise.resolve();","    }","    const lastRequest = this._lastRequest;","    this._lastRequest = null;","    clearTimeout(this._pollingTimeout);","    if (options.cancel) {","      const reason = options.reason || 'Polling stop';","      lastRequest.cancel(reason);","      return Promise.resolve();","    }","    this._abort = true;","    return lastRequest.finally(() => {","      this._abort = false;","    });","  }","","  /**","   * Return `true` if is polling. Otherwise, `false`.","   */","  isPolling() {","    return !!this._lastRequest;","  }","","  /**","   * Invokes polling (with recursion!)","   * @return {Promise} promise of the current request","   * @private","   */","  _polling() {","    this._lastRequest = this","      ._getUpdates()","      .then(updates => {","        this._lastUpdate = Date.now();","        debug('polling data %j', updates);","        updates.forEach(update => {","          this.options.params.offset = update.update_id + 1;","          debug('updated offset: %s', this.options.params.offset);","          this.bot.processUpdate(update);","        });","        return null;","      })","      .catch(err => {","        debug('polling error: %s', err.message);","        if (this.bot.listeners('polling_error').length) {","          this.bot.emit('polling_error', err);","        } else {","          console.error(err); // eslint-disable-line no-console","        }","        return null;","      })","      .finally(() => {","        if (this._abort) {","          debug('Polling is aborted!');","        } else {","          debug('setTimeout for %s miliseconds', this.options.interval);","          this._pollingTimeout = setTimeout(() => this._polling(), this.options.interval);","        }","      });","    return this._lastRequest;","  }","","  /**","   * Unset current webhook. Used when we detect that a webhook has been set","   * and we are trying to poll. Polling and WebHook are mutually exclusive.","   * @see https://core.telegram.org/bots/api#getting-updates","   * @private","   */","  _unsetWebHook() {","    debug('unsetting webhook');","    return this.bot._request('setWebHook');","  }","","  /**","   * Retrieve updates","   */","  _getUpdates() {","    debug('polling with options: %j', this.options.params);","    return this.bot.getUpdates(this.options.params)","      .catch(err => {","        if (err.response && err.response.statusCode === ANOTHER_WEB_HOOK_USED) {","          return this._unsetWebHook().then(() => {","            return this.bot.getUpdates(this.options.params);","          });","        }","        throw err;","      });","  }","}","","module.exports = TelegramBotPolling;",""],"l":{"1":1,"2":1,"3":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"22":0,"24":0,"25":0,"26":0,"27":0,"37":0,"38":0,"39":0,"41":0,"45":0,"48":0,"59":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"70":0,"71":0,"72":0,"80":0,"89":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"99":0,"102":0,"103":0,"104":0,"106":0,"108":0,"111":0,"112":0,"114":0,"115":0,"118":0,"128":0,"129":0,"136":0,"137":0,"139":0,"140":0,"141":0,"144":0,"149":1}},"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/node_modules/node-telegram-bot-api/lib/errors.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/node_modules/node-telegram-bot-api/lib/errors.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":1,"9":4,"10":0,"11":4,"12":4,"13":4,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":1,"22":1,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":1,"34":1,"35":1,"36":0,"37":0,"38":0,"39":0,"40":1,"41":1,"42":1,"43":1,"44":0,"45":0,"46":0,"47":0,"48":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,4],"6":[4,0],"7":[4,4],"8":[4,0],"9":[4,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":4,"4":1,"5":0,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0},"fnMap":{"1":{"name":"_classCallCheck","line":3,"loc":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}}},"2":{"name":"_possibleConstructorReturn","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":48}}},"3":{"name":"_inherits","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":41}}},"4":{"name":"(anonymous_4)","line":9,"loc":{"start":{"line":9,"column":20},"end":{"line":9,"column":38}}},"5":{"name":"BaseError","line":19,"loc":{"start":{"line":19,"column":2},"end":{"line":19,"column":36}}},"6":{"name":"(anonymous_6)","line":31,"loc":{"start":{"line":31,"column":21},"end":{"line":31,"column":51}}},"7":{"name":"FatalError","line":40,"loc":{"start":{"line":40,"column":2},"end":{"line":40,"column":28}}},"8":{"name":"(anonymous_8)","line":55,"loc":{"start":{"line":55,"column":21},"end":{"line":55,"column":52}}},"9":{"name":"ParseError","line":65,"loc":{"start":{"line":65,"column":2},"end":{"line":65,"column":41}}},"10":{"name":"(anonymous_10)","line":77,"loc":{"start":{"line":77,"column":24},"end":{"line":77,"column":55}}},"11":{"name":"TelegramError","line":87,"loc":{"start":{"line":87,"column":2},"end":{"line":87,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":153}},"2":{"start":{"line":3,"column":50},"end":{"line":3,"column":151}},"3":{"start":{"line":3,"column":92},"end":{"line":3,"column":149}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":240}},"5":{"start":{"line":5,"column":50},"end":{"line":5,"column":151}},"6":{"start":{"line":5,"column":63},"end":{"line":5,"column":149}},"7":{"start":{"line":5,"column":152},"end":{"line":5,"column":238}},"8":{"start":{"line":7,"column":0},"end":{"line":7,"column":494}},"9":{"start":{"line":7,"column":43},"end":{"line":7,"column":208}},"10":{"start":{"line":7,"column":106},"end":{"line":7,"column":206}},"11":{"start":{"line":7,"column":209},"end":{"line":7,"column":373}},"12":{"start":{"line":7,"column":374},"end":{"line":7,"column":492}},"13":{"start":{"line":7,"column":390},"end":{"line":7,"column":492}},"14":{"start":{"line":9,"column":0},"end":{"line":29,"column":9}},"15":{"start":{"line":10,"column":2},"end":{"line":10,"column":31}},"16":{"start":{"line":19,"column":2},"end":{"line":26,"column":3}},"17":{"start":{"line":20,"column":4},"end":{"line":20,"column":37}},"18":{"start":{"line":22,"column":4},"end":{"line":22,"column":142}},"19":{"start":{"line":24,"column":4},"end":{"line":24,"column":22}},"20":{"start":{"line":25,"column":4},"end":{"line":25,"column":17}},"21":{"start":{"line":28,"column":2},"end":{"line":28,"column":19}},"22":{"start":{"line":31,"column":0},"end":{"line":53,"column":21}},"23":{"start":{"line":32,"column":2},"end":{"line":32,"column":44}},"24":{"start":{"line":40,"column":2},"end":{"line":50,"column":3}},"25":{"start":{"line":41,"column":4},"end":{"line":41,"column":38}},"26":{"start":{"line":43,"column":4},"end":{"line":43,"column":55}},"27":{"start":{"line":44,"column":4},"end":{"line":44,"column":47}},"28":{"start":{"line":46,"column":4},"end":{"line":46,"column":141}},"29":{"start":{"line":48,"column":4},"end":{"line":48,"column":42}},"30":{"start":{"line":48,"column":15},"end":{"line":48,"column":42}},"31":{"start":{"line":49,"column":4},"end":{"line":49,"column":18}},"32":{"start":{"line":52,"column":2},"end":{"line":52,"column":20}},"33":{"start":{"line":55,"column":0},"end":{"line":75,"column":21}},"34":{"start":{"line":56,"column":2},"end":{"line":56,"column":45}},"35":{"start":{"line":65,"column":2},"end":{"line":72,"column":3}},"36":{"start":{"line":66,"column":4},"end":{"line":66,"column":38}},"37":{"start":{"line":68,"column":4},"end":{"line":68,"column":141}},"38":{"start":{"line":70,"column":4},"end":{"line":70,"column":31}},"39":{"start":{"line":71,"column":4},"end":{"line":71,"column":18}},"40":{"start":{"line":74,"column":2},"end":{"line":74,"column":20}},"41":{"start":{"line":77,"column":0},"end":{"line":97,"column":21}},"42":{"start":{"line":78,"column":2},"end":{"line":78,"column":48}},"43":{"start":{"line":87,"column":2},"end":{"line":94,"column":3}},"44":{"start":{"line":88,"column":4},"end":{"line":88,"column":41}},"45":{"start":{"line":90,"column":4},"end":{"line":90,"column":150}},"46":{"start":{"line":92,"column":4},"end":{"line":92,"column":31}},"47":{"start":{"line":93,"column":4},"end":{"line":93,"column":18}},"48":{"start":{"line":96,"column":2},"end":{"line":96,"column":23}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":50},"end":{"line":3,"column":50}},{"start":{"line":3,"column":50},"end":{"line":3,"column":50}}]},"2":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":50}},{"start":{"line":5,"column":50},"end":{"line":5,"column":50}}]},"3":{"line":5,"type":"cond-expr","locations":[{"start":{"line":5,"column":226},"end":{"line":5,"column":230}},{"start":{"line":5,"column":233},"end":{"line":5,"column":237}}]},"4":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":159},"end":{"line":5,"column":163}},{"start":{"line":5,"column":168},"end":{"line":5,"column":192}},{"start":{"line":5,"column":196},"end":{"line":5,"column":222}}]},"5":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":43},"end":{"line":7,"column":43}},{"start":{"line":7,"column":43},"end":{"line":7,"column":43}}]},"6":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":47},"end":{"line":7,"column":79}},{"start":{"line":7,"column":83},"end":{"line":7,"column":102}}]},"7":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":244},"end":{"line":7,"column":254}},{"start":{"line":7,"column":258},"end":{"line":7,"column":278}}]},"8":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":374},"end":{"line":7,"column":374}},{"start":{"line":7,"column":374},"end":{"line":7,"column":374}}]},"9":{"line":7,"type":"cond-expr","locations":[{"start":{"line":7,"column":414},"end":{"line":7,"column":457}},{"start":{"line":7,"column":460},"end":{"line":7,"column":491}}]},"10":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":50},"end":{"line":22,"column":69}},{"start":{"line":22,"column":73},"end":{"line":22,"column":105}}]},"11":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":43},"end":{"line":43,"column":47}},{"start":{"line":43,"column":50},"end":{"line":43,"column":54}}]},"12":{"line":44,"type":"cond-expr","locations":[{"start":{"line":44,"column":26},"end":{"line":44,"column":39}},{"start":{"line":44,"column":42},"end":{"line":44,"column":46}}]},"13":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":51},"end":{"line":46,"column":71}},{"start":{"line":46,"column":75},"end":{"line":46,"column":108}}]},"14":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"15":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":51},"end":{"line":68,"column":71}},{"start":{"line":68,"column":75},"end":{"line":68,"column":108}}]},"16":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":51},"end":{"line":90,"column":74}},{"start":{"line":90,"column":78},"end":{"line":90,"column":114}}]}},"code":["'use strict';","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }","","exports.BaseError = function (_Error) {","  _inherits(BaseError, _Error);","","  /**","   * @class BaseError","   * @constructor","   * @private","   * @param  {String} code Error code","   * @param  {String} message Error message","   */","  function BaseError(code, message) {","    _classCallCheck(this, BaseError);","","    var _this = _possibleConstructorReturn(this, (BaseError.__proto__ || Object.getPrototypeOf(BaseError)).call(this, code + ': ' + message));","","    _this.code = code;","    return _this;","  }","","  return BaseError;","}(Error);","","exports.FatalError = function (_exports$BaseError) {","  _inherits(FatalError, _exports$BaseError);","","  /**","   * Fatal Error. Error code is `\"EFATAL\"`.","   * @class FatalError","   * @constructor","   * @param  {String|Error} data Error object or message","   */","  function FatalError(data) {","    _classCallCheck(this, FatalError);","","    var error = typeof data === 'string' ? null : data;","    var message = error ? error.message : data;","","    var _this2 = _possibleConstructorReturn(this, (FatalError.__proto__ || Object.getPrototypeOf(FatalError)).call(this, 'EFATAL', message));","","    if (error) _this2.stack = error.stack;","    return _this2;","  }","","  return FatalError;","}(exports.BaseError);","","exports.ParseError = function (_exports$BaseError2) {","  _inherits(ParseError, _exports$BaseError2);","","  /**","   * Error during parsing. Error code is `\"EPARSE\"`.","   * @class ParseError","   * @constructor","   * @param  {String} message Error message","   * @param  {http.IncomingMessage} response Server response","   */","  function ParseError(message, response) {","    _classCallCheck(this, ParseError);","","    var _this3 = _possibleConstructorReturn(this, (ParseError.__proto__ || Object.getPrototypeOf(ParseError)).call(this, 'EPARSE', message));","","    _this3.response = response;","    return _this3;","  }","","  return ParseError;","}(exports.BaseError);","","exports.TelegramError = function (_exports$BaseError3) {","  _inherits(TelegramError, _exports$BaseError3);","","  /**","   * Error returned from Telegram. Error code is `\"ETELEGRAM\"`.","   * @class TelegramError","   * @constructor","   * @param  {String} message Error message","   * @param  {http.IncomingMessage} response Server response","   */","  function TelegramError(message, response) {","    _classCallCheck(this, TelegramError);","","    var _this4 = _possibleConstructorReturn(this, (TelegramError.__proto__ || Object.getPrototypeOf(TelegramError)).call(this, 'ETELEGRAM', message));","","    _this4.response = response;","    return _this4;","  }","","  return TelegramError;","}(exports.BaseError);"],"l":{"3":1,"5":1,"7":4,"9":1,"10":1,"19":1,"20":0,"22":0,"24":0,"25":0,"28":1,"31":1,"32":1,"40":1,"41":0,"43":0,"44":0,"46":0,"48":0,"49":0,"52":1,"55":1,"56":1,"65":1,"66":0,"68":0,"70":0,"71":0,"74":1,"77":1,"78":1,"87":1,"88":0,"90":0,"92":0,"93":0,"96":1}},"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/node_modules/node-telegram-bot-api/lib/telegram.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/node_modules/node-telegram-bot-api/lib/telegram.js","s":{"1":1,"2":0,"3":0,"4":1,"5":1,"6":2,"7":53,"8":53,"9":53,"10":53,"11":51,"12":53,"13":1,"14":2,"15":1,"16":2,"17":1,"18":2,"19":1,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":1,"27":1,"28":0,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":1,"392":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0,0,0],"5":[53,53],"6":[51,2],"7":[1,1],"8":[1,1],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,1],"14":[1,0],"15":[1,1],"16":[1,0],"17":[1,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0]},"f":{"1":0,"2":0,"3":1,"4":2,"5":2,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":84},"end":{"line":3,"column":99}}},"2":{"name":"(anonymous_2)","line":3,"loc":{"start":{"line":3,"column":124},"end":{"line":3,"column":139}}},"3":{"name":"(anonymous_3)","line":5,"loc":{"start":{"line":5,"column":19},"end":{"line":5,"column":31}}},"4":{"name":"defineProperties","line":5,"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":74}}},"5":{"name":"(anonymous_5)","line":5,"loc":{"start":{"line":5,"column":357},"end":{"line":5,"column":405}}},"6":{"name":"_classCallCheck","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":48}}},"7":{"name":"_possibleConstructorReturn","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":48}}},"8":{"name":"_inherits","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":41}}},"9":{"name":"(anonymous_9)","line":41,"loc":{"start":{"line":41,"column":18},"end":{"line":41,"column":43}}},"10":{"name":"get","line":46,"loc":{"start":{"line":46,"column":9},"end":{"line":46,"column":24}}},"11":{"name":"get","line":51,"loc":{"start":{"line":51,"column":9},"end":{"line":51,"column":24}}},"12":{"name":"TelegramBot","line":100,"loc":{"start":{"line":100,"column":2},"end":{"line":100,"column":30}}},"13":{"name":"_buildURL","line":146,"loc":{"start":{"line":146,"column":11},"end":{"line":146,"column":37}}},"14":{"name":"_fixReplyMarkup","line":160,"loc":{"start":{"line":160,"column":11},"end":{"line":160,"column":41}}},"15":{"name":"_request","line":177,"loc":{"start":{"line":177,"column":11},"end":{"line":177,"column":36}}},"16":{"name":"(anonymous_16)","line":201,"loc":{"start":{"line":201,"column":35},"end":{"line":201,"column":51}}},"17":{"name":"(anonymous_17)","line":214,"loc":{"start":{"line":214,"column":15},"end":{"line":214,"column":32}}},"18":{"name":"_formatSendData","line":235,"loc":{"start":{"line":235,"column":11},"end":{"line":235,"column":48}}},"19":{"name":"startPolling","line":296,"loc":{"start":{"line":296,"column":11},"end":{"line":296,"column":35}}},"20":{"name":"initPolling","line":318,"loc":{"start":{"line":318,"column":11},"end":{"line":318,"column":34}}},"21":{"name":"stopPolling","line":332,"loc":{"start":{"line":332,"column":11},"end":{"line":332,"column":34}}},"22":{"name":"isPolling","line":346,"loc":{"start":{"line":346,"column":11},"end":{"line":346,"column":32}}},"23":{"name":"openWebHook","line":359,"loc":{"start":{"line":359,"column":11},"end":{"line":359,"column":34}}},"24":{"name":"closeWebHook","line":377,"loc":{"start":{"line":377,"column":11},"end":{"line":377,"column":35}}},"25":{"name":"hasOpenWebHook","line":392,"loc":{"start":{"line":392,"column":11},"end":{"line":392,"column":37}}},"26":{"name":"getMe","line":404,"loc":{"start":{"line":404,"column":11},"end":{"line":404,"column":28}}},"27":{"name":"setWebHook","line":424,"loc":{"start":{"line":424,"column":11},"end":{"line":424,"column":36}}},"28":{"name":"deleteWebHook","line":467,"loc":{"start":{"line":467,"column":11},"end":{"line":467,"column":36}}},"29":{"name":"getWebHookInfo","line":482,"loc":{"start":{"line":482,"column":11},"end":{"line":482,"column":37}}},"30":{"name":"getUpdates","line":498,"loc":{"start":{"line":498,"column":11},"end":{"line":498,"column":33}}},"31":{"name":"processUpdate","line":528,"loc":{"start":{"line":528,"column":11},"end":{"line":528,"column":42}}},"32":{"name":"processMessageType","line":543,"loc":{"start":{"line":543,"column":33},"end":{"line":543,"column":74}}},"33":{"name":"(anonymous_33)","line":552,"loc":{"start":{"line":552,"column":41},"end":{"line":552,"column":56}}},"34":{"name":"(anonymous_34)","line":566,"loc":{"start":{"line":566,"column":39},"end":{"line":566,"column":56}}},"35":{"name":"sendMessage","line":621,"loc":{"start":{"line":621,"column":11},"end":{"line":621,"column":46}}},"36":{"name":"answerInlineQuery","line":640,"loc":{"start":{"line":640,"column":11},"end":{"line":640,"column":62}}},"37":{"name":"forwardMessage","line":660,"loc":{"start":{"line":660,"column":11},"end":{"line":660,"column":66}}},"38":{"name":"sendPhoto","line":681,"loc":{"start":{"line":681,"column":11},"end":{"line":681,"column":45}}},"39":{"name":"sendAudio","line":710,"loc":{"start":{"line":710,"column":11},"end":{"line":710,"column":45}}},"40":{"name":"sendDocument","line":740,"loc":{"start":{"line":740,"column":11},"end":{"line":740,"column":46}}},"41":{"name":"sendSticker","line":773,"loc":{"start":{"line":773,"column":11},"end":{"line":773,"column":49}}},"42":{"name":"sendVideo","line":802,"loc":{"start":{"line":802,"column":11},"end":{"line":802,"column":45}}},"43":{"name":"sendVoice","line":831,"loc":{"start":{"line":831,"column":11},"end":{"line":831,"column":45}}},"44":{"name":"sendChatAction","line":863,"loc":{"start":{"line":863,"column":11},"end":{"line":863,"column":51}}},"45":{"name":"kickChatMember","line":886,"loc":{"start":{"line":886,"column":11},"end":{"line":886,"column":51}}},"46":{"name":"unbanChatMember","line":908,"loc":{"start":{"line":908,"column":11},"end":{"line":908,"column":52}}},"47":{"name":"answerCallbackQuery","line":932,"loc":{"start":{"line":932,"column":11},"end":{"line":932,"column":74}}},"48":{"name":"editMessageText","line":957,"loc":{"start":{"line":957,"column":11},"end":{"line":957,"column":42}}},"49":{"name":"editMessageCaption","line":980,"loc":{"start":{"line":980,"column":11},"end":{"line":980,"column":48}}},"50":{"name":"editMessageReplyMarkup","line":1003,"loc":{"start":{"line":1003,"column":11},"end":{"line":1003,"column":56}}},"51":{"name":"getUserProfilePhotos","line":1024,"loc":{"start":{"line":1024,"column":11},"end":{"line":1024,"column":49}}},"52":{"name":"sendLocation","line":1057,"loc":{"start":{"line":1057,"column":11},"end":{"line":1057,"column":62}}},"53":{"name":"sendVenue","line":1082,"loc":{"start":{"line":1082,"column":11},"end":{"line":1082,"column":75}}},"54":{"name":"sendContact","line":1107,"loc":{"start":{"line":1107,"column":11},"end":{"line":1107,"column":64}}},"55":{"name":"getFile","line":1128,"loc":{"start":{"line":1128,"column":11},"end":{"line":1128,"column":36}}},"56":{"name":"getFileLink","line":1148,"loc":{"start":{"line":1148,"column":11},"end":{"line":1148,"column":40}}},"57":{"name":"(anonymous_57)","line":1151,"loc":{"start":{"line":1151,"column":39},"end":{"line":1151,"column":55}}},"58":{"name":"downloadFile","line":1167,"loc":{"start":{"line":1167,"column":11},"end":{"line":1167,"column":54}}},"59":{"name":"(anonymous_59)","line":1168,"loc":{"start":{"line":1168,"column":43},"end":{"line":1168,"column":62}}},"60":{"name":"(anonymous_60)","line":1174,"loc":{"start":{"line":1174,"column":36},"end":{"line":1174,"column":52}}},"61":{"name":"onText","line":1189,"loc":{"start":{"line":1189,"column":11},"end":{"line":1189,"column":45}}},"62":{"name":"onReplyToMessage","line":1204,"loc":{"start":{"line":1204,"column":11},"end":{"line":1204,"column":66}}},"63":{"name":"removeReplyListener","line":1225,"loc":{"start":{"line":1225,"column":11},"end":{"line":1225,"column":57}}},"64":{"name":"(anonymous_64)","line":1226,"loc":{"start":{"line":1226,"column":49},"end":{"line":1226,"column":74}}},"65":{"name":"getChat","line":1246,"loc":{"start":{"line":1246,"column":11},"end":{"line":1246,"column":36}}},"66":{"name":"getChatAdministrators","line":1262,"loc":{"start":{"line":1262,"column":11},"end":{"line":1262,"column":50}}},"67":{"name":"getChatMembersCount","line":1278,"loc":{"start":{"line":1278,"column":11},"end":{"line":1278,"column":48}}},"68":{"name":"getChatMember","line":1295,"loc":{"start":{"line":1295,"column":11},"end":{"line":1295,"column":50}}},"69":{"name":"leaveChat","line":1312,"loc":{"start":{"line":1312,"column":11},"end":{"line":1312,"column":38}}},"70":{"name":"sendGame","line":1330,"loc":{"start":{"line":1330,"column":11},"end":{"line":1330,"column":52}}},"71":{"name":"setGameScore","line":1349,"loc":{"start":{"line":1349,"column":11},"end":{"line":1349,"column":48}}},"72":{"name":"getGameHighScores","line":1367,"loc":{"start":{"line":1367,"column":11},"end":{"line":1367,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":269}},"2":{"start":{"line":3,"column":101},"end":{"line":3,"column":119}},"3":{"start":{"line":3,"column":141},"end":{"line":3,"column":266}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":564}},"5":{"start":{"line":5,"column":33},"end":{"line":5,"column":349}},"6":{"start":{"line":5,"column":76},"end":{"line":5,"column":347}},"7":{"start":{"line":5,"column":117},"end":{"line":5,"column":143}},"8":{"start":{"line":5,"column":144},"end":{"line":5,"column":199}},"9":{"start":{"line":5,"column":200},"end":{"line":5,"column":231}},"10":{"start":{"line":5,"column":232},"end":{"line":5,"column":286}},"11":{"start":{"line":5,"column":259},"end":{"line":5,"column":286}},"12":{"start":{"line":5,"column":287},"end":{"line":5,"column":345}},"13":{"start":{"line":5,"column":350},"end":{"line":5,"column":559}},"14":{"start":{"line":5,"column":407},"end":{"line":5,"column":475}},"15":{"start":{"line":5,"column":423},"end":{"line":5,"column":475}},"16":{"start":{"line":5,"column":476},"end":{"line":5,"column":536}},"17":{"start":{"line":5,"column":493},"end":{"line":5,"column":536}},"18":{"start":{"line":5,"column":537},"end":{"line":5,"column":556}},"19":{"start":{"line":7,"column":0},"end":{"line":7,"column":153}},"20":{"start":{"line":7,"column":50},"end":{"line":7,"column":151}},"21":{"start":{"line":7,"column":92},"end":{"line":7,"column":149}},"22":{"start":{"line":9,"column":0},"end":{"line":9,"column":240}},"23":{"start":{"line":9,"column":50},"end":{"line":9,"column":151}},"24":{"start":{"line":9,"column":63},"end":{"line":9,"column":149}},"25":{"start":{"line":9,"column":152},"end":{"line":9,"column":238}},"26":{"start":{"line":11,"column":0},"end":{"line":11,"column":494}},"27":{"start":{"line":11,"column":43},"end":{"line":11,"column":208}},"28":{"start":{"line":11,"column":106},"end":{"line":11,"column":206}},"29":{"start":{"line":11,"column":209},"end":{"line":11,"column":373}},"30":{"start":{"line":11,"column":374},"end":{"line":11,"column":492}},"31":{"start":{"line":11,"column":390},"end":{"line":11,"column":492}},"32":{"start":{"line":14,"column":0},"end":{"line":14,"column":44}},"33":{"start":{"line":16,"column":0},"end":{"line":16,"column":33}},"34":{"start":{"line":17,"column":0},"end":{"line":17,"column":54}},"35":{"start":{"line":18,"column":0},"end":{"line":18,"column":54}},"36":{"start":{"line":19,"column":0},"end":{"line":19,"column":54}},"37":{"start":{"line":20,"column":0},"end":{"line":20,"column":44}},"38":{"start":{"line":21,"column":0},"end":{"line":21,"column":36}},"39":{"start":{"line":22,"column":0},"end":{"line":22,"column":34}},"40":{"start":{"line":23,"column":0},"end":{"line":23,"column":41}},"41":{"start":{"line":24,"column":0},"end":{"line":24,"column":41}},"42":{"start":{"line":25,"column":0},"end":{"line":25,"column":32}},"43":{"start":{"line":26,"column":0},"end":{"line":26,"column":31}},"44":{"start":{"line":27,"column":0},"end":{"line":27,"column":27}},"45":{"start":{"line":28,"column":0},"end":{"line":28,"column":27}},"46":{"start":{"line":29,"column":0},"end":{"line":29,"column":25}},"47":{"start":{"line":30,"column":0},"end":{"line":30,"column":23}},"48":{"start":{"line":31,"column":0},"end":{"line":31,"column":27}},"49":{"start":{"line":32,"column":0},"end":{"line":32,"column":57}},"50":{"start":{"line":34,"column":0},"end":{"line":34,"column":239}},"51":{"start":{"line":37,"column":0},"end":{"line":39,"column":3}},"52":{"start":{"line":41,"column":0},"end":{"line":1376,"column":16}},"53":{"start":{"line":42,"column":2},"end":{"line":42,"column":40}},"54":{"start":{"line":44,"column":2},"end":{"line":98,"column":6}},"55":{"start":{"line":47,"column":6},"end":{"line":47,"column":20}},"56":{"start":{"line":52,"column":6},"end":{"line":52,"column":27}},"57":{"start":{"line":100,"column":2},"end":{"line":133,"column":3}},"58":{"start":{"line":101,"column":4},"end":{"line":101,"column":89}},"59":{"start":{"line":103,"column":4},"end":{"line":103,"column":39}},"60":{"start":{"line":105,"column":4},"end":{"line":105,"column":123}},"61":{"start":{"line":107,"column":4},"end":{"line":107,"column":24}},"62":{"start":{"line":108,"column":4},"end":{"line":108,"column":28}},"63":{"start":{"line":109,"column":4},"end":{"line":109,"column":93}},"64":{"start":{"line":110,"column":4},"end":{"line":110,"column":93}},"65":{"start":{"line":111,"column":4},"end":{"line":111,"column":80}},"66":{"start":{"line":112,"column":4},"end":{"line":112,"column":95}},"67":{"start":{"line":113,"column":4},"end":{"line":113,"column":36}},"68":{"start":{"line":114,"column":4},"end":{"line":114,"column":31}},"69":{"start":{"line":115,"column":4},"end":{"line":115,"column":31}},"70":{"start":{"line":116,"column":4},"end":{"line":116,"column":26}},"71":{"start":{"line":117,"column":4},"end":{"line":117,"column":26}},"72":{"start":{"line":119,"column":4},"end":{"line":124,"column":5}},"73":{"start":{"line":120,"column":6},"end":{"line":120,"column":48}},"74":{"start":{"line":121,"column":6},"end":{"line":123,"column":7}},"75":{"start":{"line":122,"column":8},"end":{"line":122,"column":29}},"76":{"start":{"line":126,"column":4},"end":{"line":131,"column":5}},"77":{"start":{"line":127,"column":6},"end":{"line":127,"column":46}},"78":{"start":{"line":128,"column":6},"end":{"line":130,"column":7}},"79":{"start":{"line":129,"column":8},"end":{"line":129,"column":28}},"80":{"start":{"line":132,"column":4},"end":{"line":132,"column":17}},"81":{"start":{"line":144,"column":2},"end":{"line":1373,"column":6}},"82":{"start":{"line":147,"column":6},"end":{"line":147,"column":73}},"83":{"start":{"line":161,"column":6},"end":{"line":161,"column":41}},"84":{"start":{"line":162,"column":6},"end":{"line":164,"column":7}},"85":{"start":{"line":163,"column":8},"end":{"line":163,"column":55}},"86":{"start":{"line":178,"column":6},"end":{"line":178,"column":91}},"87":{"start":{"line":180,"column":6},"end":{"line":182,"column":7}},"88":{"start":{"line":181,"column":8},"end":{"line":181,"column":89}},"89":{"start":{"line":184,"column":6},"end":{"line":186,"column":7}},"90":{"start":{"line":185,"column":8},"end":{"line":185,"column":53}},"91":{"start":{"line":188,"column":6},"end":{"line":190,"column":7}},"92":{"start":{"line":189,"column":8},"end":{"line":189,"column":43}},"93":{"start":{"line":191,"column":6},"end":{"line":193,"column":7}},"94":{"start":{"line":192,"column":8},"end":{"line":192,"column":41}},"95":{"start":{"line":195,"column":6},"end":{"line":195,"column":30}},"96":{"start":{"line":196,"column":6},"end":{"line":196,"column":42}},"97":{"start":{"line":197,"column":6},"end":{"line":197,"column":29}},"98":{"start":{"line":198,"column":6},"end":{"line":198,"column":45}},"99":{"start":{"line":199,"column":6},"end":{"line":199,"column":29}},"100":{"start":{"line":200,"column":6},"end":{"line":200,"column":41}},"101":{"start":{"line":201,"column":6},"end":{"line":218,"column":9}},"102":{"start":{"line":202,"column":8},"end":{"line":202,"column":26}},"103":{"start":{"line":203,"column":8},"end":{"line":207,"column":9}},"104":{"start":{"line":204,"column":10},"end":{"line":204,"column":51}},"105":{"start":{"line":206,"column":10},"end":{"line":206,"column":93}},"106":{"start":{"line":209,"column":8},"end":{"line":211,"column":9}},"107":{"start":{"line":210,"column":10},"end":{"line":210,"column":29}},"108":{"start":{"line":213,"column":8},"end":{"line":213,"column":87}},"109":{"start":{"line":216,"column":8},"end":{"line":216,"column":40}},"110":{"start":{"line":216,"column":28},"end":{"line":216,"column":40}},"111":{"start":{"line":217,"column":8},"end":{"line":217,"column":43}},"112":{"start":{"line":236,"column":6},"end":{"line":236,"column":28}},"113":{"start":{"line":237,"column":6},"end":{"line":237,"column":28}},"114":{"start":{"line":238,"column":6},"end":{"line":238,"column":26}},"115":{"start":{"line":239,"column":6},"end":{"line":282,"column":7}},"116":{"start":{"line":242,"column":8},"end":{"line":242,"column":89}},"117":{"start":{"line":243,"column":8},"end":{"line":243,"column":22}},"118":{"start":{"line":244,"column":8},"end":{"line":250,"column":10}},"119":{"start":{"line":251,"column":13},"end":{"line":282,"column":7}},"120":{"start":{"line":252,"column":8},"end":{"line":252,"column":38}},"121":{"start":{"line":253,"column":8},"end":{"line":255,"column":9}},"122":{"start":{"line":254,"column":10},"end":{"line":254,"column":70}},"123":{"start":{"line":256,"column":8},"end":{"line":256,"column":22}},"124":{"start":{"line":257,"column":8},"end":{"line":263,"column":10}},"125":{"start":{"line":264,"column":13},"end":{"line":282,"column":7}},"126":{"start":{"line":269,"column":8},"end":{"line":269,"column":22}},"127":{"start":{"line":270,"column":13},"end":{"line":282,"column":7}},"128":{"start":{"line":271,"column":8},"end":{"line":271,"column":39}},"129":{"start":{"line":272,"column":8},"end":{"line":272,"column":22}},"130":{"start":{"line":273,"column":8},"end":{"line":279,"column":10}},"131":{"start":{"line":281,"column":8},"end":{"line":281,"column":22}},"132":{"start":{"line":283,"column":6},"end":{"line":283,"column":32}},"133":{"start":{"line":297,"column":6},"end":{"line":297,"column":91}},"134":{"start":{"line":299,"column":6},"end":{"line":301,"column":7}},"135":{"start":{"line":300,"column":8},"end":{"line":300,"column":99}},"136":{"start":{"line":302,"column":6},"end":{"line":302,"column":88}},"137":{"start":{"line":303,"column":6},"end":{"line":305,"column":7}},"138":{"start":{"line":304,"column":8},"end":{"line":304,"column":53}},"139":{"start":{"line":306,"column":6},"end":{"line":306,"column":42}},"140":{"start":{"line":319,"column":6},"end":{"line":319,"column":59}},"141":{"start":{"line":320,"column":6},"end":{"line":320,"column":33}},"142":{"start":{"line":333,"column":6},"end":{"line":335,"column":7}},"143":{"start":{"line":334,"column":8},"end":{"line":334,"column":33}},"144":{"start":{"line":336,"column":6},"end":{"line":336,"column":34}},"145":{"start":{"line":347,"column":6},"end":{"line":347,"column":63}},"146":{"start":{"line":360,"column":6},"end":{"line":362,"column":7}},"147":{"start":{"line":361,"column":8},"end":{"line":361,"column":99}},"148":{"start":{"line":363,"column":6},"end":{"line":365,"column":7}},"149":{"start":{"line":364,"column":8},"end":{"line":364,"column":53}},"150":{"start":{"line":366,"column":6},"end":{"line":366,"column":34}},"151":{"start":{"line":378,"column":6},"end":{"line":380,"column":7}},"152":{"start":{"line":379,"column":8},"end":{"line":379,"column":33}},"153":{"start":{"line":381,"column":6},"end":{"line":381,"column":35}},"154":{"start":{"line":393,"column":6},"end":{"line":393,"column":60}},"155":{"start":{"line":405,"column":6},"end":{"line":405,"column":26}},"156":{"start":{"line":406,"column":6},"end":{"line":406,"column":34}},"157":{"start":{"line":425,"column":6},"end":{"line":425,"column":91}},"158":{"start":{"line":430,"column":6},"end":{"line":430,"column":24}},"159":{"start":{"line":432,"column":6},"end":{"line":438,"column":7}},"160":{"start":{"line":433,"column":8},"end":{"line":433,"column":98}},"161":{"start":{"line":434,"column":8},"end":{"line":434,"column":23}},"162":{"start":{"line":435,"column":8},"end":{"line":435,"column":21}},"163":{"start":{"line":437,"column":8},"end":{"line":437,"column":35}},"164":{"start":{"line":440,"column":6},"end":{"line":442,"column":8}},"165":{"start":{"line":443,"column":6},"end":{"line":443,"column":24}},"166":{"start":{"line":445,"column":6},"end":{"line":453,"column":7}},"167":{"start":{"line":446,"column":8},"end":{"line":452,"column":9}},"168":{"start":{"line":447,"column":10},"end":{"line":447,"column":67}},"169":{"start":{"line":448,"column":10},"end":{"line":448,"column":38}},"170":{"start":{"line":449,"column":10},"end":{"line":449,"column":44}},"171":{"start":{"line":451,"column":10},"end":{"line":451,"column":36}},"172":{"start":{"line":455,"column":6},"end":{"line":455,"column":47}},"173":{"start":{"line":468,"column":6},"end":{"line":468,"column":44}},"174":{"start":{"line":483,"column":6},"end":{"line":483,"column":45}},"175":{"start":{"line":499,"column":6},"end":{"line":499,"column":88}},"176":{"start":{"line":504,"column":6},"end":{"line":513,"column":7}},"177":{"start":{"line":506,"column":8},"end":{"line":506,"column":111}},"178":{"start":{"line":507,"column":8},"end":{"line":511,"column":10}},"179":{"start":{"line":515,"column":6},"end":{"line":515,"column":57}},"180":{"start":{"line":529,"column":6},"end":{"line":529,"column":24}},"181":{"start":{"line":531,"column":6},"end":{"line":531,"column":41}},"182":{"start":{"line":532,"column":6},"end":{"line":532,"column":35}},"183":{"start":{"line":533,"column":6},"end":{"line":533,"column":48}},"184":{"start":{"line":534,"column":6},"end":{"line":534,"column":44}},"185":{"start":{"line":535,"column":6},"end":{"line":535,"column":57}},"186":{"start":{"line":536,"column":6},"end":{"line":536,"column":44}},"187":{"start":{"line":537,"column":6},"end":{"line":537,"column":59}},"188":{"start":{"line":538,"column":6},"end":{"line":538,"column":48}},"189":{"start":{"line":540,"column":6},"end":{"line":607,"column":7}},"190":{"start":{"line":541,"column":8},"end":{"line":541,"column":52}},"191":{"start":{"line":542,"column":8},"end":{"line":542,"column":38}},"192":{"start":{"line":543,"column":8},"end":{"line":548,"column":10}},"193":{"start":{"line":544,"column":10},"end":{"line":547,"column":11}},"194":{"start":{"line":545,"column":12},"end":{"line":545,"column":59}},"195":{"start":{"line":546,"column":12},"end":{"line":546,"column":46}},"196":{"start":{"line":549,"column":8},"end":{"line":549,"column":61}},"197":{"start":{"line":550,"column":8},"end":{"line":563,"column":9}},"198":{"start":{"line":551,"column":10},"end":{"line":551,"column":32}},"199":{"start":{"line":552,"column":10},"end":{"line":562,"column":13}},"200":{"start":{"line":553,"column":12},"end":{"line":553,"column":67}},"201":{"start":{"line":554,"column":12},"end":{"line":554,"column":55}},"202":{"start":{"line":555,"column":12},"end":{"line":557,"column":13}},"203":{"start":{"line":556,"column":14},"end":{"line":556,"column":27}},"204":{"start":{"line":558,"column":12},"end":{"line":558,"column":44}},"205":{"start":{"line":559,"column":12},"end":{"line":559,"column":42}},"206":{"start":{"line":561,"column":12},"end":{"line":561,"column":49}},"207":{"start":{"line":564,"column":8},"end":{"line":576,"column":9}},"208":{"start":{"line":566,"column":10},"end":{"line":575,"column":13}},"209":{"start":{"line":568,"column":12},"end":{"line":574,"column":13}},"210":{"start":{"line":570,"column":14},"end":{"line":573,"column":15}},"211":{"start":{"line":572,"column":16},"end":{"line":572,"column":40}},"212":{"start":{"line":577,"column":13},"end":{"line":607,"column":7}},"213":{"start":{"line":578,"column":8},"end":{"line":578,"column":65}},"214":{"start":{"line":579,"column":8},"end":{"line":579,"column":51}},"215":{"start":{"line":580,"column":8},"end":{"line":582,"column":9}},"216":{"start":{"line":581,"column":10},"end":{"line":581,"column":58}},"217":{"start":{"line":583,"column":8},"end":{"line":585,"column":9}},"218":{"start":{"line":584,"column":10},"end":{"line":584,"column":61}},"219":{"start":{"line":586,"column":13},"end":{"line":607,"column":7}},"220":{"start":{"line":587,"column":8},"end":{"line":587,"column":61}},"221":{"start":{"line":588,"column":8},"end":{"line":588,"column":47}},"222":{"start":{"line":589,"column":13},"end":{"line":607,"column":7}},"223":{"start":{"line":590,"column":8},"end":{"line":590,"column":74}},"224":{"start":{"line":591,"column":8},"end":{"line":591,"column":60}},"225":{"start":{"line":592,"column":8},"end":{"line":594,"column":9}},"226":{"start":{"line":593,"column":10},"end":{"line":593,"column":67}},"227":{"start":{"line":595,"column":8},"end":{"line":597,"column":9}},"228":{"start":{"line":596,"column":10},"end":{"line":596,"column":70}},"229":{"start":{"line":598,"column":13},"end":{"line":607,"column":7}},"230":{"start":{"line":599,"column":8},"end":{"line":599,"column":61}},"231":{"start":{"line":600,"column":8},"end":{"line":600,"column":47}},"232":{"start":{"line":601,"column":13},"end":{"line":607,"column":7}},"233":{"start":{"line":602,"column":8},"end":{"line":602,"column":76}},"234":{"start":{"line":603,"column":8},"end":{"line":603,"column":62}},"235":{"start":{"line":604,"column":13},"end":{"line":607,"column":7}},"236":{"start":{"line":605,"column":8},"end":{"line":605,"column":65}},"237":{"start":{"line":606,"column":8},"end":{"line":606,"column":51}},"238":{"start":{"line":622,"column":6},"end":{"line":622,"column":88}},"239":{"start":{"line":624,"column":6},"end":{"line":624,"column":28}},"240":{"start":{"line":625,"column":6},"end":{"line":625,"column":23}},"241":{"start":{"line":626,"column":6},"end":{"line":626,"column":58}},"242":{"start":{"line":641,"column":6},"end":{"line":641,"column":88}},"243":{"start":{"line":643,"column":6},"end":{"line":643,"column":43}},"244":{"start":{"line":644,"column":6},"end":{"line":644,"column":45}},"245":{"start":{"line":645,"column":6},"end":{"line":645,"column":64}},"246":{"start":{"line":661,"column":6},"end":{"line":661,"column":88}},"247":{"start":{"line":663,"column":6},"end":{"line":663,"column":28}},"248":{"start":{"line":664,"column":6},"end":{"line":664,"column":37}},"249":{"start":{"line":665,"column":6},"end":{"line":665,"column":34}},"250":{"start":{"line":666,"column":6},"end":{"line":666,"column":61}},"251":{"start":{"line":682,"column":6},"end":{"line":682,"column":91}},"252":{"start":{"line":684,"column":6},"end":{"line":686,"column":8}},"253":{"start":{"line":687,"column":6},"end":{"line":687,"column":31}},"254":{"start":{"line":688,"column":6},"end":{"line":694,"column":7}},"255":{"start":{"line":689,"column":8},"end":{"line":689,"column":60}},"256":{"start":{"line":690,"column":8},"end":{"line":690,"column":36}},"257":{"start":{"line":691,"column":8},"end":{"line":691,"column":36}},"258":{"start":{"line":693,"column":8},"end":{"line":693,"column":34}},"259":{"start":{"line":695,"column":6},"end":{"line":695,"column":46}},"260":{"start":{"line":711,"column":6},"end":{"line":711,"column":91}},"261":{"start":{"line":713,"column":6},"end":{"line":715,"column":8}},"262":{"start":{"line":716,"column":6},"end":{"line":716,"column":31}},"263":{"start":{"line":717,"column":6},"end":{"line":723,"column":7}},"264":{"start":{"line":718,"column":8},"end":{"line":718,"column":60}},"265":{"start":{"line":719,"column":8},"end":{"line":719,"column":36}},"266":{"start":{"line":720,"column":8},"end":{"line":720,"column":36}},"267":{"start":{"line":722,"column":8},"end":{"line":722,"column":34}},"268":{"start":{"line":724,"column":6},"end":{"line":724,"column":46}},"269":{"start":{"line":741,"column":6},"end":{"line":741,"column":91}},"270":{"start":{"line":742,"column":6},"end":{"line":742,"column":92}},"271":{"start":{"line":744,"column":6},"end":{"line":746,"column":8}},"272":{"start":{"line":747,"column":6},"end":{"line":747,"column":31}},"273":{"start":{"line":748,"column":6},"end":{"line":754,"column":7}},"274":{"start":{"line":749,"column":8},"end":{"line":749,"column":61}},"275":{"start":{"line":750,"column":8},"end":{"line":750,"column":36}},"276":{"start":{"line":751,"column":8},"end":{"line":751,"column":39}},"277":{"start":{"line":753,"column":8},"end":{"line":753,"column":34}},"278":{"start":{"line":755,"column":6},"end":{"line":757,"column":7}},"279":{"start":{"line":756,"column":8},"end":{"line":756,"column":50}},"280":{"start":{"line":758,"column":6},"end":{"line":758,"column":49}},"281":{"start":{"line":774,"column":6},"end":{"line":774,"column":91}},"282":{"start":{"line":776,"column":6},"end":{"line":778,"column":8}},"283":{"start":{"line":779,"column":6},"end":{"line":779,"column":31}},"284":{"start":{"line":780,"column":6},"end":{"line":786,"column":7}},"285":{"start":{"line":781,"column":8},"end":{"line":781,"column":64}},"286":{"start":{"line":782,"column":8},"end":{"line":782,"column":36}},"287":{"start":{"line":783,"column":8},"end":{"line":783,"column":38}},"288":{"start":{"line":785,"column":8},"end":{"line":785,"column":34}},"289":{"start":{"line":787,"column":6},"end":{"line":787,"column":48}},"290":{"start":{"line":803,"column":6},"end":{"line":803,"column":91}},"291":{"start":{"line":805,"column":6},"end":{"line":807,"column":8}},"292":{"start":{"line":808,"column":6},"end":{"line":808,"column":31}},"293":{"start":{"line":809,"column":6},"end":{"line":815,"column":7}},"294":{"start":{"line":810,"column":8},"end":{"line":810,"column":60}},"295":{"start":{"line":811,"column":8},"end":{"line":811,"column":36}},"296":{"start":{"line":812,"column":8},"end":{"line":812,"column":36}},"297":{"start":{"line":814,"column":8},"end":{"line":814,"column":34}},"298":{"start":{"line":816,"column":6},"end":{"line":816,"column":46}},"299":{"start":{"line":832,"column":6},"end":{"line":832,"column":91}},"300":{"start":{"line":834,"column":6},"end":{"line":836,"column":8}},"301":{"start":{"line":837,"column":6},"end":{"line":837,"column":31}},"302":{"start":{"line":838,"column":6},"end":{"line":844,"column":7}},"303":{"start":{"line":839,"column":8},"end":{"line":839,"column":60}},"304":{"start":{"line":840,"column":8},"end":{"line":840,"column":36}},"305":{"start":{"line":841,"column":8},"end":{"line":841,"column":36}},"306":{"start":{"line":843,"column":8},"end":{"line":843,"column":34}},"307":{"start":{"line":845,"column":6},"end":{"line":845,"column":46}},"308":{"start":{"line":864,"column":6},"end":{"line":867,"column":8}},"309":{"start":{"line":868,"column":6},"end":{"line":868,"column":61}},"310":{"start":{"line":887,"column":6},"end":{"line":890,"column":8}},"311":{"start":{"line":891,"column":6},"end":{"line":891,"column":61}},"312":{"start":{"line":909,"column":6},"end":{"line":912,"column":8}},"313":{"start":{"line":913,"column":6},"end":{"line":913,"column":62}},"314":{"start":{"line":933,"column":6},"end":{"line":933,"column":88}},"315":{"start":{"line":935,"column":6},"end":{"line":935,"column":47}},"316":{"start":{"line":936,"column":6},"end":{"line":936,"column":23}},"317":{"start":{"line":937,"column":6},"end":{"line":937,"column":34}},"318":{"start":{"line":938,"column":6},"end":{"line":938,"column":66}},"319":{"start":{"line":958,"column":6},"end":{"line":958,"column":88}},"320":{"start":{"line":960,"column":6},"end":{"line":960,"column":23}},"321":{"start":{"line":961,"column":6},"end":{"line":961,"column":62}},"322":{"start":{"line":981,"column":6},"end":{"line":981,"column":88}},"323":{"start":{"line":983,"column":6},"end":{"line":983,"column":29}},"324":{"start":{"line":984,"column":6},"end":{"line":984,"column":65}},"325":{"start":{"line":1004,"column":6},"end":{"line":1004,"column":88}},"326":{"start":{"line":1006,"column":6},"end":{"line":1006,"column":38}},"327":{"start":{"line":1007,"column":6},"end":{"line":1007,"column":69}},"328":{"start":{"line":1025,"column":6},"end":{"line":1025,"column":88}},"329":{"start":{"line":1030,"column":6},"end":{"line":1038,"column":7}},"330":{"start":{"line":1032,"column":8},"end":{"line":1032,"column":120}},"331":{"start":{"line":1033,"column":8},"end":{"line":1036,"column":10}},"332":{"start":{"line":1039,"column":6},"end":{"line":1039,"column":28}},"333":{"start":{"line":1040,"column":6},"end":{"line":1040,"column":67}},"334":{"start":{"line":1058,"column":6},"end":{"line":1058,"column":88}},"335":{"start":{"line":1060,"column":6},"end":{"line":1060,"column":28}},"336":{"start":{"line":1061,"column":6},"end":{"line":1061,"column":31}},"337":{"start":{"line":1062,"column":6},"end":{"line":1062,"column":33}},"338":{"start":{"line":1063,"column":6},"end":{"line":1063,"column":59}},"339":{"start":{"line":1083,"column":6},"end":{"line":1083,"column":88}},"340":{"start":{"line":1085,"column":6},"end":{"line":1085,"column":28}},"341":{"start":{"line":1086,"column":6},"end":{"line":1086,"column":31}},"342":{"start":{"line":1087,"column":6},"end":{"line":1087,"column":33}},"343":{"start":{"line":1088,"column":6},"end":{"line":1088,"column":25}},"344":{"start":{"line":1089,"column":6},"end":{"line":1089,"column":29}},"345":{"start":{"line":1090,"column":6},"end":{"line":1090,"column":56}},"346":{"start":{"line":1108,"column":6},"end":{"line":1108,"column":88}},"347":{"start":{"line":1110,"column":6},"end":{"line":1110,"column":28}},"348":{"start":{"line":1111,"column":6},"end":{"line":1111,"column":38}},"349":{"start":{"line":1112,"column":6},"end":{"line":1112,"column":34}},"350":{"start":{"line":1113,"column":6},"end":{"line":1113,"column":58}},"351":{"start":{"line":1129,"column":6},"end":{"line":1129,"column":37}},"352":{"start":{"line":1130,"column":6},"end":{"line":1130,"column":54}},"353":{"start":{"line":1149,"column":6},"end":{"line":1149,"column":24}},"354":{"start":{"line":1151,"column":6},"end":{"line":1153,"column":9}},"355":{"start":{"line":1152,"column":8},"end":{"line":1152,"column":93}},"356":{"start":{"line":1168,"column":6},"end":{"line":1177,"column":9}},"357":{"start":{"line":1169,"column":8},"end":{"line":1169,"column":67}},"358":{"start":{"line":1171,"column":8},"end":{"line":1171,"column":52}},"359":{"start":{"line":1174,"column":8},"end":{"line":1176,"column":28}},"360":{"start":{"line":1175,"column":10},"end":{"line":1175,"column":88}},"361":{"start":{"line":1190,"column":6},"end":{"line":1190,"column":77}},"362":{"start":{"line":1205,"column":6},"end":{"line":1205,"column":39}},"363":{"start":{"line":1206,"column":6},"end":{"line":1211,"column":9}},"364":{"start":{"line":1212,"column":6},"end":{"line":1212,"column":16}},"365":{"start":{"line":1226,"column":6},"end":{"line":1228,"column":9}},"366":{"start":{"line":1227,"column":8},"end":{"line":1227,"column":52}},"367":{"start":{"line":1229,"column":6},"end":{"line":1231,"column":7}},"368":{"start":{"line":1230,"column":8},"end":{"line":1230,"column":20}},"369":{"start":{"line":1232,"column":6},"end":{"line":1232,"column":54}},"370":{"start":{"line":1247,"column":6},"end":{"line":1249,"column":8}},"371":{"start":{"line":1250,"column":6},"end":{"line":1250,"column":54}},"372":{"start":{"line":1263,"column":6},"end":{"line":1265,"column":8}},"373":{"start":{"line":1266,"column":6},"end":{"line":1266,"column":68}},"374":{"start":{"line":1279,"column":6},"end":{"line":1281,"column":8}},"375":{"start":{"line":1282,"column":6},"end":{"line":1282,"column":66}},"376":{"start":{"line":1296,"column":6},"end":{"line":1299,"column":8}},"377":{"start":{"line":1300,"column":6},"end":{"line":1300,"column":60}},"378":{"start":{"line":1313,"column":6},"end":{"line":1315,"column":8}},"379":{"start":{"line":1316,"column":6},"end":{"line":1316,"column":56}},"380":{"start":{"line":1331,"column":6},"end":{"line":1331,"column":88}},"381":{"start":{"line":1333,"column":6},"end":{"line":1333,"column":28}},"382":{"start":{"line":1334,"column":6},"end":{"line":1334,"column":43}},"383":{"start":{"line":1335,"column":6},"end":{"line":1335,"column":55}},"384":{"start":{"line":1350,"column":6},"end":{"line":1350,"column":88}},"385":{"start":{"line":1352,"column":6},"end":{"line":1352,"column":28}},"386":{"start":{"line":1353,"column":6},"end":{"line":1353,"column":25}},"387":{"start":{"line":1354,"column":6},"end":{"line":1354,"column":59}},"388":{"start":{"line":1368,"column":6},"end":{"line":1368,"column":88}},"389":{"start":{"line":1370,"column":6},"end":{"line":1370,"column":28}},"390":{"start":{"line":1371,"column":6},"end":{"line":1371,"column":64}},"391":{"start":{"line":1375,"column":2},"end":{"line":1375,"column":21}},"392":{"start":{"line":1378,"column":0},"end":{"line":1378,"column":29}}},"branchMap":{"1":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":84},"end":{"line":3,"column":121}},{"start":{"line":3,"column":124},"end":{"line":3,"column":268}}]},"2":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":14},"end":{"line":3,"column":42}},{"start":{"line":3,"column":46},"end":{"line":3,"column":81}}]},"3":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":244},"end":{"line":3,"column":252}},{"start":{"line":3,"column":255},"end":{"line":3,"column":265}}]},"4":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":148},"end":{"line":3,"column":151}},{"start":{"line":3,"column":155},"end":{"line":3,"column":183}},{"start":{"line":3,"column":187},"end":{"line":3,"column":213}},{"start":{"line":3,"column":217},"end":{"line":3,"column":241}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":168},"end":{"line":5,"column":189}},{"start":{"line":5,"column":193},"end":{"line":5,"column":198}}]},"6":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":232},"end":{"line":5,"column":232}},{"start":{"line":5,"column":232},"end":{"line":5,"column":232}}]},"7":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":407},"end":{"line":5,"column":407}},{"start":{"line":5,"column":407},"end":{"line":5,"column":407}}]},"8":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":476},"end":{"line":5,"column":476}},{"start":{"line":5,"column":476},"end":{"line":5,"column":476}}]},"9":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":50},"end":{"line":7,"column":50}},{"start":{"line":7,"column":50},"end":{"line":7,"column":50}}]},"10":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":50},"end":{"line":9,"column":50}},{"start":{"line":9,"column":50},"end":{"line":9,"column":50}}]},"11":{"line":9,"type":"cond-expr","locations":[{"start":{"line":9,"column":226},"end":{"line":9,"column":230}},{"start":{"line":9,"column":233},"end":{"line":9,"column":237}}]},"12":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":159},"end":{"line":9,"column":163}},{"start":{"line":9,"column":168},"end":{"line":9,"column":192}},{"start":{"line":9,"column":196},"end":{"line":9,"column":222}}]},"13":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":43},"end":{"line":11,"column":43}},{"start":{"line":11,"column":43},"end":{"line":11,"column":43}}]},"14":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":47},"end":{"line":11,"column":79}},{"start":{"line":11,"column":83},"end":{"line":11,"column":102}}]},"15":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":244},"end":{"line":11,"column":254}},{"start":{"line":11,"column":258},"end":{"line":11,"column":278}}]},"16":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":374},"end":{"line":11,"column":374}},{"start":{"line":11,"column":374},"end":{"line":11,"column":374}}]},"17":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":414},"end":{"line":11,"column":457}},{"start":{"line":11,"column":460},"end":{"line":11,"column":491}}]},"18":{"line":101,"type":"cond-expr","locations":[{"start":{"line":101,"column":71},"end":{"line":101,"column":83}},{"start":{"line":101,"column":86},"end":{"line":101,"column":88}}]},"19":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":18},"end":{"line":101,"column":38}},{"start":{"line":101,"column":42},"end":{"line":101,"column":68}}]},"20":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":50},"end":{"line":105,"column":71}},{"start":{"line":105,"column":75},"end":{"line":105,"column":109}}]},"21":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":69},"end":{"line":109,"column":74}},{"start":{"line":109,"column":77},"end":{"line":109,"column":92}}]},"22":{"line":110,"type":"cond-expr","locations":[{"start":{"line":110,"column":69},"end":{"line":110,"column":74}},{"start":{"line":110,"column":77},"end":{"line":110,"column":92}}]},"23":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":31},"end":{"line":111,"column":49}},{"start":{"line":111,"column":53},"end":{"line":111,"column":79}}]},"24":{"line":112,"type":"cond-expr","locations":[{"start":{"line":112,"column":71},"end":{"line":112,"column":75}},{"start":{"line":112,"column":78},"end":{"line":112,"column":94}}]},"25":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"26":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":6},"end":{"line":121,"column":6}},{"start":{"line":121,"column":6},"end":{"line":121,"column":6}}]},"27":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":10},"end":{"line":121,"column":42}},{"start":{"line":121,"column":46},"end":{"line":121,"column":64}}]},"28":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":4},"end":{"line":126,"column":4}},{"start":{"line":126,"column":4},"end":{"line":126,"column":4}}]},"29":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":6},"end":{"line":128,"column":6}},{"start":{"line":128,"column":6},"end":{"line":128,"column":6}}]},"30":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":10},"end":{"line":128,"column":41}},{"start":{"line":128,"column":45},"end":{"line":128,"column":62}}]},"31":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":6},"end":{"line":162,"column":6}},{"start":{"line":162,"column":6},"end":{"line":162,"column":6}}]},"32":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":10},"end":{"line":162,"column":21}},{"start":{"line":162,"column":25},"end":{"line":162,"column":56}}]},"33":{"line":178,"type":"cond-expr","locations":[{"start":{"line":178,"column":73},"end":{"line":178,"column":85}},{"start":{"line":178,"column":88},"end":{"line":178,"column":90}}]},"34":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":20},"end":{"line":178,"column":40}},{"start":{"line":178,"column":44},"end":{"line":178,"column":70}}]},"35":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":6},"end":{"line":180,"column":6}},{"start":{"line":180,"column":6},"end":{"line":180,"column":6}}]},"36":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":6}},{"start":{"line":184,"column":6},"end":{"line":184,"column":6}}]},"37":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":6},"end":{"line":188,"column":6}},{"start":{"line":188,"column":6},"end":{"line":188,"column":6}}]},"38":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":6}},{"start":{"line":191,"column":6},"end":{"line":191,"column":6}}]},"39":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":8},"end":{"line":209,"column":8}},{"start":{"line":209,"column":8},"end":{"line":209,"column":8}}]},"40":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":8},"end":{"line":216,"column":8}},{"start":{"line":216,"column":8},"end":{"line":216,"column":8}}]},"41":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":6},"end":{"line":239,"column":6}},{"start":{"line":239,"column":6},"end":{"line":239,"column":6}}]},"42":{"line":242,"type":"binary-expr","locations":[{"start":{"line":242,"column":19},"end":{"line":242,"column":74}},{"start":{"line":242,"column":78},"end":{"line":242,"column":88}}]},"43":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":13},"end":{"line":251,"column":13}},{"start":{"line":251,"column":13},"end":{"line":251,"column":13}}]},"44":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":8},"end":{"line":253,"column":8}},{"start":{"line":253,"column":8},"end":{"line":253,"column":8}}]},"45":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":13},"end":{"line":264,"column":13}},{"start":{"line":264,"column":13},"end":{"line":264,"column":13}}]},"46":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":13},"end":{"line":270,"column":13}},{"start":{"line":270,"column":13},"end":{"line":270,"column":13}}]},"47":{"line":297,"type":"cond-expr","locations":[{"start":{"line":297,"column":73},"end":{"line":297,"column":85}},{"start":{"line":297,"column":88},"end":{"line":297,"column":90}}]},"48":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":20},"end":{"line":297,"column":40}},{"start":{"line":297,"column":44},"end":{"line":297,"column":70}}]},"49":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":6},"end":{"line":299,"column":6}},{"start":{"line":299,"column":6},"end":{"line":299,"column":6}}]},"50":{"line":302,"type":"cond-expr","locations":[{"start":{"line":302,"column":65},"end":{"line":302,"column":69}},{"start":{"line":302,"column":72},"end":{"line":302,"column":87}}]},"51":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":6},"end":{"line":303,"column":6}},{"start":{"line":303,"column":6},"end":{"line":303,"column":6}}]},"52":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":6},"end":{"line":333,"column":6}},{"start":{"line":333,"column":6},"end":{"line":333,"column":6}}]},"53":{"line":347,"type":"cond-expr","locations":[{"start":{"line":347,"column":29},"end":{"line":347,"column":54}},{"start":{"line":347,"column":57},"end":{"line":347,"column":62}}]},"54":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":6},"end":{"line":360,"column":6}},{"start":{"line":360,"column":6},"end":{"line":360,"column":6}}]},"55":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":6},"end":{"line":363,"column":6}},{"start":{"line":363,"column":6},"end":{"line":363,"column":6}}]},"56":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":6},"end":{"line":378,"column":6}},{"start":{"line":378,"column":6},"end":{"line":378,"column":6}}]},"57":{"line":393,"type":"cond-expr","locations":[{"start":{"line":393,"column":29},"end":{"line":393,"column":51}},{"start":{"line":393,"column":54},"end":{"line":393,"column":59}}]},"58":{"line":425,"type":"cond-expr","locations":[{"start":{"line":425,"column":73},"end":{"line":425,"column":85}},{"start":{"line":425,"column":88},"end":{"line":425,"column":90}}]},"59":{"line":425,"type":"binary-expr","locations":[{"start":{"line":425,"column":20},"end":{"line":425,"column":40}},{"start":{"line":425,"column":44},"end":{"line":425,"column":70}}]},"60":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":6},"end":{"line":432,"column":6}},{"start":{"line":432,"column":6},"end":{"line":432,"column":6}}]},"61":{"line":432,"type":"binary-expr","locations":[{"start":{"line":432,"column":10},"end":{"line":432,"column":88}},{"start":{"line":432,"column":92},"end":{"line":432,"column":124}}]},"62":{"line":432,"type":"cond-expr","locations":[{"start":{"line":432,"column":44},"end":{"line":432,"column":55}},{"start":{"line":432,"column":58},"end":{"line":432,"column":74}}]},"63":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":6},"end":{"line":445,"column":6}},{"start":{"line":445,"column":6},"end":{"line":445,"column":6}}]},"64":{"line":499,"type":"cond-expr","locations":[{"start":{"line":499,"column":70},"end":{"line":499,"column":82}},{"start":{"line":499,"column":85},"end":{"line":499,"column":87}}]},"65":{"line":499,"type":"binary-expr","locations":[{"start":{"line":499,"column":17},"end":{"line":499,"column":37}},{"start":{"line":499,"column":41},"end":{"line":499,"column":67}}]},"66":{"line":504,"type":"if","locations":[{"start":{"line":504,"column":6},"end":{"line":504,"column":6}},{"start":{"line":504,"column":6},"end":{"line":504,"column":6}}]},"67":{"line":504,"type":"cond-expr","locations":[{"start":{"line":504,"column":41},"end":{"line":504,"column":52}},{"start":{"line":504,"column":55},"end":{"line":504,"column":68}}]},"68":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":6},"end":{"line":540,"column":6}},{"start":{"line":540,"column":6},"end":{"line":540,"column":6}}]},"69":{"line":544,"type":"if","locations":[{"start":{"line":544,"column":10},"end":{"line":544,"column":10}},{"start":{"line":544,"column":10},"end":{"line":544,"column":10}}]},"70":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":8},"end":{"line":550,"column":8}},{"start":{"line":550,"column":8},"end":{"line":550,"column":8}}]},"71":{"line":555,"type":"if","locations":[{"start":{"line":555,"column":12},"end":{"line":555,"column":12}},{"start":{"line":555,"column":12},"end":{"line":555,"column":12}}]},"72":{"line":564,"type":"if","locations":[{"start":{"line":564,"column":8},"end":{"line":564,"column":8}},{"start":{"line":564,"column":8},"end":{"line":564,"column":8}}]},"73":{"line":568,"type":"if","locations":[{"start":{"line":568,"column":12},"end":{"line":568,"column":12}},{"start":{"line":568,"column":12},"end":{"line":568,"column":12}}]},"74":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":14},"end":{"line":570,"column":14}},{"start":{"line":570,"column":14},"end":{"line":570,"column":14}}]},"75":{"line":577,"type":"if","locations":[{"start":{"line":577,"column":13},"end":{"line":577,"column":13}},{"start":{"line":577,"column":13},"end":{"line":577,"column":13}}]},"76":{"line":580,"type":"if","locations":[{"start":{"line":580,"column":8},"end":{"line":580,"column":8}},{"start":{"line":580,"column":8},"end":{"line":580,"column":8}}]},"77":{"line":583,"type":"if","locations":[{"start":{"line":583,"column":8},"end":{"line":583,"column":8}},{"start":{"line":583,"column":8},"end":{"line":583,"column":8}}]},"78":{"line":586,"type":"if","locations":[{"start":{"line":586,"column":13},"end":{"line":586,"column":13}},{"start":{"line":586,"column":13},"end":{"line":586,"column":13}}]},"79":{"line":589,"type":"if","locations":[{"start":{"line":589,"column":13},"end":{"line":589,"column":13}},{"start":{"line":589,"column":13},"end":{"line":589,"column":13}}]},"80":{"line":592,"type":"if","locations":[{"start":{"line":592,"column":8},"end":{"line":592,"column":8}},{"start":{"line":592,"column":8},"end":{"line":592,"column":8}}]},"81":{"line":595,"type":"if","locations":[{"start":{"line":595,"column":8},"end":{"line":595,"column":8}},{"start":{"line":595,"column":8},"end":{"line":595,"column":8}}]},"82":{"line":598,"type":"if","locations":[{"start":{"line":598,"column":13},"end":{"line":598,"column":13}},{"start":{"line":598,"column":13},"end":{"line":598,"column":13}}]},"83":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":13},"end":{"line":601,"column":13}},{"start":{"line":601,"column":13},"end":{"line":601,"column":13}}]},"84":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":13},"end":{"line":604,"column":13}},{"start":{"line":604,"column":13},"end":{"line":604,"column":13}}]},"85":{"line":622,"type":"cond-expr","locations":[{"start":{"line":622,"column":70},"end":{"line":622,"column":82}},{"start":{"line":622,"column":85},"end":{"line":622,"column":87}}]},"86":{"line":622,"type":"binary-expr","locations":[{"start":{"line":622,"column":17},"end":{"line":622,"column":37}},{"start":{"line":622,"column":41},"end":{"line":622,"column":67}}]},"87":{"line":641,"type":"cond-expr","locations":[{"start":{"line":641,"column":70},"end":{"line":641,"column":82}},{"start":{"line":641,"column":85},"end":{"line":641,"column":87}}]},"88":{"line":641,"type":"binary-expr","locations":[{"start":{"line":641,"column":17},"end":{"line":641,"column":37}},{"start":{"line":641,"column":41},"end":{"line":641,"column":67}}]},"89":{"line":661,"type":"cond-expr","locations":[{"start":{"line":661,"column":70},"end":{"line":661,"column":82}},{"start":{"line":661,"column":85},"end":{"line":661,"column":87}}]},"90":{"line":661,"type":"binary-expr","locations":[{"start":{"line":661,"column":17},"end":{"line":661,"column":37}},{"start":{"line":661,"column":41},"end":{"line":661,"column":67}}]},"91":{"line":682,"type":"cond-expr","locations":[{"start":{"line":682,"column":73},"end":{"line":682,"column":85}},{"start":{"line":682,"column":88},"end":{"line":682,"column":90}}]},"92":{"line":682,"type":"binary-expr","locations":[{"start":{"line":682,"column":20},"end":{"line":682,"column":40}},{"start":{"line":682,"column":44},"end":{"line":682,"column":70}}]},"93":{"line":711,"type":"cond-expr","locations":[{"start":{"line":711,"column":73},"end":{"line":711,"column":85}},{"start":{"line":711,"column":88},"end":{"line":711,"column":90}}]},"94":{"line":711,"type":"binary-expr","locations":[{"start":{"line":711,"column":20},"end":{"line":711,"column":40}},{"start":{"line":711,"column":44},"end":{"line":711,"column":70}}]},"95":{"line":741,"type":"cond-expr","locations":[{"start":{"line":741,"column":73},"end":{"line":741,"column":85}},{"start":{"line":741,"column":88},"end":{"line":741,"column":90}}]},"96":{"line":741,"type":"binary-expr","locations":[{"start":{"line":741,"column":20},"end":{"line":741,"column":40}},{"start":{"line":741,"column":44},"end":{"line":741,"column":70}}]},"97":{"line":742,"type":"cond-expr","locations":[{"start":{"line":742,"column":74},"end":{"line":742,"column":86}},{"start":{"line":742,"column":89},"end":{"line":742,"column":91}}]},"98":{"line":742,"type":"binary-expr","locations":[{"start":{"line":742,"column":21},"end":{"line":742,"column":41}},{"start":{"line":742,"column":45},"end":{"line":742,"column":71}}]},"99":{"line":755,"type":"if","locations":[{"start":{"line":755,"column":6},"end":{"line":755,"column":6}},{"start":{"line":755,"column":6},"end":{"line":755,"column":6}}]},"100":{"line":755,"type":"binary-expr","locations":[{"start":{"line":755,"column":10},"end":{"line":755,"column":23}},{"start":{"line":755,"column":27},"end":{"line":755,"column":55}}]},"101":{"line":774,"type":"cond-expr","locations":[{"start":{"line":774,"column":73},"end":{"line":774,"column":85}},{"start":{"line":774,"column":88},"end":{"line":774,"column":90}}]},"102":{"line":774,"type":"binary-expr","locations":[{"start":{"line":774,"column":20},"end":{"line":774,"column":40}},{"start":{"line":774,"column":44},"end":{"line":774,"column":70}}]},"103":{"line":803,"type":"cond-expr","locations":[{"start":{"line":803,"column":73},"end":{"line":803,"column":85}},{"start":{"line":803,"column":88},"end":{"line":803,"column":90}}]},"104":{"line":803,"type":"binary-expr","locations":[{"start":{"line":803,"column":20},"end":{"line":803,"column":40}},{"start":{"line":803,"column":44},"end":{"line":803,"column":70}}]},"105":{"line":832,"type":"cond-expr","locations":[{"start":{"line":832,"column":73},"end":{"line":832,"column":85}},{"start":{"line":832,"column":88},"end":{"line":832,"column":90}}]},"106":{"line":832,"type":"binary-expr","locations":[{"start":{"line":832,"column":20},"end":{"line":832,"column":40}},{"start":{"line":832,"column":44},"end":{"line":832,"column":70}}]},"107":{"line":933,"type":"cond-expr","locations":[{"start":{"line":933,"column":70},"end":{"line":933,"column":82}},{"start":{"line":933,"column":85},"end":{"line":933,"column":87}}]},"108":{"line":933,"type":"binary-expr","locations":[{"start":{"line":933,"column":17},"end":{"line":933,"column":37}},{"start":{"line":933,"column":41},"end":{"line":933,"column":67}}]},"109":{"line":958,"type":"cond-expr","locations":[{"start":{"line":958,"column":70},"end":{"line":958,"column":82}},{"start":{"line":958,"column":85},"end":{"line":958,"column":87}}]},"110":{"line":958,"type":"binary-expr","locations":[{"start":{"line":958,"column":17},"end":{"line":958,"column":37}},{"start":{"line":958,"column":41},"end":{"line":958,"column":67}}]},"111":{"line":981,"type":"cond-expr","locations":[{"start":{"line":981,"column":70},"end":{"line":981,"column":82}},{"start":{"line":981,"column":85},"end":{"line":981,"column":87}}]},"112":{"line":981,"type":"binary-expr","locations":[{"start":{"line":981,"column":17},"end":{"line":981,"column":37}},{"start":{"line":981,"column":41},"end":{"line":981,"column":67}}]},"113":{"line":1004,"type":"cond-expr","locations":[{"start":{"line":1004,"column":70},"end":{"line":1004,"column":82}},{"start":{"line":1004,"column":85},"end":{"line":1004,"column":87}}]},"114":{"line":1004,"type":"binary-expr","locations":[{"start":{"line":1004,"column":17},"end":{"line":1004,"column":37}},{"start":{"line":1004,"column":41},"end":{"line":1004,"column":67}}]},"115":{"line":1025,"type":"cond-expr","locations":[{"start":{"line":1025,"column":70},"end":{"line":1025,"column":82}},{"start":{"line":1025,"column":85},"end":{"line":1025,"column":87}}]},"116":{"line":1025,"type":"binary-expr","locations":[{"start":{"line":1025,"column":17},"end":{"line":1025,"column":37}},{"start":{"line":1025,"column":41},"end":{"line":1025,"column":67}}]},"117":{"line":1030,"type":"if","locations":[{"start":{"line":1030,"column":6},"end":{"line":1030,"column":6}},{"start":{"line":1030,"column":6},"end":{"line":1030,"column":6}}]},"118":{"line":1030,"type":"cond-expr","locations":[{"start":{"line":1030,"column":41},"end":{"line":1030,"column":52}},{"start":{"line":1030,"column":55},"end":{"line":1030,"column":68}}]},"119":{"line":1058,"type":"cond-expr","locations":[{"start":{"line":1058,"column":70},"end":{"line":1058,"column":82}},{"start":{"line":1058,"column":85},"end":{"line":1058,"column":87}}]},"120":{"line":1058,"type":"binary-expr","locations":[{"start":{"line":1058,"column":17},"end":{"line":1058,"column":37}},{"start":{"line":1058,"column":41},"end":{"line":1058,"column":67}}]},"121":{"line":1083,"type":"cond-expr","locations":[{"start":{"line":1083,"column":70},"end":{"line":1083,"column":82}},{"start":{"line":1083,"column":85},"end":{"line":1083,"column":87}}]},"122":{"line":1083,"type":"binary-expr","locations":[{"start":{"line":1083,"column":17},"end":{"line":1083,"column":37}},{"start":{"line":1083,"column":41},"end":{"line":1083,"column":67}}]},"123":{"line":1108,"type":"cond-expr","locations":[{"start":{"line":1108,"column":70},"end":{"line":1108,"column":82}},{"start":{"line":1108,"column":85},"end":{"line":1108,"column":87}}]},"124":{"line":1108,"type":"binary-expr","locations":[{"start":{"line":1108,"column":17},"end":{"line":1108,"column":37}},{"start":{"line":1108,"column":41},"end":{"line":1108,"column":67}}]},"125":{"line":1229,"type":"if","locations":[{"start":{"line":1229,"column":6},"end":{"line":1229,"column":6}},{"start":{"line":1229,"column":6},"end":{"line":1229,"column":6}}]},"126":{"line":1331,"type":"cond-expr","locations":[{"start":{"line":1331,"column":70},"end":{"line":1331,"column":82}},{"start":{"line":1331,"column":85},"end":{"line":1331,"column":87}}]},"127":{"line":1331,"type":"binary-expr","locations":[{"start":{"line":1331,"column":17},"end":{"line":1331,"column":37}},{"start":{"line":1331,"column":41},"end":{"line":1331,"column":67}}]},"128":{"line":1350,"type":"cond-expr","locations":[{"start":{"line":1350,"column":70},"end":{"line":1350,"column":82}},{"start":{"line":1350,"column":85},"end":{"line":1350,"column":87}}]},"129":{"line":1350,"type":"binary-expr","locations":[{"start":{"line":1350,"column":17},"end":{"line":1350,"column":37}},{"start":{"line":1350,"column":41},"end":{"line":1350,"column":67}}]},"130":{"line":1368,"type":"cond-expr","locations":[{"start":{"line":1368,"column":70},"end":{"line":1368,"column":82}},{"start":{"line":1368,"column":85},"end":{"line":1368,"column":87}}]},"131":{"line":1368,"type":"binary-expr","locations":[{"start":{"line":1368,"column":17},"end":{"line":1368,"column":37}},{"start":{"line":1368,"column":41},"end":{"line":1368,"column":67}}]}},"code":["'use strict';","","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };","","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }","","// shims","require('array.prototype.findindex').shim(); // for Node.js v0.x","","var errors = require('./errors');","var TelegramBotWebHook = require('./telegramWebHook');","var TelegramBotPolling = require('./telegramPolling');","var debug = require('debug')('node-telegram-bot-api');","var EventEmitter = require('eventemitter3');","var fileType = require('file-type');","var Promise = require('bluebird');","var request = require('request-promise');","var streamedRequest = require('request');","var qs = require('querystring');","var stream = require('stream');","var mime = require('mime');","var path = require('path');","var URL = require('url');","var fs = require('fs');","var pump = require('pump');","var deprecate = require('depd')('node-telegram-bot-api');","","var _messageTypes = ['text', 'audio', 'document', 'photo', 'sticker', 'video', 'voice', 'contact', 'location', 'new_chat_participant', 'left_chat_participant', 'new_chat_title', 'new_chat_photo', 'delete_chat_photo', 'group_chat_created'];","","// enable cancellation","Promise.config({","  cancellation: true","});","","var TelegramBot = function (_EventEmitter) {","  _inherits(TelegramBot, _EventEmitter);","","  _createClass(TelegramBot, null, [{","    key: 'errors',","    get: function get() {","      return errors;","    }","  }, {","    key: 'messageTypes',","    get: function get() {","      return _messageTypes;","    }","","    /**","     * Both request method to obtain messages are implemented. To use standard polling, set `polling: true`","     * on `options`. Notice that [webHook](https://core.telegram.org/bots/api#setwebhook) will need a SSL certificate.","     * Emits `message` when a message arrives.","     *","     * @class TelegramBot","     * @constructor","     * @param {String} token Bot Token","     * @param {Object} [options]","     * @param {Boolean|Object} [options.polling=false] Set true to enable polling or set options.","     *  If a WebHook has been set, it will be deleted automatically.","     * @param {String|Number} [options.polling.timeout=10] *Deprecated. Use `options.polling.params` instead*.","     *  Timeout in seconds for long polling.","     * @param {String|Number} [options.polling.interval=300] Interval between requests in miliseconds","     * @param {Boolean} [options.polling.autoStart=true] Start polling immediately","     * @param {Object} [options.polling.params] Parameters to be used in polling API requests.","     *  See https://core.telegram.org/bots/api#getupdates for more information.","     * @param  {Number} [options.polling.params.timeout=10] Timeout in seconds for long polling.","     * @param {Boolean|Object} [options.webHook=false] Set true to enable WebHook or set options","     * @param {String} [options.webHook.host=0.0.0.0] Host to bind to","     * @param {Number} [options.webHook.port=8443] Port to bind to","     * @param {String} [options.webHook.key] Path to file with PEM private key for webHook server.","     *  The file is read **synchronously**!","     * @param {String} [options.webHook.cert] Path to file with PEM certificate (public) for webHook server.","     *  The file is read **synchronously**!","     * @param {String} [options.webHook.pfx] Path to file with PFX private key and certificate chain for webHook server.","     *  The file is read **synchronously**!","     * @param {Boolean} [options.webHook.autoOpen=true] Open webHook immediately","     * @param {Object} [options.webHook.https] Options to be passed to `https.createServer()`.","     *  Note that `options.webHook.key`, `options.webHook.cert` and `options.webHook.pfx`, if provided, will be","     *  used to override `key`, `cert` and `pfx` in this object, respectively.","     *  See https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener for more information.","     * @param {String} [options.webHook.healthEndpoint=/healthz] An endpoint for health checks that always responds with 200 OK","     * @param {Boolean} [options.onlyFirstMatch=false] Set to true to stop after first match. Otherwise, all regexps are executed","     * @param {Object} [options.request] Options which will be added for all requests to telegram api.","     *  See https://github.com/request/request#requestoptions-callback for more information.","     * @param {String} [options.baseApiUrl=https://api.telegram.org] API Base URl; useful for proxying and testing","     * @param {Boolean} [options.filepath=true] Allow passing file-paths as arguments when sending files,","     *  such as photos using `TelegramBot#sendPhoto()`. See [usage information][usage-sending-files-performance]","     *  for more information on this option and its consequences.","     * @see https://core.telegram.org/bots/api","     */","","  }]);","","  function TelegramBot(token) {","    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};","","    _classCallCheck(this, TelegramBot);","","    var _this = _possibleConstructorReturn(this, (TelegramBot.__proto__ || Object.getPrototypeOf(TelegramBot)).call(this));","","    _this.token = token;","    _this.options = options;","    _this.options.polling = typeof options.polling === 'undefined' ? false : options.polling;","    _this.options.webHook = typeof options.webHook === 'undefined' ? false : options.webHook;","    _this.options.baseApiUrl = options.baseApiUrl || 'https://api.telegram.org';","    _this.options.filepath = typeof options.filepath === 'undefined' ? true : options.filepath;","    _this._textRegexpCallbacks = [];","    _this._replyListenerId = 0;","    _this._replyListeners = [];","    _this._polling = null;","    _this._webHook = null;","","    if (options.polling) {","      var autoStart = options.polling.autoStart;","      if (typeof autoStart === 'undefined' || autoStart === true) {","        _this.startPolling();","      }","    }","","    if (options.webHook) {","      var autoOpen = options.webHook.autoOpen;","      if (typeof autoOpen === 'undefined' || autoOpen === true) {","        _this.openWebHook();","      }","    }","    return _this;","  }","","  /**","   * Generates url with bot token and provided path/method you want to be got/executed by bot","   * @param  {String} path","   * @return {String} url","   * @private","   * @see https://core.telegram.org/bots/api#making-requests","   */","","","  _createClass(TelegramBot, [{","    key: '_buildURL',","    value: function _buildURL(_path) {","      return this.options.baseApiUrl + '/bot' + this.token + '/' + _path;","    }","","    /**","     * Fix 'reply_markup' parameter by making it JSON-serialized, as","     * required by the Telegram Bot API","     * @param {Object} obj Object; either 'form' or 'qs'","     * @private","     * @see https://core.telegram.org/bots/api#sendmessage","     */","","  }, {","    key: '_fixReplyMarkup',","    value: function _fixReplyMarkup(obj) {","      var replyMarkup = obj.reply_markup;","      if (replyMarkup && typeof replyMarkup !== 'string') {","        obj.reply_markup = JSON.stringify(replyMarkup);","      }","    }","","    /**","     * Make request against the API","     * @param  {String} _path API endpoint","     * @param  {Object} [options]","     * @private","     * @return {Promise}","     */","","  }, {","    key: '_request',","    value: function _request(_path) {","      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};","","      if (!this.token) {","        return Promise.reject(new errors.FatalError('Telegram Bot Token not provided!'));","      }","","      if (this.options.request) {","        Object.assign(options, this.options.request);","      }","","      if (options.form) {","        this._fixReplyMarkup(options.form);","      }","      if (options.qs) {","        this._fixReplyMarkup(options.qs);","      }","","      options.method = 'POST';","      options.url = this._buildURL(_path);","      options.simple = false;","      options.resolveWithFullResponse = true;","      options.forever = true;","      debug('HTTP request: %j', options);","      return request(options).then(function (resp) {","        var data = void 0;","        try {","          data = resp.body = JSON.parse(resp.body);","        } catch (err) {","          throw new errors.ParseError('Error parsing Telegram response: ' + resp.body, resp);","        }","","        if (data.ok) {","          return data.result;","        }","","        throw new errors.TelegramError(data.error_code + ' ' + data.description, resp);","      }).catch(function (error) {","        // TODO: why can't we do `error instanceof errors.BaseError`?","        if (error.response) throw error;","        throw new errors.FatalError(error);","      });","    }","","    /**","     * Format data to be uploaded; handles file paths, streams and buffers","     * @param  {String} type","     * @param  {String|stream.Stream|Buffer} data","     * @return {Array} formatted","     * @return {Object} formatted[0] formData","     * @return {String} formatted[1] fileId","     * @throws Error if Buffer file type is not supported.","     * @see https://npmjs.com/package/file-type","     * @private","     */","","  }, {","    key: '_formatSendData',","    value: function _formatSendData(type, data) {","      var formData = void 0;","      var fileName = void 0;","      var fileId = void 0;","      if (data instanceof stream.Stream) {","        // Will be 'null' if could not be parsed. Default to 'filename'.","        // For example, 'data.path' === '/?id=123' from 'request(\"https://example.com/?id=123\")'","        fileName = URL.parse(path.basename(data.path.toString())).pathname || 'filename';","        formData = {};","        formData[type] = {","          value: data,","          options: {","            filename: qs.unescape(fileName),","            contentType: mime.lookup(fileName)","          }","        };","      } else if (Buffer.isBuffer(data)) {","        var filetype = fileType(data);","        if (!filetype) {","          throw new errors.FatalError('Unsupported Buffer file type');","        }","        formData = {};","        formData[type] = {","          value: data,","          options: {","            filename: 'data.' + filetype.ext,","            contentType: filetype.mime","          }","        };","      } else if (!this.options.filepath) {","        /**","         * When the constructor option 'filepath' is set to","         * 'false', we do not support passing file-paths.","         */","        fileId = data;","      } else if (fs.existsSync(data)) {","        fileName = path.basename(data);","        formData = {};","        formData[type] = {","          value: fs.createReadStream(data),","          options: {","            filename: fileName,","            contentType: mime.lookup(fileName)","          }","        };","      } else {","        fileId = data;","      }","      return [formData, fileId];","    }","","    /**","     * Start polling.","     * Rejects returned promise if a WebHook is being used by this instance.","     * @param  {Object} [options]","     * @param  {Boolean} [options.restart=true] Consecutive calls to this method causes polling to be restarted","     * @return {Promise}","     */","","  }, {","    key: 'startPolling',","    value: function startPolling() {","      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};","","      if (this.hasOpenWebHook()) {","        return Promise.reject(new errors.FatalError('Polling and WebHook are mutually exclusive'));","      }","      options.restart = typeof options.restart === 'undefined' ? true : options.restart;","      if (!this._polling) {","        this._polling = new TelegramBotPolling(this);","      }","      return this._polling.start(options);","    }","","    /**","     * Alias of `TelegramBot#startPolling()`. This is **deprecated**.","     * @param  {Object} [options]","     * @return {Promise}","     * @deprecated","     */","","  }, {","    key: 'initPolling',","    value: function initPolling() {","      deprecate('TelegramBot#initPolling() is deprecated');","      return this.startPolling();","    }","","    /**","     * Stops polling after the last polling request resolves.","     * Multiple invocations do nothing if polling is already stopped.","     * Returning the promise of the last polling request is **deprecated**.","     * @return {Promise}","     */","","  }, {","    key: 'stopPolling',","    value: function stopPolling() {","      if (!this._polling) {","        return Promise.resolve();","      }","      return this._polling.stop();","    }","","    /**","     * Return true if polling. Otherwise, false.","     * @return {Boolean}","     */","","  }, {","    key: 'isPolling',","    value: function isPolling() {","      return this._polling ? this._polling.isPolling() : false;","    }","","    /**","     * Open webhook.","     * Multiple invocations do nothing if webhook is already open.","     * Rejects returned promise if Polling is being used by this instance.","     * @return {Promise}","     */","","  }, {","    key: 'openWebHook',","    value: function openWebHook() {","      if (this.isPolling()) {","        return Promise.reject(new errors.FatalError('WebHook and Polling are mutually exclusive'));","      }","      if (!this._webHook) {","        this._webHook = new TelegramBotWebHook(this);","      }","      return this._webHook.open();","    }","","    /**","     * Close webhook after closing all current connections.","     * Multiple invocations do nothing if webhook is already closed.","     * @return {Promise} promise","     */","","  }, {","    key: 'closeWebHook',","    value: function closeWebHook() {","      if (!this._webHook) {","        return Promise.resolve();","      }","      return this._webHook.close();","    }","","    /**","     * Return true if using webhook and it is open i.e. accepts connections.","     * Otherwise, false.","     * @return {Boolean}","     */","","  }, {","    key: 'hasOpenWebHook',","    value: function hasOpenWebHook() {","      return this._webHook ? this._webHook.isOpen() : false;","    }","","    /**","     * Returns basic information about the bot in form of a `User` object.","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#getme","     */","","  }, {","    key: 'getMe',","    value: function getMe() {","      var _path = 'getMe';","      return this._request(_path);","    }","","    /**","     * Specify an url to receive incoming updates via an outgoing webHook.","     * This method has an [older, compatible signature][setWebHook-v0.25.0]","     * that is being deprecated.","     *","     * @param  {String} url URL where Telegram will make HTTP Post. Leave empty to","     * delete webHook.","     * @param  {Object} [options] Additional Telegram query options","     * @param  {String|stream.Stream} [options.certificate] PEM certificate key (public).","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#setwebhook","     */","","  }, {","    key: 'setWebHook',","    value: function setWebHook(url) {","      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};","","      /* The older method signature was setWebHook(url, cert).","       * We need to ensure backwards-compatibility while maintaining","       * consistency of the method signatures throughout the library */","      var cert = void 0;","      // Note: 'options' could be an object, if a stream was provided (in place of 'cert')","      if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) !== 'object' || options instanceof stream.Stream) {","        deprecate('The method signature setWebHook(url, cert) has been deprecated since v0.25.0');","        cert = options;","        options = {}; // eslint-disable-line no-param-reassign","      } else {","        cert = options.certificate;","      }","","      var opts = {","        qs: options","      };","      opts.qs.url = url;","","      if (cert) {","        try {","          var sendData = this._formatSendData('certificate', cert);","          opts.formData = sendData[0];","          opts.qs.certificate = sendData[1];","        } catch (ex) {","          return Promise.reject(ex);","        }","      }","","      return this._request('setWebHook', opts);","    }","","    /**","     * Use this method to remove webhook integration if you decide to","     * switch back to getUpdates. Returns True on success.","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#deletewebhook","     */","","  }, {","    key: 'deleteWebHook',","    value: function deleteWebHook() {","      return this._request('deleteWebhook');","    }","","    /**","     * Use this method to get current webhook status.","     * On success, returns a [WebhookInfo](https://core.telegram.org/bots/api#webhookinfo) object.","     * If the bot is using getUpdates, will return an object with the","     * url field empty.","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#getwebhookinfo","     */","","  }, {","    key: 'getWebHookInfo',","    value: function getWebHookInfo() {","      return this._request('getWebhookInfo');","    }","","    /**","     * Use this method to receive incoming updates using long polling.","     * This method has an [older, compatible signature][getUpdates-v0.25.0]","     * that is being deprecated.","     *","     * @param  {Object} [options] Additional Telegram query options","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#getupdates","     */","","  }, {","    key: 'getUpdates',","    value: function getUpdates() {","      var form = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};","","      /* The older method signature was getUpdates(timeout, limit, offset).","       * We need to ensure backwards-compatibility while maintaining","       * consistency of the method signatures throughout the library */","      if ((typeof form === 'undefined' ? 'undefined' : _typeof(form)) !== 'object') {","        /* eslint-disable no-param-reassign, prefer-rest-params */","        deprecate('The method signature getUpdates(timeout, limit, offset) has been deprecated since v0.25.0');","        form = {","          timeout: arguments[0],","          limit: arguments[1],","          offset: arguments[2]","        };","        /* eslint-enable no-param-reassign, prefer-rest-params */","      }","","      return this._request('getUpdates', { form: form });","    }","","    /**","     * Process an update; emitting the proper events and executing regexp","     * callbacks. This method is useful should you be using a different","     * way to fetch updates, other than those provided by TelegramBot.","     * @param  {Object} update","     * @see https://core.telegram.org/bots/api#update","     */","","  }, {","    key: 'processUpdate',","    value: function processUpdate(update) {","      var _this2 = this;","","      debug('Process Update %j', update);","      var message = update.message;","      var editedMessage = update.edited_message;","      var channelPost = update.channel_post;","      var editedChannelPost = update.edited_channel_post;","      var inlineQuery = update.inline_query;","      var chosenInlineResult = update.chosen_inline_result;","      var callbackQuery = update.callback_query;","","      if (message) {","        debug('Process Update message %j', message);","        this.emit('message', message);","        var processMessageType = function processMessageType(messageType) {","          if (message[messageType]) {","            debug('Emitting %s: %j', messageType, message);","            _this2.emit(messageType, message);","          }","        };","        TelegramBot.messageTypes.forEach(processMessageType);","        if (message.text) {","          debug('Text message');","          this._textRegexpCallbacks.some(function (reg) {","            debug('Matching %s with %s', message.text, reg.regexp);","            var result = reg.regexp.exec(message.text);","            if (!result) {","              return false;","            }","            debug('Matches %s', reg.regexp);","            reg.callback(message, result);","            // returning truthy value exits .some","            return _this2.options.onlyFirstMatch;","          });","        }","        if (message.reply_to_message) {","          // Only callbacks waiting for this message","          this._replyListeners.forEach(function (reply) {","            // Message from the same chat","            if (reply.chatId === message.chat.id) {","              // Responding to that message","              if (reply.messageId === message.reply_to_message.message_id) {","                // Resolve the promise","                reply.callback(message);","              }","            }","          });","        }","      } else if (editedMessage) {","        debug('Process Update edited_message %j', editedMessage);","        this.emit('edited_message', editedMessage);","        if (editedMessage.text) {","          this.emit('edited_message_text', editedMessage);","        }","        if (editedMessage.caption) {","          this.emit('edited_message_caption', editedMessage);","        }","      } else if (channelPost) {","        debug('Process Update channel_post %j', channelPost);","        this.emit('channel_post', channelPost);","      } else if (editedChannelPost) {","        debug('Process Update edited_channel_post %j', editedChannelPost);","        this.emit('edited_channel_post', editedChannelPost);","        if (editedChannelPost.text) {","          this.emit('edited_channel_post_text', editedChannelPost);","        }","        if (editedChannelPost.caption) {","          this.emit('edited_channel_post_caption', editedChannelPost);","        }","      } else if (inlineQuery) {","        debug('Process Update inline_query %j', inlineQuery);","        this.emit('inline_query', inlineQuery);","      } else if (chosenInlineResult) {","        debug('Process Update chosen_inline_result %j', chosenInlineResult);","        this.emit('chosen_inline_result', chosenInlineResult);","      } else if (callbackQuery) {","        debug('Process Update callback_query %j', callbackQuery);","        this.emit('callback_query', callbackQuery);","      }","    }","","    /**","     * Send text message.","     * @param  {Number|String} chatId Unique identifier for the message recipient","     * @param  {String} text Text of the message to be sent","     * @param  {Object} [options] Additional Telegram query options","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#sendmessage","     */","","  }, {","    key: 'sendMessage',","    value: function sendMessage(chatId, text) {","      var form = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};","","      form.chat_id = chatId;","      form.text = text;","      return this._request('sendMessage', { form: form });","    }","","    /**","     * Send answers to an inline query.","     * @param  {String} inlineQueryId Unique identifier of the query","     * @param  {InlineQueryResult[]} results An array of results for the inline query","     * @param  {Object} [options] Additional Telegram query options","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#answerinlinequery","     */","","  }, {","    key: 'answerInlineQuery',","    value: function answerInlineQuery(inlineQueryId, results) {","      var form = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};","","      form.inline_query_id = inlineQueryId;","      form.results = JSON.stringify(results);","      return this._request('answerInlineQuery', { form: form });","    }","","    /**","     * Forward messages of any kind.","     * @param  {Number|String} chatId     Unique identifier for the message recipient","     * @param  {Number|String} fromChatId Unique identifier for the chat where the","     * original message was sent","     * @param  {Number|String} messageId  Unique message identifier","     * @param  {Object} [options] Additional Telegram query options","     * @return {Promise}","     */","","  }, {","    key: 'forwardMessage',","    value: function forwardMessage(chatId, fromChatId, messageId) {","      var form = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};","","      form.chat_id = chatId;","      form.from_chat_id = fromChatId;","      form.message_id = messageId;","      return this._request('forwardMessage', { form: form });","    }","","    /**","     * Send photo","     * @param  {Number|String} chatId  Unique identifier for the message recipient","     * @param  {String|stream.Stream|Buffer} photo A file path or a Stream. Can","     * also be a `file_id` previously uploaded","     * @param  {Object} [options] Additional Telegram query options","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#sendphoto","     */","","  }, {","    key: 'sendPhoto',","    value: function sendPhoto(chatId, photo) {","      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};","","      var opts = {","        qs: options","      };","      opts.qs.chat_id = chatId;","      try {","        var sendData = this._formatSendData('photo', photo);","        opts.formData = sendData[0];","        opts.qs.photo = sendData[1];","      } catch (ex) {","        return Promise.reject(ex);","      }","      return this._request('sendPhoto', opts);","    }","","    /**","     * Send audio","     * @param  {Number|String} chatId  Unique identifier for the message recipient","     * @param  {String|stream.Stream|Buffer} audio A file path, Stream or Buffer.","     * Can also be a `file_id` previously uploaded.","     * @param  {Object} [options] Additional Telegram query options","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#sendaudio","     */","","  }, {","    key: 'sendAudio',","    value: function sendAudio(chatId, audio) {","      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};","","      var opts = {","        qs: options","      };","      opts.qs.chat_id = chatId;","      try {","        var sendData = this._formatSendData('audio', audio);","        opts.formData = sendData[0];","        opts.qs.audio = sendData[1];","      } catch (ex) {","        return Promise.reject(ex);","      }","      return this._request('sendAudio', opts);","    }","","    /**","     * Send Document","     * @param  {Number|String} chatId  Unique identifier for the message recipient","     * @param  {String|stream.Stream|Buffer} doc A file path, Stream or Buffer.","     * Can also be a `file_id` previously uploaded.","     * @param  {Object} [options] Additional Telegram query options","     * @param  {Object} [fileOpts] Optional file related meta-data","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#sendDocument","     */","","  }, {","    key: 'sendDocument',","    value: function sendDocument(chatId, doc) {","      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};","      var fileOpts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};","","      var opts = {","        qs: options","      };","      opts.qs.chat_id = chatId;","      try {","        var sendData = this._formatSendData('document', doc);","        opts.formData = sendData[0];","        opts.qs.document = sendData[1];","      } catch (ex) {","        return Promise.reject(ex);","      }","      if (opts.formData && Object.keys(fileOpts).length) {","        opts.formData.document.options = fileOpts;","      }","      return this._request('sendDocument', opts);","    }","","    /**","     * Send .webp stickers.","     * @param  {Number|String} chatId  Unique identifier for the message recipient","     * @param  {String|stream.Stream|Buffer} sticker A file path, Stream or Buffer.","     * Can also be a `file_id` previously uploaded. Stickers are WebP format files.","     * @param  {Object} [options] Additional Telegram query options","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#sendsticker","     */","","  }, {","    key: 'sendSticker',","    value: function sendSticker(chatId, sticker) {","      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};","","      var opts = {","        qs: options","      };","      opts.qs.chat_id = chatId;","      try {","        var sendData = this._formatSendData('sticker', sticker);","        opts.formData = sendData[0];","        opts.qs.sticker = sendData[1];","      } catch (ex) {","        return Promise.reject(ex);","      }","      return this._request('sendSticker', opts);","    }","","    /**","     * Use this method to send video files, Telegram clients support mp4 videos (other formats may be sent as Document).","     * @param  {Number|String} chatId  Unique identifier for the message recipient","     * @param  {String|stream.Stream|Buffer} video A file path or Stream.","     * Can also be a `file_id` previously uploaded.","     * @param  {Object} [options] Additional Telegram query options","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#sendvideo","     */","","  }, {","    key: 'sendVideo',","    value: function sendVideo(chatId, video) {","      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};","","      var opts = {","        qs: options","      };","      opts.qs.chat_id = chatId;","      try {","        var sendData = this._formatSendData('video', video);","        opts.formData = sendData[0];","        opts.qs.video = sendData[1];","      } catch (ex) {","        return Promise.reject(ex);","      }","      return this._request('sendVideo', opts);","    }","","    /**","     * Send voice","     * @param  {Number|String} chatId  Unique identifier for the message recipient","     * @param  {String|stream.Stream|Buffer} voice A file path, Stream or Buffer.","     * Can also be a `file_id` previously uploaded.","     * @param  {Object} [options] Additional Telegram query options","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#sendvoice","     */","","  }, {","    key: 'sendVoice',","    value: function sendVoice(chatId, voice) {","      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};","","      var opts = {","        qs: options","      };","      opts.qs.chat_id = chatId;","      try {","        var sendData = this._formatSendData('voice', voice);","        opts.formData = sendData[0];","        opts.qs.voice = sendData[1];","      } catch (ex) {","        return Promise.reject(ex);","      }","      return this._request('sendVoice', opts);","    }","","    /**","     * Send chat action.","     * `typing` for text messages,","     * `upload_photo` for photos, `record_video` or `upload_video` for videos,","     * `record_audio` or `upload_audio` for audio files, `upload_document` for general files,","     * `find_location` for location data.","     *","     * @param  {Number|String} chatId  Unique identifier for the message recipient","     * @param  {String} action Type of action to broadcast.","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#sendchataction","     */","","  }, {","    key: 'sendChatAction',","    value: function sendChatAction(chatId, action) {","      var form = {","        action: action,","        chat_id: chatId","      };","      return this._request('sendChatAction', { form: form });","    }","","    /**","     * Use this method to kick a user from a group or a supergroup.","     * In the case of supergroups, the user will not be able to return","     * to the group on their own using invite links, etc., unless unbanned","     * first. The bot must be an administrator in the group for this to work.","     * Returns True on success.","     *","     * @param  {Number|String} chatId  Unique identifier for the target group or username of the target supergroup","     * @param  {String} userId  Unique identifier of the target user","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#kickchatmember","     */","","  }, {","    key: 'kickChatMember',","    value: function kickChatMember(chatId, userId) {","      var form = {","        chat_id: chatId,","        user_id: userId","      };","      return this._request('kickChatMember', { form: form });","    }","","    /**","     * Use this method to unban a previously kicked user in a supergroup.","     * The user will not return to the group automatically, but will be","     * able to join via link, etc. The bot must be an administrator in","     * the group for this to work. Returns True on success.","     *","     * @param  {Number|String} chatId  Unique identifier for the target group or username of the target supergroup","     * @param  {String} userId  Unique identifier of the target user","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#unbanchatmember","     */","","  }, {","    key: 'unbanChatMember',","    value: function unbanChatMember(chatId, userId) {","      var form = {","        chat_id: chatId,","        user_id: userId","      };","      return this._request('unbanChatMember', { form: form });","    }","","    /**","     * Use this method to send answers to callback queries sent from","     * inline keyboards. The answer will be displayed to the user as","     * a notification at the top of the chat screen or as an alert.","     * On success, True is returned.","     *","     * @param  {Number|String} callbackQueryId  Unique identifier for the query to be answered","     * @param  {String} text  Text of the notification. If not specified, nothing will be shown to the user","     * @param  {Boolean} showAlert  Whether to show an alert or a notification at the top of the screen","     * @param  {Object} [options] Additional Telegram query options","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#answercallbackquery","     */","","  }, {","    key: 'answerCallbackQuery',","    value: function answerCallbackQuery(callbackQueryId, text, showAlert) {","      var form = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};","","      form.callback_query_id = callbackQueryId;","      form.text = text;","      form.show_alert = showAlert;","      return this._request('answerCallbackQuery', { form: form });","    }","","    /**","     * Use this method to edit text messages sent by the bot or via","     * the bot (for inline bots). On success, the edited Message is","     * returned.","     *","     * Note that you must provide one of chat_id, message_id, or","     * inline_message_id in your request.","     *","     * @param  {String} text  New text of the message","     * @param  {Object} [options] Additional Telegram query options (provide either one of chat_id, message_id, or inline_message_id here)","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#editmessagetext","     */","","  }, {","    key: 'editMessageText',","    value: function editMessageText(text) {","      var form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};","","      form.text = text;","      return this._request('editMessageText', { form: form });","    }","","    /**","     * Use this method to edit captions of messages sent by the","     * bot or via the bot (for inline bots). On success, the","     * edited Message is returned.","     *","     * Note that you must provide one of chat_id, message_id, or","     * inline_message_id in your request.","     *","     * @param  {String} caption  New caption of the message","     * @param  {Object} [options] Additional Telegram query options (provide either one of chat_id, message_id, or inline_message_id here)","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#editmessagecaption","     */","","  }, {","    key: 'editMessageCaption',","    value: function editMessageCaption(caption) {","      var form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};","","      form.caption = caption;","      return this._request('editMessageCaption', { form: form });","    }","","    /**","     * Use this method to edit only the reply markup of messages","     * sent by the bot or via the bot (for inline bots).","     * On success, the edited Message is returned.","     *","     * Note that you must provide one of chat_id, message_id, or","     * inline_message_id in your request.","     *","     * @param  {Object} replyMarkup  A JSON-serialized object for an inline keyboard.","     * @param  {Object} [options] Additional Telegram query options (provide either one of chat_id, message_id, or inline_message_id here)","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#editmessagetext","     */","","  }, {","    key: 'editMessageReplyMarkup',","    value: function editMessageReplyMarkup(replyMarkup) {","      var form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};","","      form.reply_markup = replyMarkup;","      return this._request('editMessageReplyMarkup', { form: form });","    }","","    /**","     * Use this method to get a list of profile pictures for a user.","     * Returns a [UserProfilePhotos](https://core.telegram.org/bots/api#userprofilephotos) object.","     * This method has an [older, compatible signature][getUserProfilePhotos-v0.25.0]","     * that is being deprecated.","     *","     * @param  {Number|String} userId  Unique identifier of the target user","     * @param  {Object} [options] Additional Telegram query options","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#getuserprofilephotos","     */","","  }, {","    key: 'getUserProfilePhotos',","    value: function getUserProfilePhotos(userId) {","      var form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};","","      /* The older method signature was getUserProfilePhotos(userId, offset, limit).","       * We need to ensure backwards-compatibility while maintaining","       * consistency of the method signatures throughout the library */","      if ((typeof form === 'undefined' ? 'undefined' : _typeof(form)) !== 'object') {","        /* eslint-disable no-param-reassign, prefer-rest-params */","        deprecate('The method signature getUserProfilePhotos(userId, offset, limit) has been deprecated since v0.25.0');","        form = {","          offset: arguments[1],","          limit: arguments[2]","        };","        /* eslint-enable no-param-reassign, prefer-rest-params */","      }","      form.user_id = userId;","      return this._request('getUserProfilePhotos', { form: form });","    }","","    /**","     * Send location.","     * Use this method to send point on the map.","     *","     * @param  {Number|String} chatId  Unique identifier for the message recipient","     * @param  {Float} latitude Latitude of location","     * @param  {Float} longitude Longitude of location","     * @param  {Object} [options] Additional Telegram query options","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#sendlocation","     */","","  }, {","    key: 'sendLocation',","    value: function sendLocation(chatId, latitude, longitude) {","      var form = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};","","      form.chat_id = chatId;","      form.latitude = latitude;","      form.longitude = longitude;","      return this._request('sendLocation', { form: form });","    }","","    /**","     * Send venue.","     * Use this method to send information about a venue.","     *","     * @param  {Number|String} chatId  Unique identifier for the message recipient","     * @param  {Float} latitude Latitude of location","     * @param  {Float} longitude Longitude of location","     * @param  {String} title Name of the venue","     * @param  {String} address Address of the venue","     * @param  {Object} [options] Additional Telegram query options","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#sendvenue","     */","","  }, {","    key: 'sendVenue',","    value: function sendVenue(chatId, latitude, longitude, title, address) {","      var form = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};","","      form.chat_id = chatId;","      form.latitude = latitude;","      form.longitude = longitude;","      form.title = title;","      form.address = address;","      return this._request('sendVenue', { form: form });","    }","","    /**","     * Send contact.","     * Use this method to send phone contacts.","     *","     * @param  {Number|String} chatId  Unique identifier for the message recipient","     * @param  {String} phoneNumber Contact's phone number","     * @param  {String} firstName Contact's first name","     * @param  {Object} [options] Additional Telegram query options","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#sendcontact","     */","","  }, {","    key: 'sendContact',","    value: function sendContact(chatId, phoneNumber, firstName) {","      var form = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};","","      form.chat_id = chatId;","      form.phone_number = phoneNumber;","      form.first_name = firstName;","      return this._request('sendContact', { form: form });","    }","","    /**","     * Get file.","     * Use this method to get basic info about a file and prepare it for downloading.","     * Attention: link will be valid for 1 hour.","     *","     * @param  {String} fileId  File identifier to get info about","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#getfile","     */","","  }, {","    key: 'getFile',","    value: function getFile(fileId) {","      var form = { file_id: fileId };","      return this._request('getFile', { form: form });","    }","","    /**","     * Get link for file.","     * Use this method to get link for file for subsequent use.","     * Attention: link will be valid for 1 hour.","     *","     * This method is a sugar extension of the (getFile)[#getfilefileid] method,","     * which returns just path to file on remote server (you will have to manually build full uri after that).","     *","     * @param  {String} fileId  File identifier to get info about","     * @return {Promise} promise Promise which will have *fileURI* in resolve callback","     * @see https://core.telegram.org/bots/api#getfile","     */","","  }, {","    key: 'getFileLink',","    value: function getFileLink(fileId) {","      var _this3 = this;","","      return this.getFile(fileId).then(function (resp) {","        return _this3.options.baseApiUrl + '/file/bot' + _this3.token + '/' + resp.file_path;","      });","    }","","    /**","     * Downloads file in the specified folder.","     * This is just a sugar for (getFile)[#getfilefiled] method","     *","     * @param  {String} fileId  File identifier to get info about","     * @param  {String} downloadDir Absolute path to the folder in which file will be saved","     * @return {Promise} promise Promise, which will have *filePath* of downloaded file in resolve callback","     */","","  }, {","    key: 'downloadFile',","    value: function downloadFile(fileId, downloadDir) {","      return this.getFileLink(fileId).then(function (fileURI) {","        var fileName = fileURI.slice(fileURI.lastIndexOf('/') + 1);","        // TODO: Ensure fileName doesn't contains slashes","        var filePath = downloadDir + '/' + fileName;","","        // properly handles errors and closes all streams","        return Promise.fromCallback(function (next) {","          pump(streamedRequest({ uri: fileURI }), fs.createWriteStream(filePath), next);","        }).return(filePath);","      });","    }","","    /**","     * Register a RegExp to test against an incomming text message.","     * @param  {RegExp}   regexp       RegExp to be executed with `exec`.","     * @param  {Function} callback     Callback will be called with 2 parameters,","     * the `msg` and the result of executing `regexp.exec` on message text.","     */","","  }, {","    key: 'onText',","    value: function onText(regexp, callback) {","      this._textRegexpCallbacks.push({ regexp: regexp, callback: callback });","    }","","    /**","     * Register a reply to wait for a message response.","     * @param  {Number|String}   chatId       The chat id where the message cames from.","     * @param  {Number|String}   messageId    The message id to be replied.","     * @param  {Function} callback     Callback will be called with the reply","     *  message.","     * @return {Number} id                    The ID of the inserted reply listener.","     */","","  }, {","    key: 'onReplyToMessage',","    value: function onReplyToMessage(chatId, messageId, callback) {","      var id = ++this._replyListenerId;","      this._replyListeners.push({","        id: id,","        chatId: chatId,","        messageId: messageId,","        callback: callback","      });","      return id;","    }","","    /**","     * Removes a reply that has been prev. registered for a message response.","     * @param   {Number} replyListenerId      The ID of the reply listener.","     * @return  {Object} deletedListener      The removed reply listener if","     *   found. This object has `id`, `chatId`, `messageId` and `callback`","     *   properties. If not found, returns `null`.","     */","","  }, {","    key: 'removeReplyListener',","    value: function removeReplyListener(replyListenerId) {","      var index = this._replyListeners.findIndex(function (replyListener) {","        return replyListener.id === replyListenerId;","      });","      if (index === -1) {","        return null;","      }","      return this._replyListeners.splice(index, 1)[0];","    }","","    /**","     * Use this method to get up to date information about the chat","     * (current name of the user for one-on-one conversations, current","     * username of a user, group or channel, etc.).","     * @param  {Number|String} chatId Unique identifier for the target chat or username of the target supergroup or channel","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#getchat","     */","","  }, {","    key: 'getChat',","    value: function getChat(chatId) {","      var form = {","        chat_id: chatId","      };","      return this._request('getChat', { form: form });","    }","","    /**","     * Returns the administrators in a chat in form of an Array of `ChatMember` objects.","     * @param  {Number|String} chatId  Unique identifier for the target group or username of the target supergroup","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#getchatadministrators","     */","","  }, {","    key: 'getChatAdministrators',","    value: function getChatAdministrators(chatId) {","      var form = {","        chat_id: chatId","      };","      return this._request('getChatAdministrators', { form: form });","    }","","    /**","     * Use this method to get the number of members in a chat.","     * @param  {Number|String} chatId  Unique identifier for the target group or username of the target supergroup","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#getchatmemberscount","     */","","  }, {","    key: 'getChatMembersCount',","    value: function getChatMembersCount(chatId) {","      var form = {","        chat_id: chatId","      };","      return this._request('getChatMembersCount', { form: form });","    }","","    /**","     * Use this method to get information about a member of a chat.","     * @param  {Number|String} chatId  Unique identifier for the target group or username of the target supergroup","     * @param  {String} userId  Unique identifier of the target user","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#getchatmember","     */","","  }, {","    key: 'getChatMember',","    value: function getChatMember(chatId, userId) {","      var form = {","        chat_id: chatId,","        user_id: userId","      };","      return this._request('getChatMember', { form: form });","    }","","    /**","     * Leave a group, supergroup or channel.","     * @param  {Number|String} chatId Unique identifier for the target group or username of the target supergroup (in the format @supergroupusername)","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#leavechat","     */","","  }, {","    key: 'leaveChat',","    value: function leaveChat(chatId) {","      var form = {","        chat_id: chatId","      };","      return this._request('leaveChat', { form: form });","    }","","    /**","     * Use this method to send a game.","     * @param  {Number|String} chatId Unique identifier for the message recipient","     * @param  {String} gameShortName name of the game to be sent.","     * @param  {Object} [options] Additional Telegram query options","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#sendgame","     */","","  }, {","    key: 'sendGame',","    value: function sendGame(chatId, gameShortName) {","      var form = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};","","      form.chat_id = chatId;","      form.game_short_name = gameShortName;","      return this._request('sendGame', { form: form });","    }","","    /**","     * Use this method to set the score of the specified user in a game.","     * @param  {String} userId  Unique identifier of the target user","     * @param  {Number} score New score value.","     * @param  {Object} [options] Additional Telegram query options","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#setgamescore","     */","","  }, {","    key: 'setGameScore',","    value: function setGameScore(userId, score) {","      var form = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};","","      form.user_id = userId;","      form.score = score;","      return this._request('setGameScore', { form: form });","    }","","    /**","     * Use this method to get data for high score table.","     * @param  {String} userId  Unique identifier of the target user","     * @param  {Object} [options] Additional Telegram query options","     * @return {Promise}","     * @see https://core.telegram.org/bots/api#getgamehighscores","     */","","  }, {","    key: 'getGameHighScores',","    value: function getGameHighScores(userId) {","      var form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};","","      form.user_id = userId;","      return this._request('getGameHighScores', { form: form });","    }","  }]);","","  return TelegramBot;","}(EventEmitter);","","module.exports = TelegramBot;"],"l":{"3":1,"5":53,"7":1,"9":1,"11":1,"14":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"34":1,"37":1,"41":1,"42":1,"44":1,"47":0,"52":0,"100":1,"101":0,"103":0,"105":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"119":0,"120":0,"121":0,"122":0,"126":0,"127":0,"128":0,"129":0,"132":0,"144":1,"147":0,"161":0,"162":0,"163":0,"178":0,"180":0,"181":0,"184":0,"185":0,"188":0,"189":0,"191":0,"192":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"206":0,"209":0,"210":0,"213":0,"216":0,"217":0,"236":0,"237":0,"238":0,"239":0,"242":0,"243":0,"244":0,"251":0,"252":0,"253":0,"254":0,"256":0,"257":0,"264":0,"269":0,"270":0,"271":0,"272":0,"273":0,"281":0,"283":0,"297":0,"299":0,"300":0,"302":0,"303":0,"304":0,"306":0,"319":0,"320":0,"333":0,"334":0,"336":0,"347":0,"360":0,"361":0,"363":0,"364":0,"366":0,"378":0,"379":0,"381":0,"393":0,"405":0,"406":0,"425":0,"430":0,"432":0,"433":0,"434":0,"435":0,"437":0,"440":0,"443":0,"445":0,"446":0,"447":0,"448":0,"449":0,"451":0,"455":0,"468":0,"483":0,"499":0,"504":0,"506":0,"507":0,"515":0,"529":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"558":0,"559":0,"561":0,"564":0,"566":0,"568":0,"570":0,"572":0,"577":0,"578":0,"579":0,"580":0,"581":0,"583":0,"584":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"595":0,"596":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"622":0,"624":0,"625":0,"626":0,"641":0,"643":0,"644":0,"645":0,"661":0,"663":0,"664":0,"665":0,"666":0,"682":0,"684":0,"687":0,"688":0,"689":0,"690":0,"691":0,"693":0,"695":0,"711":0,"713":0,"716":0,"717":0,"718":0,"719":0,"720":0,"722":0,"724":0,"741":0,"742":0,"744":0,"747":0,"748":0,"749":0,"750":0,"751":0,"753":0,"755":0,"756":0,"758":0,"774":0,"776":0,"779":0,"780":0,"781":0,"782":0,"783":0,"785":0,"787":0,"803":0,"805":0,"808":0,"809":0,"810":0,"811":0,"812":0,"814":0,"816":0,"832":0,"834":0,"837":0,"838":0,"839":0,"840":0,"841":0,"843":0,"845":0,"864":0,"868":0,"887":0,"891":0,"909":0,"913":0,"933":0,"935":0,"936":0,"937":0,"938":0,"958":0,"960":0,"961":0,"981":0,"983":0,"984":0,"1004":0,"1006":0,"1007":0,"1025":0,"1030":0,"1032":0,"1033":0,"1039":0,"1040":0,"1058":0,"1060":0,"1061":0,"1062":0,"1063":0,"1083":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1108":0,"1110":0,"1111":0,"1112":0,"1113":0,"1129":0,"1130":0,"1149":0,"1151":0,"1152":0,"1168":0,"1169":0,"1171":0,"1174":0,"1175":0,"1190":0,"1205":0,"1206":0,"1212":0,"1226":0,"1227":0,"1229":0,"1230":0,"1232":0,"1247":0,"1250":0,"1263":0,"1266":0,"1279":0,"1282":0,"1296":0,"1300":0,"1313":0,"1316":0,"1331":0,"1333":0,"1334":0,"1335":0,"1350":0,"1352":0,"1353":0,"1354":0,"1368":0,"1370":0,"1371":0,"1375":1,"1378":1}},"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/node_modules/node-telegram-bot-api/lib/telegramWebHook.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/node_modules/node-telegram-bot-api/lib/telegramWebHook.js","s":{"1":1,"2":1,"3":1,"4":6,"5":6,"6":6,"7":6,"8":6,"9":6,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":0,"18":0,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":1},"b":{"1":[6,6],"2":[6,0],"3":[1,0],"4":[0,1],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":19},"end":{"line":3,"column":31}}},"2":{"name":"defineProperties","line":3,"loc":{"start":{"line":3,"column":33},"end":{"line":3,"column":74}}},"3":{"name":"(anonymous_3)","line":3,"loc":{"start":{"line":3,"column":357},"end":{"line":3,"column":405}}},"4":{"name":"_classCallCheck","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":48}}},"5":{"name":"(anonymous_5)","line":15,"loc":{"start":{"line":15,"column":25},"end":{"line":15,"column":37}}},"6":{"name":"TelegramBotWebHook","line":21,"loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":35}}},"7":{"name":"open","line":62,"loc":{"start":{"line":62,"column":11},"end":{"line":62,"column":27}}},"8":{"name":"(anonymous_8)","line":68,"loc":{"start":{"line":68,"column":25},"end":{"line":68,"column":44}}},"9":{"name":"(anonymous_9)","line":69,"loc":{"start":{"line":69,"column":72},"end":{"line":69,"column":84}}},"10":{"name":"close","line":84,"loc":{"start":{"line":84,"column":11},"end":{"line":84,"column":28}}},"11":{"name":"(anonymous_11)","line":90,"loc":{"start":{"line":90,"column":25},"end":{"line":90,"column":52}}},"12":{"name":"(anonymous_12)","line":91,"loc":{"start":{"line":91,"column":32},"end":{"line":91,"column":49}}},"13":{"name":"isOpen","line":105,"loc":{"start":{"line":105,"column":11},"end":{"line":105,"column":29}}},"14":{"name":"_error","line":122,"loc":{"start":{"line":122,"column":11},"end":{"line":122,"column":34}}},"15":{"name":"_parseBody","line":136,"loc":{"start":{"line":136,"column":11},"end":{"line":136,"column":44}}},"16":{"name":"_requestListener","line":160,"loc":{"start":{"line":160,"column":11},"end":{"line":160,"column":47}}},"17":{"name":"(anonymous_17)","line":170,"loc":{"start":{"line":170,"column":53},"end":{"line":170,"column":65}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":564}},"2":{"start":{"line":3,"column":33},"end":{"line":3,"column":349}},"3":{"start":{"line":3,"column":76},"end":{"line":3,"column":347}},"4":{"start":{"line":3,"column":117},"end":{"line":3,"column":143}},"5":{"start":{"line":3,"column":144},"end":{"line":3,"column":199}},"6":{"start":{"line":3,"column":200},"end":{"line":3,"column":231}},"7":{"start":{"line":3,"column":232},"end":{"line":3,"column":286}},"8":{"start":{"line":3,"column":259},"end":{"line":3,"column":286}},"9":{"start":{"line":3,"column":287},"end":{"line":3,"column":345}},"10":{"start":{"line":3,"column":350},"end":{"line":3,"column":559}},"11":{"start":{"line":3,"column":407},"end":{"line":3,"column":475}},"12":{"start":{"line":3,"column":423},"end":{"line":3,"column":475}},"13":{"start":{"line":3,"column":476},"end":{"line":3,"column":536}},"14":{"start":{"line":3,"column":493},"end":{"line":3,"column":536}},"15":{"start":{"line":3,"column":537},"end":{"line":3,"column":556}},"16":{"start":{"line":5,"column":0},"end":{"line":5,"column":153}},"17":{"start":{"line":5,"column":50},"end":{"line":5,"column":151}},"18":{"start":{"line":5,"column":92},"end":{"line":5,"column":149}},"19":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"20":{"start":{"line":8,"column":0},"end":{"line":8,"column":54}},"21":{"start":{"line":9,"column":0},"end":{"line":9,"column":29}},"22":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}},"23":{"start":{"line":11,"column":0},"end":{"line":11,"column":23}},"24":{"start":{"line":12,"column":0},"end":{"line":12,"column":23}},"25":{"start":{"line":13,"column":0},"end":{"line":13,"column":34}},"26":{"start":{"line":15,"column":0},"end":{"line":187,"column":4}},"27":{"start":{"line":21,"column":2},"end":{"line":52,"column":3}},"28":{"start":{"line":22,"column":4},"end":{"line":22,"column":46}},"29":{"start":{"line":24,"column":4},"end":{"line":24,"column":19}},"30":{"start":{"line":25,"column":4},"end":{"line":25,"column":87}},"31":{"start":{"line":26,"column":4},"end":{"line":26,"column":55}},"32":{"start":{"line":27,"column":4},"end":{"line":27,"column":50}},"33":{"start":{"line":28,"column":4},"end":{"line":28,"column":50}},"34":{"start":{"line":29,"column":4},"end":{"line":29,"column":76}},"35":{"start":{"line":30,"column":4},"end":{"line":30,"column":64}},"36":{"start":{"line":31,"column":4},"end":{"line":31,"column":27}},"37":{"start":{"line":32,"column":4},"end":{"line":32,"column":23}},"38":{"start":{"line":33,"column":4},"end":{"line":33,"column":61}},"39":{"start":{"line":34,"column":4},"end":{"line":34,"column":49}},"40":{"start":{"line":36,"column":4},"end":{"line":51,"column":5}},"41":{"start":{"line":37,"column":6},"end":{"line":37,"column":51}},"42":{"start":{"line":38,"column":6},"end":{"line":38,"column":65}},"43":{"start":{"line":39,"column":6},"end":{"line":39,"column":67}},"44":{"start":{"line":40,"column":6},"end":{"line":40,"column":86}},"45":{"start":{"line":41,"column":11},"end":{"line":51,"column":5}},"46":{"start":{"line":42,"column":6},"end":{"line":42,"column":46}},"47":{"start":{"line":43,"column":6},"end":{"line":43,"column":65}},"48":{"start":{"line":44,"column":6},"end":{"line":44,"column":86}},"49":{"start":{"line":45,"column":11},"end":{"line":51,"column":5}},"50":{"start":{"line":46,"column":6},"end":{"line":46,"column":48}},"51":{"start":{"line":47,"column":6},"end":{"line":47,"column":86}},"52":{"start":{"line":49,"column":6},"end":{"line":49,"column":36}},"53":{"start":{"line":50,"column":6},"end":{"line":50,"column":65}},"54":{"start":{"line":60,"column":2},"end":{"line":184,"column":6}},"55":{"start":{"line":63,"column":6},"end":{"line":63,"column":23}},"56":{"start":{"line":65,"column":6},"end":{"line":67,"column":7}},"57":{"start":{"line":66,"column":8},"end":{"line":66,"column":33}},"58":{"start":{"line":68,"column":6},"end":{"line":74,"column":9}},"59":{"start":{"line":69,"column":8},"end":{"line":73,"column":11}},"60":{"start":{"line":70,"column":10},"end":{"line":70,"column":68}},"61":{"start":{"line":71,"column":10},"end":{"line":71,"column":29}},"62":{"start":{"line":72,"column":10},"end":{"line":72,"column":27}},"63":{"start":{"line":85,"column":6},"end":{"line":85,"column":24}},"64":{"start":{"line":87,"column":6},"end":{"line":89,"column":7}},"65":{"start":{"line":88,"column":8},"end":{"line":88,"column":33}},"66":{"start":{"line":90,"column":6},"end":{"line":96,"column":9}},"67":{"start":{"line":91,"column":8},"end":{"line":95,"column":11}},"68":{"start":{"line":92,"column":10},"end":{"line":92,"column":42}},"69":{"start":{"line":92,"column":21},"end":{"line":92,"column":42}},"70":{"start":{"line":93,"column":10},"end":{"line":93,"column":31}},"71":{"start":{"line":94,"column":10},"end":{"line":94,"column":27}},"72":{"start":{"line":111,"column":6},"end":{"line":111,"column":24}},"73":{"start":{"line":123,"column":6},"end":{"line":125,"column":7}},"74":{"start":{"line":124,"column":8},"end":{"line":124,"column":36}},"75":{"start":{"line":126,"column":6},"end":{"line":126,"column":51}},"76":{"start":{"line":137,"column":6},"end":{"line":139,"column":7}},"77":{"start":{"line":138,"column":8},"end":{"line":138,"column":57}},"78":{"start":{"line":141,"column":6},"end":{"line":141,"column":24}},"79":{"start":{"line":142,"column":6},"end":{"line":146,"column":7}},"80":{"start":{"line":143,"column":8},"end":{"line":143,"column":43}},"81":{"start":{"line":145,"column":8},"end":{"line":145,"column":70}},"82":{"start":{"line":148,"column":6},"end":{"line":148,"column":42}},"83":{"start":{"line":161,"column":6},"end":{"line":161,"column":48}},"84":{"start":{"line":162,"column":6},"end":{"line":162,"column":56}},"85":{"start":{"line":164,"column":6},"end":{"line":182,"column":7}},"86":{"start":{"line":165,"column":8},"end":{"line":173,"column":9}},"87":{"start":{"line":166,"column":10},"end":{"line":166,"column":49}},"88":{"start":{"line":167,"column":10},"end":{"line":167,"column":31}},"89":{"start":{"line":168,"column":10},"end":{"line":168,"column":20}},"90":{"start":{"line":170,"column":10},"end":{"line":172,"column":13}},"91":{"start":{"line":171,"column":12},"end":{"line":171,"column":33}},"92":{"start":{"line":174,"column":13},"end":{"line":182,"column":7}},"93":{"start":{"line":175,"column":8},"end":{"line":175,"column":45}},"94":{"start":{"line":176,"column":8},"end":{"line":176,"column":29}},"95":{"start":{"line":177,"column":8},"end":{"line":177,"column":22}},"96":{"start":{"line":179,"column":8},"end":{"line":179,"column":46}},"97":{"start":{"line":180,"column":8},"end":{"line":180,"column":29}},"98":{"start":{"line":181,"column":8},"end":{"line":181,"column":18}},"99":{"start":{"line":186,"column":2},"end":{"line":186,"column":28}},"100":{"start":{"line":189,"column":0},"end":{"line":189,"column":36}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":168},"end":{"line":3,"column":189}},{"start":{"line":3,"column":193},"end":{"line":3,"column":198}}]},"2":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":232},"end":{"line":3,"column":232}},{"start":{"line":3,"column":232},"end":{"line":3,"column":232}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":407},"end":{"line":3,"column":407}},{"start":{"line":3,"column":407},"end":{"line":3,"column":407}}]},"4":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":476},"end":{"line":3,"column":476}},{"start":{"line":3,"column":476},"end":{"line":3,"column":476}}]},"5":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":50}},{"start":{"line":5,"column":50},"end":{"line":5,"column":50}}]},"6":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":62},"end":{"line":25,"column":64}},{"start":{"line":25,"column":67},"end":{"line":25,"column":86}}]},"7":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":24},"end":{"line":26,"column":41}},{"start":{"line":26,"column":45},"end":{"line":26,"column":54}}]},"8":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":24},"end":{"line":27,"column":41}},{"start":{"line":27,"column":45},"end":{"line":27,"column":49}}]},"9":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":25},"end":{"line":28,"column":43}},{"start":{"line":28,"column":47},"end":{"line":28,"column":49}}]},"10":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":34},"end":{"line":29,"column":61}},{"start":{"line":29,"column":65},"end":{"line":29,"column":75}}]},"11":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"12":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":24}},{"start":{"line":36,"column":28},"end":{"line":36,"column":45}}]},"13":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":11},"end":{"line":41,"column":11}},{"start":{"line":41,"column":11},"end":{"line":41,"column":11}}]},"14":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":11},"end":{"line":45,"column":11}},{"start":{"line":45,"column":11},"end":{"line":45,"column":11}}]},"15":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":6},"end":{"line":65,"column":6}},{"start":{"line":65,"column":6},"end":{"line":65,"column":6}}]},"16":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":6},"end":{"line":87,"column":6}},{"start":{"line":87,"column":6},"end":{"line":87,"column":6}}]},"17":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":10},"end":{"line":92,"column":10}},{"start":{"line":92,"column":10},"end":{"line":92,"column":10}}]},"18":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":6},"end":{"line":123,"column":6}},{"start":{"line":123,"column":6},"end":{"line":123,"column":6}}]},"19":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":6},"end":{"line":137,"column":6}},{"start":{"line":137,"column":6},"end":{"line":137,"column":6}}]},"20":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":6},"end":{"line":164,"column":6}},{"start":{"line":164,"column":6},"end":{"line":164,"column":6}}]},"21":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":8},"end":{"line":165,"column":8}},{"start":{"line":165,"column":8},"end":{"line":165,"column":8}}]},"22":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":13},"end":{"line":174,"column":13}},{"start":{"line":174,"column":13},"end":{"line":174,"column":13}}]}},"code":["'use strict';","","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","var errors = require('./errors');","var debug = require('debug')('node-telegram-bot-api');","var https = require('https');","var http = require('http');","var fs = require('fs');","var bl = require('bl');","var Promise = require('bluebird');","","var TelegramBotWebHook = function () {","  /**","   * Sets up a webhook to receive updates","   * @param  {TelegramBot} bot","   * @see https://core.telegram.org/bots/api#getting-updates","   */","  function TelegramBotWebHook(bot) {","    _classCallCheck(this, TelegramBotWebHook);","","    this.bot = bot;","    this.options = typeof bot.options.webHook === 'boolean' ? {} : bot.options.webHook;","    this.options.host = this.options.host || '0.0.0.0';","    this.options.port = this.options.port || 8443;","    this.options.https = this.options.https || {};","    this.options.healthEndpoint = this.options.healthEndpoint || '/healthz';","    this._healthRegex = new RegExp(this.options.healthEndpoint);","    this._webServer = null;","    this._open = false;","    this._requestListener = this._requestListener.bind(this);","    this._parseBody = this._parseBody.bind(this);","","    if (this.options.key && this.options.cert) {","      debug('HTTPS WebHook enabled (by key/cert)');","      this.options.https.key = fs.readFileSync(this.options.key);","      this.options.https.cert = fs.readFileSync(this.options.cert);","      this._webServer = https.createServer(this.options.https, this._requestListener);","    } else if (this.options.pfx) {","      debug('HTTPS WebHook enabled (by pfx)');","      this.options.https.pfx = fs.readFileSync(this.options.pfx);","      this._webServer = https.createServer(this.options.https, this._requestListener);","    } else if (Object.keys(this.options.https).length) {","      debug('HTTPS WebHook enabled by (https)');","      this._webServer = https.createServer(this.options.https, this._requestListener);","    } else {","      debug('HTTP WebHook enabled');","      this._webServer = http.createServer(this._requestListener);","    }","  }","","  /**","   * Open WebHook by listening on the port","   * @return {Promise}","   */","","","  _createClass(TelegramBotWebHook, [{","    key: 'open',","    value: function open() {","      var _this = this;","","      if (this.isOpen()) {","        return Promise.resolve();","      }","      return new Promise(function (resolve) {","        _this._webServer.listen(_this.options.port, _this.options.host, function () {","          debug('WebHook listening on port %s', _this.options.port);","          _this._open = true;","          return resolve();","        });","      });","    }","","    /**","     * Close the webHook","     * @return {Promise}","     */","","  }, {","    key: 'close',","    value: function close() {","      var _this2 = this;","","      if (!this.isOpen()) {","        return Promise.resolve();","      }","      return new Promise(function (resolve, reject) {","        _this2._webServer.close(function (error) {","          if (error) return reject(error);","          _this2._open = false;","          return resolve();","        });","      });","    }","","    /**","     * Return `true` if server is listening. Otherwise, `false`.","     */","","  }, {","    key: 'isOpen',","    value: function isOpen() {","      // NOTE: Since `http.Server.listening` was added in v5.7.0","      // and we still need to support Node v4,","      // we are going to fallback to 'this._open'.","      // The following LOC would suffice for newer versions of Node.js","      // return this._webServer.listening;","      return this._open;","    }","","    /**","     * Handle error thrown during processing of webhook request.","     * @private","     * @param  {Error} error","     */","","  }, {","    key: '_error',","    value: function _error(error) {","      if (!this.bot.listeners('webhook_error').length) {","        return console.error(error); // eslint-disable-line no-console","      }","      return this.bot.emit('webhook_error', error);","    }","","    /**","     * Handle request body by passing it to 'callback'","     * @private","     */","","  }, {","    key: '_parseBody',","    value: function _parseBody(error, body) {","      if (error) {","        return this._error(new errors.FatalError(error));","      }","","      var data = void 0;","      try {","        data = JSON.parse(body.toString());","      } catch (parseError) {","        return this._error(new errors.ParseError(parseError.message));","      }","","      return this.bot.processUpdate(data);","    }","","    /**","     * Listener for 'request' event on server","     * @private","     * @see https://nodejs.org/docs/latest/api/http.html#http_http_createserver_requestlistener","     * @see https://nodejs.org/docs/latest/api/https.html#https_https_createserver_options_requestlistener","     */","","  }, {","    key: '_requestListener',","    value: function _requestListener(req, res) {","      debug('WebHook request URL: %s', req.url);","      debug('WebHook request headers: %j', req.headers);","","      if (req.url.indexOf(this.bot.token) !== -1) {","        if (req.method !== 'POST') {","          debug('WebHook request isn\\'t a POST');","          res.statusCode = 418; // I'm a teabot!","          res.end();","        } else {","          req.pipe(bl(this._parseBody)).on('finish', function () {","            return res.end('OK');","          });","        }","      } else if (this._healthRegex.test(req.url)) {","        debug('WebHook health check passed');","        res.statusCode = 200;","        res.end('OK');","      } else {","        debug('WebHook request unauthorized');","        res.statusCode = 401;","        res.end();","      }","    }","  }]);","","  return TelegramBotWebHook;","}();","","module.exports = TelegramBotWebHook;"],"l":{"3":6,"5":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"15":1,"21":1,"22":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"49":0,"50":0,"60":1,"63":0,"65":0,"66":0,"68":0,"69":0,"70":0,"71":0,"72":0,"85":0,"87":0,"88":0,"90":0,"91":0,"92":0,"93":0,"94":0,"111":0,"123":0,"124":0,"126":0,"137":0,"138":0,"141":0,"142":0,"143":0,"145":0,"148":0,"161":0,"162":0,"164":0,"165":0,"166":0,"167":0,"168":0,"170":0,"171":0,"174":0,"175":0,"176":0,"177":0,"179":0,"180":0,"181":0,"186":1,"189":1}},"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/node_modules/node-telegram-bot-api/lib/telegramPolling.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-telegram-bot-api/node_modules/node-telegram-bot-api/lib/telegramPolling.js","s":{"1":1,"2":0,"3":0,"4":1,"5":1,"6":1,"7":6,"8":6,"9":6,"10":6,"11":6,"12":6,"13":1,"14":1,"15":1,"16":1,"17":0,"18":1,"19":1,"20":0,"21":0,"22":1,"23":1,"24":1,"25":1,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0,0,0],"5":[6,6],"6":[6,0],"7":[1,0],"8":[0,1],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"f":{"1":0,"2":0,"3":1,"4":1,"5":1,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":84},"end":{"line":3,"column":99}}},"2":{"name":"(anonymous_2)","line":3,"loc":{"start":{"line":3,"column":124},"end":{"line":3,"column":139}}},"3":{"name":"(anonymous_3)","line":5,"loc":{"start":{"line":5,"column":19},"end":{"line":5,"column":31}}},"4":{"name":"defineProperties","line":5,"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":74}}},"5":{"name":"(anonymous_5)","line":5,"loc":{"start":{"line":5,"column":357},"end":{"line":5,"column":405}}},"6":{"name":"_classCallCheck","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":48}}},"7":{"name":"(anonymous_7)","line":13,"loc":{"start":{"line":13,"column":25},"end":{"line":13,"column":37}}},"8":{"name":"TelegramBotPolling","line":19,"loc":{"start":{"line":19,"column":2},"end":{"line":19,"column":35}}},"9":{"name":"start","line":49,"loc":{"start":{"line":49,"column":11},"end":{"line":49,"column":28}}},"10":{"name":"(anonymous_10)","line":61,"loc":{"start":{"line":61,"column":16},"end":{"line":61,"column":28}}},"11":{"name":"stop","line":78,"loc":{"start":{"line":78,"column":11},"end":{"line":78,"column":27}}},"12":{"name":"(anonymous_12)","line":95,"loc":{"start":{"line":95,"column":33},"end":{"line":95,"column":45}}},"13":{"name":"isPolling","line":106,"loc":{"start":{"line":106,"column":11},"end":{"line":106,"column":32}}},"14":{"name":"_polling","line":118,"loc":{"start":{"line":118,"column":11},"end":{"line":118,"column":31}}},"15":{"name":"(anonymous_15)","line":121,"loc":{"start":{"line":121,"column":50},"end":{"line":121,"column":69}}},"16":{"name":"(anonymous_16)","line":124,"loc":{"start":{"line":124,"column":24},"end":{"line":124,"column":42}}},"17":{"name":"(anonymous_17)","line":130,"loc":{"start":{"line":130,"column":15},"end":{"line":130,"column":30}}},"18":{"name":"(anonymous_18)","line":138,"loc":{"start":{"line":138,"column":17},"end":{"line":138,"column":29}}},"19":{"name":"(anonymous_19)","line":143,"loc":{"start":{"line":143,"column":46},"end":{"line":143,"column":58}}},"20":{"name":"_unsetWebHook","line":160,"loc":{"start":{"line":160,"column":11},"end":{"line":160,"column":36}}},"21":{"name":"_getUpdates","line":171,"loc":{"start":{"line":171,"column":11},"end":{"line":171,"column":34}}},"22":{"name":"(anonymous_22)","line":175,"loc":{"start":{"line":175,"column":60},"end":{"line":175,"column":75}}},"23":{"name":"(anonymous_23)","line":177,"loc":{"start":{"line":177,"column":45},"end":{"line":177,"column":57}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":269}},"2":{"start":{"line":3,"column":101},"end":{"line":3,"column":119}},"3":{"start":{"line":3,"column":141},"end":{"line":3,"column":266}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":564}},"5":{"start":{"line":5,"column":33},"end":{"line":5,"column":349}},"6":{"start":{"line":5,"column":76},"end":{"line":5,"column":347}},"7":{"start":{"line":5,"column":117},"end":{"line":5,"column":143}},"8":{"start":{"line":5,"column":144},"end":{"line":5,"column":199}},"9":{"start":{"line":5,"column":200},"end":{"line":5,"column":231}},"10":{"start":{"line":5,"column":232},"end":{"line":5,"column":286}},"11":{"start":{"line":5,"column":259},"end":{"line":5,"column":286}},"12":{"start":{"line":5,"column":287},"end":{"line":5,"column":345}},"13":{"start":{"line":5,"column":350},"end":{"line":5,"column":559}},"14":{"start":{"line":5,"column":407},"end":{"line":5,"column":475}},"15":{"start":{"line":5,"column":423},"end":{"line":5,"column":475}},"16":{"start":{"line":5,"column":476},"end":{"line":5,"column":536}},"17":{"start":{"line":5,"column":493},"end":{"line":5,"column":536}},"18":{"start":{"line":5,"column":537},"end":{"line":5,"column":556}},"19":{"start":{"line":7,"column":0},"end":{"line":7,"column":153}},"20":{"start":{"line":7,"column":50},"end":{"line":7,"column":151}},"21":{"start":{"line":7,"column":92},"end":{"line":7,"column":149}},"22":{"start":{"line":9,"column":0},"end":{"line":9,"column":54}},"23":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"24":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}},"25":{"start":{"line":13,"column":0},"end":{"line":187,"column":4}},"26":{"start":{"line":19,"column":2},"end":{"line":37,"column":3}},"27":{"start":{"line":20,"column":4},"end":{"line":20,"column":46}},"28":{"start":{"line":22,"column":4},"end":{"line":22,"column":19}},"29":{"start":{"line":23,"column":4},"end":{"line":23,"column":87}},"30":{"start":{"line":24,"column":4},"end":{"line":24,"column":100}},"31":{"start":{"line":25,"column":4},"end":{"line":25,"column":95}},"32":{"start":{"line":26,"column":4},"end":{"line":26,"column":113}},"33":{"start":{"line":27,"column":4},"end":{"line":32,"column":5}},"34":{"start":{"line":28,"column":6},"end":{"line":28,"column":98}},"35":{"start":{"line":29,"column":6},"end":{"line":29,"column":57}},"36":{"start":{"line":31,"column":6},"end":{"line":31,"column":39}},"37":{"start":{"line":33,"column":4},"end":{"line":33,"column":25}},"38":{"start":{"line":34,"column":4},"end":{"line":34,"column":29}},"39":{"start":{"line":35,"column":4},"end":{"line":35,"column":24}},"40":{"start":{"line":36,"column":4},"end":{"line":36,"column":32}},"41":{"start":{"line":47,"column":2},"end":{"line":184,"column":6}},"42":{"start":{"line":50,"column":6},"end":{"line":50,"column":23}},"43":{"start":{"line":52,"column":6},"end":{"line":52,"column":91}},"44":{"start":{"line":54,"column":6},"end":{"line":64,"column":7}},"45":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"46":{"start":{"line":56,"column":10},"end":{"line":56,"column":35}},"47":{"start":{"line":58,"column":8},"end":{"line":63,"column":11}},"48":{"start":{"line":62,"column":10},"end":{"line":62,"column":34}},"49":{"start":{"line":65,"column":6},"end":{"line":65,"column":29}},"50":{"start":{"line":79,"column":6},"end":{"line":79,"column":24}},"51":{"start":{"line":81,"column":6},"end":{"line":81,"column":91}},"52":{"start":{"line":83,"column":6},"end":{"line":85,"column":7}},"53":{"start":{"line":84,"column":8},"end":{"line":84,"column":33}},"54":{"start":{"line":86,"column":6},"end":{"line":86,"column":42}},"55":{"start":{"line":87,"column":6},"end":{"line":87,"column":31}},"56":{"start":{"line":88,"column":6},"end":{"line":88,"column":41}},"57":{"start":{"line":89,"column":6},"end":{"line":93,"column":7}},"58":{"start":{"line":90,"column":8},"end":{"line":90,"column":54}},"59":{"start":{"line":91,"column":8},"end":{"line":91,"column":35}},"60":{"start":{"line":92,"column":8},"end":{"line":92,"column":33}},"61":{"start":{"line":94,"column":6},"end":{"line":94,"column":25}},"62":{"start":{"line":95,"column":6},"end":{"line":97,"column":9}},"63":{"start":{"line":96,"column":8},"end":{"line":96,"column":30}},"64":{"start":{"line":107,"column":6},"end":{"line":107,"column":33}},"65":{"start":{"line":119,"column":6},"end":{"line":119,"column":24}},"66":{"start":{"line":121,"column":6},"end":{"line":147,"column":9}},"67":{"start":{"line":122,"column":8},"end":{"line":122,"column":40}},"68":{"start":{"line":123,"column":8},"end":{"line":123,"column":42}},"69":{"start":{"line":124,"column":8},"end":{"line":128,"column":11}},"70":{"start":{"line":125,"column":10},"end":{"line":125,"column":62}},"71":{"start":{"line":126,"column":10},"end":{"line":126,"column":68}},"72":{"start":{"line":127,"column":10},"end":{"line":127,"column":43}},"73":{"start":{"line":129,"column":8},"end":{"line":129,"column":20}},"74":{"start":{"line":131,"column":8},"end":{"line":131,"column":48}},"75":{"start":{"line":132,"column":8},"end":{"line":136,"column":9}},"76":{"start":{"line":133,"column":10},"end":{"line":133,"column":48}},"77":{"start":{"line":135,"column":10},"end":{"line":135,"column":29}},"78":{"start":{"line":137,"column":8},"end":{"line":137,"column":20}},"79":{"start":{"line":139,"column":8},"end":{"line":146,"column":9}},"80":{"start":{"line":140,"column":10},"end":{"line":140,"column":39}},"81":{"start":{"line":142,"column":10},"end":{"line":142,"column":74}},"82":{"start":{"line":143,"column":10},"end":{"line":145,"column":38}},"83":{"start":{"line":144,"column":12},"end":{"line":144,"column":37}},"84":{"start":{"line":148,"column":6},"end":{"line":148,"column":31}},"85":{"start":{"line":161,"column":6},"end":{"line":161,"column":33}},"86":{"start":{"line":162,"column":6},"end":{"line":162,"column":45}},"87":{"start":{"line":172,"column":6},"end":{"line":172,"column":24}},"88":{"start":{"line":174,"column":6},"end":{"line":174,"column":61}},"89":{"start":{"line":175,"column":6},"end":{"line":182,"column":9}},"90":{"start":{"line":176,"column":8},"end":{"line":180,"column":9}},"91":{"start":{"line":177,"column":10},"end":{"line":179,"column":13}},"92":{"start":{"line":178,"column":12},"end":{"line":178,"column":64}},"93":{"start":{"line":181,"column":8},"end":{"line":181,"column":18}},"94":{"start":{"line":186,"column":2},"end":{"line":186,"column":28}},"95":{"start":{"line":189,"column":0},"end":{"line":189,"column":36}}},"branchMap":{"1":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":84},"end":{"line":3,"column":121}},{"start":{"line":3,"column":124},"end":{"line":3,"column":268}}]},"2":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":14},"end":{"line":3,"column":42}},{"start":{"line":3,"column":46},"end":{"line":3,"column":81}}]},"3":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":244},"end":{"line":3,"column":252}},{"start":{"line":3,"column":255},"end":{"line":3,"column":265}}]},"4":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":148},"end":{"line":3,"column":151}},{"start":{"line":3,"column":155},"end":{"line":3,"column":183}},{"start":{"line":3,"column":187},"end":{"line":3,"column":213}},{"start":{"line":3,"column":217},"end":{"line":3,"column":241}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":168},"end":{"line":5,"column":189}},{"start":{"line":5,"column":193},"end":{"line":5,"column":198}}]},"6":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":232},"end":{"line":5,"column":232}},{"start":{"line":5,"column":232},"end":{"line":5,"column":232}}]},"7":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":407},"end":{"line":5,"column":407}},{"start":{"line":5,"column":407},"end":{"line":5,"column":407}}]},"8":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":476},"end":{"line":5,"column":476}},{"start":{"line":5,"column":476},"end":{"line":5,"column":476}}]},"9":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":50},"end":{"line":7,"column":50}},{"start":{"line":7,"column":50},"end":{"line":7,"column":50}}]},"10":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":62},"end":{"line":23,"column":64}},{"start":{"line":23,"column":67},"end":{"line":23,"column":86}}]},"11":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":72},"end":{"line":24,"column":93}},{"start":{"line":24,"column":96},"end":{"line":24,"column":99}}]},"12":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":70},"end":{"line":25,"column":89}},{"start":{"line":25,"column":92},"end":{"line":25,"column":94}}]},"13":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":82},"end":{"line":26,"column":108}},{"start":{"line":26,"column":111},"end":{"line":26,"column":112}}]},"14":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"15":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":73},"end":{"line":52,"column":85}},{"start":{"line":52,"column":88},"end":{"line":52,"column":90}}]},"16":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":20},"end":{"line":52,"column":40}},{"start":{"line":52,"column":44},"end":{"line":52,"column":70}}]},"17":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":6},"end":{"line":54,"column":6}},{"start":{"line":54,"column":6},"end":{"line":54,"column":6}}]},"18":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"19":{"line":81,"type":"cond-expr","locations":[{"start":{"line":81,"column":73},"end":{"line":81,"column":85}},{"start":{"line":81,"column":88},"end":{"line":81,"column":90}}]},"20":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":20},"end":{"line":81,"column":40}},{"start":{"line":81,"column":44},"end":{"line":81,"column":70}}]},"21":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":6}},{"start":{"line":83,"column":6},"end":{"line":83,"column":6}}]},"22":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":6},"end":{"line":89,"column":6}},{"start":{"line":89,"column":6},"end":{"line":89,"column":6}}]},"23":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":21},"end":{"line":90,"column":35}},{"start":{"line":90,"column":39},"end":{"line":90,"column":53}}]},"24":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":132,"column":8}},{"start":{"line":132,"column":8},"end":{"line":132,"column":8}}]},"25":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":139,"column":8}},{"start":{"line":139,"column":8},"end":{"line":139,"column":8}}]},"26":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":8},"end":{"line":176,"column":8}},{"start":{"line":176,"column":8},"end":{"line":176,"column":8}}]},"27":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":12},"end":{"line":176,"column":24}},{"start":{"line":176,"column":28},"end":{"line":176,"column":77}}]}},"code":["'use strict';","","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };","","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","var debug = require('debug')('node-telegram-bot-api');","var deprecate = require('depd')('node-telegram-bot-api');","var ANOTHER_WEB_HOOK_USED = 409;","","var TelegramBotPolling = function () {","  /**","   * Handles polling against the Telegram servers.","   * @param  {TelegramBot} bot","   * @see https://core.telegram.org/bots/api#getting-updates","   */","  function TelegramBotPolling(bot) {","    _classCallCheck(this, TelegramBotPolling);","","    this.bot = bot;","    this.options = typeof bot.options.polling === 'boolean' ? {} : bot.options.polling;","    this.options.interval = typeof this.options.interval === 'number' ? this.options.interval : 300;","    this.options.params = _typeof(this.options.params) === 'object' ? this.options.params : {};","    this.options.params.offset = typeof this.options.params.offset === 'number' ? this.options.params.offset : 0;","    if (typeof this.options.timeout === 'number') {","      deprecate('`options.polling.timeout` is deprecated. Use `options.polling.params` instead.');","      this.options.params.timeout = this.options.timeout;","    } else {","      this.options.params.timeout = 10;","    }","    this._lastUpdate = 0;","    this._lastRequest = null;","    this._abort = false;","    this._pollingTimeout = null;","  }","","  /**","   * Start polling","   * @param  {Object} [options]","   * @param  {Object} [options.restart]","   * @return {Promise}","   */","","","  _createClass(TelegramBotPolling, [{","    key: 'start',","    value: function start() {","      var _this = this;","","      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};","","      if (this._lastRequest) {","        if (!options.restart) {","          return Promise.resolve();","        }","        return this.stop({","          cancel: true,","          reason: 'Polling restart'","        }).then(function () {","          return _this._polling();","        });","      }","      return this._polling();","    }","","    /**","     * Stop polling","     * @param  {Object} [options]","     * @param  {Boolean} [options.cancel] Cancel current request","     * @param  {String} [options.reason] Reason for stopping polling","     * @return {Promise}","     */","","  }, {","    key: 'stop',","    value: function stop() {","      var _this2 = this;","","      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};","","      if (!this._lastRequest) {","        return Promise.resolve();","      }","      var lastRequest = this._lastRequest;","      this._lastRequest = null;","      clearTimeout(this._pollingTimeout);","      if (options.cancel) {","        var reason = options.reason || 'Polling stop';","        lastRequest.cancel(reason);","        return Promise.resolve();","      }","      this._abort = true;","      return lastRequest.finally(function () {","        _this2._abort = false;","      });","    }","","    /**","     * Return `true` if is polling. Otherwise, `false`.","     */","","  }, {","    key: 'isPolling',","    value: function isPolling() {","      return !!this._lastRequest;","    }","","    /**","     * Invokes polling (with recursion!)","     * @return {Promise} promise of the current request","     * @private","     */","","  }, {","    key: '_polling',","    value: function _polling() {","      var _this3 = this;","","      this._lastRequest = this._getUpdates().then(function (updates) {","        _this3._lastUpdate = Date.now();","        debug('polling data %j', updates);","        updates.forEach(function (update) {","          _this3.options.params.offset = update.update_id + 1;","          debug('updated offset: %s', _this3.options.params.offset);","          _this3.bot.processUpdate(update);","        });","        return null;","      }).catch(function (err) {","        debug('polling error: %s', err.message);","        if (_this3.bot.listeners('polling_error').length) {","          _this3.bot.emit('polling_error', err);","        } else {","          console.error(err); // eslint-disable-line no-console","        }","        return null;","      }).finally(function () {","        if (_this3._abort) {","          debug('Polling is aborted!');","        } else {","          debug('setTimeout for %s miliseconds', _this3.options.interval);","          _this3._pollingTimeout = setTimeout(function () {","            return _this3._polling();","          }, _this3.options.interval);","        }","      });","      return this._lastRequest;","    }","","    /**","     * Unset current webhook. Used when we detect that a webhook has been set","     * and we are trying to poll. Polling and WebHook are mutually exclusive.","     * @see https://core.telegram.org/bots/api#getting-updates","     * @private","     */","","  }, {","    key: '_unsetWebHook',","    value: function _unsetWebHook() {","      debug('unsetting webhook');","      return this.bot._request('setWebHook');","    }","","    /**","     * Retrieve updates","     */","","  }, {","    key: '_getUpdates',","    value: function _getUpdates() {","      var _this4 = this;","","      debug('polling with options: %j', this.options.params);","      return this.bot.getUpdates(this.options.params).catch(function (err) {","        if (err.response && err.response.statusCode === ANOTHER_WEB_HOOK_USED) {","          return _this4._unsetWebHook().then(function () {","            return _this4.bot.getUpdates(_this4.options.params);","          });","        }","        throw err;","      });","    }","  }]);","","  return TelegramBotPolling;","}();","","module.exports = TelegramBotPolling;"],"l":{"3":1,"5":6,"7":1,"9":1,"10":1,"11":1,"13":1,"19":1,"20":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"31":0,"33":0,"34":0,"35":0,"36":0,"47":1,"50":0,"52":0,"54":0,"55":0,"56":0,"58":0,"62":0,"65":0,"79":0,"81":0,"83":0,"84":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"94":0,"95":0,"96":0,"107":0,"119":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"129":0,"131":0,"132":0,"133":0,"135":0,"137":0,"139":0,"140":0,"142":0,"143":0,"144":0,"148":0,"161":0,"162":0,"172":0,"174":0,"175":0,"176":0,"177":0,"178":0,"181":0,"186":1,"189":1}}}